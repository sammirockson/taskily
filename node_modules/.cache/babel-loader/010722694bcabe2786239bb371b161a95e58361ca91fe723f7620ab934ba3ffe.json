{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tiptap = _resolveComponent(\"el-tiptap\");\n  return _openBlock(), _createBlock(_component_el_tiptap, {\n    extensions: _ctx.extensions,\n    onOnUpdate: _ctx.onEditorUpdate,\n    enableCharCount: false,\n    readonly: \"\",\n    content: $props.content\n  }, null, 8 /* PROPS */, [\"extensions\", \"onOnUpdate\", \"content\"]);\n}","map":{"version":3,"names":["_createBlock","_component_el_tiptap","extensions","_ctx","onOnUpdate","onEditorUpdate","enableCharCount","readonly","content","$props"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/CommentViewer.vue"],"sourcesContent":["\n<template>\n    <el-tiptap :extensions=\"extensions\" @onUpdate=\"onEditorUpdate\" :enableCharCount=\"false\" readonly :content=\"content\"/>\n  </template>\n  \n  <script>\n  import {\n    Document,\n    Text,\n    Paragraph,\n    Heading,\n    Bold,\n    Italic,\n    Strike,\n    Underline,\n    Link,\n    Image,\n  } from \"element-tiptap\";\n\n  export default {\n    name: \"Editor\",\n    props: {\n        content: {\n            type: String, \n            default: ''\n        }\n    },\n    data: () => ({\n      extensions: [\n      Document,\n        Text,\n        Paragraph,\n        Bold,\n        Italic,\n        Underline,\n        Strike,\n        TextAlign,\n        Link,\n        Image,\n        Text,\n        OrderedList     \n      ]\n    })\n  };\n  </script>\n  \n\n<style lang=\"scss\">\n.el-tiptap-editor__menu-bar:before {\n    background-color: transparent !important;\n}\n</style>"],"mappings":";;;uBAEIA,YAAA,CAAqHC,oBAAA;IAAzGC,UAAU,EAAEC,IAAA,CAAAD,UAAU;IAAGE,UAAQ,EAAED,IAAA,CAAAE,cAAc;IAAGC,eAAe,EAAE,KAAK;IAAEC,QAAQ,EAAR,EAAQ;IAAEC,OAAO,EAAEC,MAAA,CAAAD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}