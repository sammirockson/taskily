{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BoardContentView = _resolveComponent(\"BoardContentView\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_BoardContentView), _createCommentVNode(\" <div class=\\\"card\\\" @click.self=\\\"handleOverlayClosed\\\">\\n        <div class=\\\"cardInfoContainer\\\">\\n             <div class=\\\"contentContainer\\\">\\n                <textarea type=\\\"text\\\" v-on:blur=\\\"handleContentInfoTapped()\\\"  @input=\\\"autoGrow()\\\" class=\\\"cardNameField\\\" id=\\\"cardNameId\\\" v-model=\\\"card.cardName\\\"></textarea>\\n                <div class=\\\"profileTagInfoContainer\\\">\\n                <img src=\\\"@/assets/cardPhoto.png\\\" class=\\\"ownerProfile\\\">\\n                <div class=\\\"profileInfoContainer\\\">\\n                    <label class=\\\"onwerNameLabel\\\">Samuel</label>\\n                    <label class=\\\"ownerRoleLabel\\\">Admin</label>\\n                </div>\\n                <img src=\\\"@/assets/cardPhoto.png\\\" class=\\\"assignedProfile\\\">\\n                <div class=\\\"assignInfoContainer\\\">\\n                    <label class=\\\"onwerNameLabel\\\">Ricky Bob</label>\\n                    <label class=\\\"ownerRoleLabel\\\">Assignee</label>\\n                </div>\\n                </div>\\n\\n                <div class=\\\"profileTagInfoContainer\\\">\\n                    <label class=\\\"listTagContainer\\\">{{ list.listName }}</label>\\n                    <ButtonCard imageIcon=\\\"calendar.png\\\" title=\\\"July 25 12:45PM\\\" class=\\\"dueDateField\\\"/>\\n                    <ButtonCard imageIcon=\\\"eyeViews.png\\\" title=\\\"Tracking\\\" class=\\\"dueDateField\\\" isTracked=\\\"true\\\">\\n                    </ButtonCard>\\n                </div>\\n                <DescriptionViewFrom class=\\\"descriptionContainer\\\"/>\\n             </div>\\n\\n             <div class=\\\"controlsContainer\\\">\\n             <label class=\\\"memberTitleLabel\\\">Members</label>\\n             <div class=\\\"membersContainer\\\">\\n                <div class=\\\"memberCell\\\" v-for=\\\"(index, member) in members\\\" :key=\\\"member\\\">\\n                   <img :src=\\\"require(index == 8 ? `@/assets/add.svg` : `@/assets/cardPhoto.png`)\\\" class=\\\"memberPhoto\\\">\\n                   <label class=\\\"memberNameLabel\\\" v-if=\\\"index != 8\\\">Name</label>\\n                   <label class=\\\"memberNameLabel\\\" v-else>Join</label>\\n                </div>\\n             </div>\\n\\n             <label class=\\\"memberLabel\\\">Action</label>\\n             <ButtonCard imageIcon=\\\"invoice_icon.png\\\" title=\\\"Assign\\\"/>\\n             <ButtonCard imageIcon=\\\"invoice_icon.png\\\" title=\\\"Move\\\"/>\\n             <ButtonCard imageIcon=\\\"invoice_icon.png\\\" title=\\\"Track\\\"/>\\n\\n             <label class=\\\"memberLabel\\\">Manage</label>\\n             <ButtonCard imageIcon=\\\"invoice_icon.png\\\" title=\\\"Tags\\\"/>\\n             <ButtonCard imageIcon=\\\"invoice_icon.png\\\" title=\\\"Due Date\\\"/>\\n             <ButtonCard imageIcon=\\\"invoice_icon.png\\\" title=\\\"Poll\\\"/>\\n             <ButtonCard imageIcon=\\\"invoice_icon.png\\\" title=\\\"Checklist\\\"/>\\n             <ButtonCard imageIcon=\\\"invoice_icon.png\\\" title=\\\"Attachments\\\"/>\\n             <label class=\\\"memberLabel\\\">Connect</label>\\n             <ButtonCard imageIcon=\\\"invoice_icon.png\\\" title=\\\"Share\\\"/>\\n             <ButtonCard imageIcon=\\\"invoice_icon.png\\\" title=\\\"Copy URL\\\"/>\\n             <label class=\\\"memberLabel\\\">Archive</label>\\n             <ButtonCard imageIcon=\\\"invoice_icon.png\\\" title=\\\"Delete\\\"/>\\n             </div>\\n        </div>\\n    </div> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_BoardContentView","_createCommentVNode"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/views/CardDetailView.vue"],"sourcesContent":["<template>\n    <BoardContentView />\n    <!-- <div class=\"card\" @click.self=\"handleOverlayClosed\">\n        <div class=\"cardInfoContainer\">\n             <div class=\"contentContainer\">\n                <textarea type=\"text\" v-on:blur=\"handleContentInfoTapped()\"  @input=\"autoGrow()\" class=\"cardNameField\" id=\"cardNameId\" v-model=\"card.cardName\"></textarea>\n                <div class=\"profileTagInfoContainer\">\n                <img src=\"@/assets/cardPhoto.png\" class=\"ownerProfile\">\n                <div class=\"profileInfoContainer\">\n                    <label class=\"onwerNameLabel\">Samuel</label>\n                    <label class=\"ownerRoleLabel\">Admin</label>\n                </div>\n                <img src=\"@/assets/cardPhoto.png\" class=\"assignedProfile\">\n                <div class=\"assignInfoContainer\">\n                    <label class=\"onwerNameLabel\">Ricky Bob</label>\n                    <label class=\"ownerRoleLabel\">Assignee</label>\n                </div>\n                </div>\n\n                <div class=\"profileTagInfoContainer\">\n                    <label class=\"listTagContainer\">{{ list.listName }}</label>\n                    <ButtonCard imageIcon=\"calendar.png\" title=\"July 25 12:45PM\" class=\"dueDateField\"/>\n                    <ButtonCard imageIcon=\"eyeViews.png\" title=\"Tracking\" class=\"dueDateField\" isTracked=\"true\">\n                    </ButtonCard>\n                </div>\n                <DescriptionViewFrom class=\"descriptionContainer\"/>\n             </div>\n\n             <div class=\"controlsContainer\">\n             <label class=\"memberTitleLabel\">Members</label>\n             <div class=\"membersContainer\">\n                <div class=\"memberCell\" v-for=\"(index, member) in members\" :key=\"member\">\n                   <img :src=\"require(index == 8 ? `@/assets/add.svg` : `@/assets/cardPhoto.png`)\" class=\"memberPhoto\">\n                   <label class=\"memberNameLabel\" v-if=\"index != 8\">Name</label>\n                   <label class=\"memberNameLabel\" v-else>Join</label>\n                </div>\n             </div>\n\n             <label class=\"memberLabel\">Action</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Assign\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Move\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Track\"/>\n\n             <label class=\"memberLabel\">Manage</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Tags\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Due Date\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Poll\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Checklist\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Attachments\"/>\n             <label class=\"memberLabel\">Connect</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Share\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Copy URL\"/>\n             <label class=\"memberLabel\">Archive</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Delete\"/>\n             </div>\n        </div>\n    </div> -->\n</template>\n<script>\nimport { ref } from 'vue'\nimport ButtonCard from '@/components/ButtonCard.vue'\nimport DescriptionViewFrom from '@/components/DescriptionViewForm.vue'\nimport axios from 'axios';\nimport { BASE_URL } from '@/config'\nimport BoardContentView from '@/components/BoardContentView.vue';\n\nexport default {\n    inject: [\"eventBus\"],\n    components: {\n        ButtonCard, DescriptionViewFrom, BoardContentView\n    },\n    props: { card: Object, list: Object },\n    setup() {\n        var members = ref([1, 2, 3, 4, 5, 6, 7, 8])\n        var isTracked = ref(true)\n        var cardo = ref(null)\n        var cardDesc = ref(\"Test description\")\n        return { members, isTracked, cardo, cardDesc }\n    }, \n    methods: {\n        expandAll() {\n            console.log(\"finally updated...\")\n        },\n        async handleContentInfoTapped() {\n          console.log(\"selectedCard: \", this.cardo, \"id: \", this.cardo)\n        //   var params = {\n        //     card_id: this.selectedCard._id, \n        //     cardName: this.selectedCard.cardName, \n        //     cardDesc: this.cardDesc\n        //  }\n        //  var fullURL = BASE_URL + \"board/updateCard\"\n        //  await axios.post(fullURL, params).then((response) => {\n        //   if (response.data != null) {\n        //     let data = response.data\n        //     console.log(\"card detail resp data: \", data)\n        //     if (data.statusCode == 200) {\n        //         console.log(\"list and card info updated: \", data.resp)\n        //       }\n        //      }\n        //   })\n        },\n        autoGrow() {\n            let element = document.getElementById(\"cardNameId\")\n            element.style.height = \"15px\";\n            element.style.height = (element.scrollHeight) + \"px\";\n        },\n        handleOverlayClosed() {\n           console.log(\"close overlay tapped\")\n           this.$emit('overlayDismissed')\n        }\n    }, \n    watch: { \n        // card(newVal, oldVal) { \n        //    console.log('Card detail prop changed: ', newVal, ' | was: ', oldVal)\n        //    this.selectedCard = newVal\n        // }\n    },\n    mounted() {\n        console.log(\"mounting cardDetail...\")\n        // this.autoGrow()\n        this.eventBus.on('cardOpened', (evt) => {\n            console.log(\"cardOpened: \", evt, \"cardId: \", evt.id)\n            this.cardo = evt\n            console.log(\"cardo: \", evt.id)\n       })\n    }, \n    created() {\n        console.log(\"created cardDetail...\")\n        this.eventBus.on('cardOpened', (evt) => {\n            console.log(\"cardOpened: \", evt, \"cardId: \", evt.id)\n            this.cardo = evt\n            console.log(\"cardo: \", evt.id)\n       })\n    }\n}\n</script>\n<style scoped>\n.descriptionContainer {\n    width: 98%;\n    margin-left: auto;\n    margin-right: auto;\n}\n.listTagContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 34px;\n    width: 140px;\n    padding-right: 10px;\n    padding-left: 10px;\n    color: white;\n    font-weight: 600;\n    background-color: #8B81F7;\n    border-radius: var(--border-radius-1);\n    text-transform: uppercase;\n    overflow: hidden;\n    white-space:nowrap;\n    text-overflow: clip;\n}\n.dueDateField {\n    width: 165px;\n    margin-left: 10px;\n}\n.ownerRoleLabel {\n    display: flex;\n    font-weight: 700;\n    font-size: 10px;\n    overflow: hidden;\n    text-align: center;\n    color: var(--color-dark);\n}\n.onwerNameLabel {\n    display: flex;\n    font-weight: 700;\n    font-size: 13px;\n    overflow: hidden;\n    text-align: center;\n}\n.ownerProfile, .assignedProfile {\n    width: 32px;\n    height: 32px;\n    object-fit: fill;\n    overflow: hidden;\n    border-radius: var(--border-radius-1);\n}\n\n.assignedProfile {\n    margin-left: 20px;\n}\n.profileInfoContainer, .assignInfoContainer {\n    display: flex;\n    flex-direction: column;\n    height: 40px;\n    margin-left: 5px;\n}\n\n.profileTagInfoContainer {\n    display: flex;\n    width: 100%;\n    height: 50px;\n    margin-top: 5px;\n}\n.cardNameField {\n    display: flex;\n    margin-top: 20px;\n    font-size: 20px;\n    font-weight: 700;\n    resize: none;\n    color: var(--color-dark);\n    margin-bottom: 8px;\n}\n\n.memberCell {\n    display: flex;\n    flex-direction: column;\n}\n.memberNameLabel {\n    display: flex;\n    font-weight: 500;\n    font-size: 10px;\n    overflow: hidden;\n    text-align: center;\n    width: 100%;\n    margin-left: 1px;\n}\n.memberPhoto {\n    width: 30px;\n    height: 30px;\n    border-radius: var(--border-radius-1);\n    object-fit: fill;\n    overflow: hidden;\n}\n.memberTitleLabel {\n    display: flex;\n    margin: 10px;\n    margin-top: 24px;\n    font-weight: 600;\n    font-size: 14px;\n}\n.memberLabel {\n    display: flex;\n    margin: 10px;\n    margin-top: 20px;\n    font-weight: 600;\n    font-size: 14px;\n}\n.contentContainer {\n    display: flex;\n    flex-direction: column;\n    width: 550px;\n    min-height: 94vh;\n    border-top-left-radius: var(--border-radius-2);\n    border-bottom-left-radius: var(--border-radius-2);\n    padding-left: 20px;\n    padding-right: 15px;\n}\n.controlsContainer {\n    display: flex;\n    flex-direction: column;\n    width: 190px;\n    min-height: 94vh;\n    border-top-right-radius: var(--border-radius-2);\n    border-bottom-right-radius: var(--border-radius-2);\n    /* background-color: aliceblue; */\n}\n.membersContainer {\n    display: grid;\n    grid-template-columns: repeat(4, 40px);\n    grid-template-rows: repeat(4, 66px);\n    width: 160px;\n    min-height: 120px;\n    justify-content: center;\n    margin-right: auto;\n    margin-left: auto;\n    grid-column-gap: 1px;\n    grid-row-gap: 1px;\n    padding-right: 20px;\n    margin-top: 4px;\n}\n\n.cardInfoContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 740px;\n    min-height: 94vh;\n    margin-right: auto;\n    margin-left: auto;\n    margin-top: 3vh;\n    margin-bottom: 3vh;\n    background-color: white;\n    z-index: 999999999999;\n    border-radius: var(--border-radius-2);\n    padding-bottom: 30px;\n    /* overflow-y: scroll; */\n}\n .card {\n    width: 100vw;\n    height: 100vh;\n    background-color: transparent;\n    overflow-y: scroll;\n }\n</style>"],"mappings":";;;uBAAAA,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAAoBC,2BAAA,GACpBC,mBAAA,6qGAsDU,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}