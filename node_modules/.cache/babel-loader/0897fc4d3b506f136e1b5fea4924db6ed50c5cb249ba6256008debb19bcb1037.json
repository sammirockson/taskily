{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { BASE_URL, PICKMORE_MERCHANT_KEY, SIDE_BAR_MENU_ITEM_KEY } from '@/config';\nimport { ref } from 'vue';\nimport axios from 'axios';\nexport default {\n  setup() {\n    var email = ref(\"\");\n    var password = ref(\"\");\n    var isLogActivated = ref(false);\n    var showPassword = ref(false);\n    return {\n      email,\n      password,\n      isLogActivated,\n      showPassword\n    };\n  },\n  methods: {\n    async handleLogin() {\n      this.isLogActivated = true;\n      var params = {\n        phoneNumber: this.phoneNumber,\n        password: this.password\n      };\n      var path = \"auth/login\";\n      var fullURL = BASE_URL + path;\n      console.log(\"full url: \", fullURL, \"params: \", params);\n      await axios.post(fullURL, params).then(response => {\n        this.isLogActivated = false;\n        if (response.data != null) {\n          let data = response.data;\n          if (data.statusCode == 200) {\n            let businessInfo = data.resp;\n            businessInfo.merchantPassword = \"üê±‚Äçüíª\";\n            businessInfo.merchantPhone = \"üê±‚Äçüíª\";\n            localStorage.setItem(PICKMORE_MERCHANT_KEY, JSON.stringify(businessInfo));\n            localStorage.setItem(SIDE_BAR_MENU_ITEM_KEY, \"pos\");\n            this.$router.push({\n              path: \"/\"\n            });\n          } else {\n            alert(data.msg);\n          }\n        }\n      });\n    },\n    handleSignUpTapped() {\n      this.$emit('navToRegister', true);\n    }\n  }\n};","map":{"version":3,"names":["BASE_URL","PICKMORE_MERCHANT_KEY","SIDE_BAR_MENU_ITEM_KEY","ref","axios","setup","email","password","isLogActivated","showPassword","methods","handleLogin","params","phoneNumber","path","fullURL","console","log","post","then","response","data","statusCode","businessInfo","resp","merchantPassword","merchantPhone","localStorage","setItem","JSON","stringify","$router","push","alert","msg","handleSignUpTapped","$emit"],"sources":["/Users/samuelrockon/Desktop/Dev/taskily/src/views/LoginView.vue"],"sourcesContent":["<template>\n    <div class=\"authContentView\">\n      <label class=\"titleLabel\">Log In</label>\n      <div class=\"inputFieldContainer\">\n        <img src=\"@/assets/brand_logo.svg\" class=\"brandLogo\">\n            <v-text-field type=\"email\" prepend-inner-icon=\"mdi-email-outline\" class=\"emailField\" v-model=\"email\" variant=\"outlined\" label=\"Email Address\"></v-text-field>\n            <v-text-field\n            :type=\"showPassword ? 'text' : 'password'\"  prepend-inner-icon=\"mdi-lock-outline\" :append-inner-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-outline'\"\n             @click:append-inner=\"viewPassword\" class=\"passwordField\"  v-model=\"password\" label=\"Password\" variant=\"outlined\"></v-text-field>  \n             <label class=\"forgotTitleLabel\">Forgot password?</label>\n\n              <!-- <button v-if=\"isLogActivated\" class=\"login buttonload\">\n                  <i class=\"fa fa-circle-o-notch fa-spin\"></i> Logging in... \n              </button>\n              <button v-else @click=\"handleLogin\"  v-on:keyup.enter=\"handleLogin\">Log In</button> -->\n      </div>\n      <!-- <label class=\"signUpLabel\" @click=\"handleSignUpTapped\">Don't have an account? <span class=\"signUpSpan\"> Register here</span></label> -->\n    </div>\n</template>\n<script>\nimport { BASE_URL, PICKMORE_MERCHANT_KEY, SIDE_BAR_MENU_ITEM_KEY } from '@/config';\nimport { ref } from 'vue'\nimport axios from 'axios';\nexport default {\n    setup() {\n      var email = ref(\"\")\n      var password = ref(\"\")\n      var isLogActivated = ref(false)\n      var showPassword = ref(false)\n      return { email, password, isLogActivated, showPassword }\n    }, \n    methods: {\n      async handleLogin() {\n           this.isLogActivated = true \n           var params = {\n               phoneNumber : this.phoneNumber, \n               password: this.password\n            }\n  \n            var path = \"auth/login\"\n            var fullURL = BASE_URL + path\n            console.log(\"full url: \", fullURL, \"params: \", params)\n            await axios.post(fullURL, params).then((response) => {\n              this.isLogActivated = false\n              if (response.data != null) {\n                let data = response.data\n                if (data.statusCode == 200) {\n                  let businessInfo = data.resp \n                  businessInfo.merchantPassword = \"üê±‚Äçüíª\"\n                  businessInfo.merchantPhone = \"üê±‚Äçüíª\"\n                  localStorage.setItem(PICKMORE_MERCHANT_KEY, JSON.stringify(businessInfo))\n                  localStorage.setItem(SIDE_BAR_MENU_ITEM_KEY, \"pos\")\n                  this.$router.push({path: \"/\"})\n                } else {\n                    alert(data.msg)\n                }\n               }\n            })\n      },\n      handleSignUpTapped() {\n        this.$emit('navToRegister', true)\n      }\n    }\n}\n</script>\n<style scoped>\n.brandLogo {\n  width: 60px;\n  height: 60px;\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.authContentView {\n  display: flex;\n  flex-direction: column;\n  background-color: var(--color-background);\n  width: 100vw;\n  height: 100vh;\n}\n.signUpLabel {\n  display: block;\n  margin-top: 130px;\n}\n\n.signUpSpan {\n  color: var(--color-blue);\n  font-weight: 600;\n}\n.inputFieldContainer button { \n    margin-top: 80px;\n    width: 416px;\n    height: 50px;\n    margin-right: auto;\n    margin-left: auto;\n    font-weight: 600;\n    font-size: 16px;\n    color: white;\n    background-color: var(--color-primary);\n    border: 0px solid transparent;\n    border-radius: var(--border-radius-1);\n  }\n\n.inputFieldContainer {\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  width: 400px;\n  height: 600px;\n  margin-right: auto;\n  margin-left: auto;\n  border-radius: var(--border-radius-1);\n  margin-top: 50px;\n}\n\n.passwordField, .emailField {\n  width: 340px;\n  max-height: 44px;\n  font-weight: 500;\n  font-size: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 0px solid var(--color-light-primary) !important;\n  border-color: var(--color-light-primary);\n}\n\n.emailField {\n  margin-top: 54px;\n}\n.passwordField {\n  margin-top: 24px;\n}\n\n.forgotTitleLabel {\n  font-weight: 500;\n  font-size: 14px;\n  color: blue;\n}\n.subTitleLabel {\n  color: var(--color-light-primary);\n  font-weight: 300;\n  font-size: 14px;\n}\n\n.titleLabel {\n  margin-top: 10px;\n  font-weight: 600;\n  font-size: 24px;\n  margin-top: 30px;\n}\n\n.brandLogo, .titleLabel, .subTitleLabel {\n  display: block;\n}\n\n</style>"],"mappings":";AAoBA,SAASA,QAAQ,EAAEC,qBAAqB,EAAEC,sBAAqB,QAAS,UAAU;AAClF,SAASC,GAAE,QAAS,KAAI;AACxB,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,KAAKA,CAAA,EAAG;IACN,IAAIC,KAAI,GAAIH,GAAG,CAAC,EAAE;IAClB,IAAII,QAAO,GAAIJ,GAAG,CAAC,EAAE;IACrB,IAAIK,cAAa,GAAIL,GAAG,CAAC,KAAK;IAC9B,IAAIM,YAAW,GAAIN,GAAG,CAAC,KAAK;IAC5B,OAAO;MAAEG,KAAK;MAAEC,QAAQ;MAAEC,cAAc;MAAEC;IAAa;EACzD,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MACf,IAAI,CAACH,cAAa,GAAI,IAAG;MACzB,IAAII,MAAK,GAAI;QACTC,WAAU,EAAI,IAAI,CAACA,WAAW;QAC9BN,QAAQ,EAAE,IAAI,CAACA;MAClB;MAEA,IAAIO,IAAG,GAAI,YAAW;MACtB,IAAIC,OAAM,GAAIf,QAAO,GAAIc,IAAG;MAC5BE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,OAAO,EAAE,UAAU,EAAEH,MAAM;MACrD,MAAMR,KAAK,CAACc,IAAI,CAACH,OAAO,EAAEH,MAAM,CAAC,CAACO,IAAI,CAAEC,QAAQ,IAAK;QACnD,IAAI,CAACZ,cAAa,GAAI,KAAI;QAC1B,IAAIY,QAAQ,CAACC,IAAG,IAAK,IAAI,EAAE;UACzB,IAAIA,IAAG,GAAID,QAAQ,CAACC,IAAG;UACvB,IAAIA,IAAI,CAACC,UAAS,IAAK,GAAG,EAAE;YAC1B,IAAIC,YAAW,GAAIF,IAAI,CAACG,IAAG;YAC3BD,YAAY,CAACE,gBAAe,GAAI,OAAM;YACtCF,YAAY,CAACG,aAAY,GAAI,OAAM;YACnCC,YAAY,CAACC,OAAO,CAAC3B,qBAAqB,EAAE4B,IAAI,CAACC,SAAS,CAACP,YAAY,CAAC;YACxEI,YAAY,CAACC,OAAO,CAAC1B,sBAAsB,EAAE,KAAK;YAClD,IAAI,CAAC6B,OAAO,CAACC,IAAI,CAAC;cAAClB,IAAI,EAAE;YAAG,CAAC;UAC/B,OAAO;YACHmB,KAAK,CAACZ,IAAI,CAACa,GAAG;UAClB;QACD;MACH,CAAC;IACP,CAAC;IACDC,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACC,KAAK,CAAC,eAAe,EAAE,IAAI;IAClC;EACF;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}