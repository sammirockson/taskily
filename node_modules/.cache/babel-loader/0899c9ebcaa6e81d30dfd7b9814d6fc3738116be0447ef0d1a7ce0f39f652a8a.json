{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { BASE_URL } from '@/config';\nimport axios from 'axios';\nexport default {\n  components: {},\n  setup() {\n    var isSideBarExpanded = ref(false);\n    var selectedTaskBoardType = ref(\"All Team\");\n    var boards = ref([Object]);\n    return {\n      isSideBarExpanded,\n      boards,\n      selectedTaskBoardType\n    };\n  },\n  methods: {\n    handleBoardTapped(board) {\n      console.log(\"board: \", board);\n      let path = \"/board/\" + board.id; // this.currentUser._id + \"/product/\" + product._id\n      this.$router.push({\n        path: path\n      });\n    },\n    handleBoardTypeTapped(item) {\n      this.selectedTaskBoardType = item;\n    },\n    watch: {\n      // isExpanded: function(newVal, oldVal) {\n      //     console.log('Prop changed isSideBarExpanwded: ', newVal)\n      //     this.isSideBarExpanded = newVal\n      // }\n    },\n    async fetchBoards() {\n      var params = {\n        owner: \"1721545684258\"\n      };\n      var fullURL = BASE_URL + \"board/my\";\n      console.log(\"full url: \", fullURL, \"params: \", params);\n      await axios.post(fullURL, params).then(response => {\n        console.log(\"board response: \", response);\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"resp data: \", data);\n          if (data.statusCode == 200) {\n            let allBoard = data.resp;\n            console.log(\"boards: \", allBoard);\n            this.boards = allBoard;\n          }\n        }\n      });\n    }\n  },\n  mounted() {\n    this.fetchBoards();\n  }\n};","map":{"version":3,"names":["ref","BASE_URL","axios","components","setup","isSideBarExpanded","selectedTaskBoardType","boards","Object","methods","handleBoardTapped","board","console","log","path","id","$router","push","handleBoardTypeTapped","item","watch","fetchBoards","params","owner","fullURL","post","then","response","data","statusCode","allBoard","resp","mounted"],"sources":["/Users/samuelrockon/Desktop/Dev/taskily/src/views/AllTaskboardsView.vue"],"sourcesContent":["<template>\n     <div class=\"allBoards\">\n            <div class=\"boardContentView\">\n            <v-row style=\"overflow: hidden;\">\n             <v-col v-for=\"board in boards\" :key=\"board\" cols=\"auto\"> \n               <div class=\"productGridCellWithBorder\"  @click=\"handleBoardTapped(board)\">\n                  <img src=\"@/assets/board_placeholder.png\" class=\"productCellImage\">\n                  <label class=\"productNameLabel\">{{ board.name }}</label>\n               </div>\n              </v-col>\n            </v-row>\n           </div>\n        </div>\n</template>\n<script>\nimport { ref } from 'vue'\nimport { BASE_URL } from '@/config'\nimport axios from 'axios';\n\nexport default {\n    components: {\n        \n    }, \n    setup() {\n        var isSideBarExpanded = ref(false)\n        var selectedTaskBoardType = ref(\"All Team\")\n        var boards = ref([Object])\n        return { isSideBarExpanded, boards, selectedTaskBoardType}\n    },\n    methods: {\n      handleBoardTapped(board) {\n        console.log(\"board: \", board)\n        let path = \"/board/\" + board.id // this.currentUser._id + \"/product/\" + product._id\n        this.$router.push({path: path})\n      },\n      handleBoardTypeTapped(item) {\n        this.selectedTaskBoardType = item\n      },\n    watch: { \n        // isExpanded: function(newVal, oldVal) {\n        //     console.log('Prop changed isSideBarExpanwded: ', newVal)\n        //     this.isSideBarExpanded = newVal\n        // }\n    }, \n    async fetchBoards() {\n        var params = {\n            owner: \"1721545684258\"\n        }\n        var fullURL = BASE_URL + \"board/my\"\n        console.log(\"full url: \", fullURL, \"params: \", params)\n        await axios.post(fullURL, params).then((response) => {\n          console.log(\"board response: \", response)\n          if (response.data != null) {\n            let data = response.data\n            console.log(\"resp data: \", data)\n            if (data.statusCode == 200) {\n                let allBoard = data.resp\n                console.log(\"boards: \", allBoard)\n                this.boards = allBoard\n              }\n             }\n          })\n        }\n    },\n    mounted() {\n        this.fetchBoards()\n    } \n}\n</script>\n<style scoped>\n    .productCellImage {\n    height: 200px;\n    width: 232px;\n    margin-right: auto;\n    margin-left: auto;\n    background-color: var(--color-light);\n    object-fit: cover;\n}\n\n.productGridCellWithBorder {\n    border: 2px solid var(--color-light);\n}\n.productGridCell, .productGridCellWithBorder {\n    display: block;\n    height: 280px;\n    overflow: hidden;\n    width: 232px;\n    background-color: white;\n    border-radius: var(--border-radius-2);\n}\n\n.boardContentView {\n    width: 99%;\n    height: 96%;\n    display: flex;\n    justify-content: left;\n    align-items: start;\n    margin: auto;\n    padding: 30px;\n}\n\n.allBoards {\n    width: 100vw;\n    height: 100vh;\n    background-color: white;\n}\n</style>"],"mappings":";AAeA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,QAAO,QAAS,UAAS;AAClC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,UAAU,EAAE,CAEZ,CAAC;EACDC,KAAKA,CAAA,EAAG;IACJ,IAAIC,iBAAgB,GAAIL,GAAG,CAAC,KAAK;IACjC,IAAIM,qBAAoB,GAAIN,GAAG,CAAC,UAAU;IAC1C,IAAIO,MAAK,GAAIP,GAAG,CAAC,CAACQ,MAAM,CAAC;IACzB,OAAO;MAAEH,iBAAiB;MAAEE,MAAM;MAAED;IAAqB;EAC7D,CAAC;EACDG,OAAO,EAAE;IACPC,iBAAiBA,CAACC,KAAK,EAAE;MACvBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK;MAC5B,IAAIG,IAAG,GAAI,SAAQ,GAAIH,KAAK,CAACI,EAAC,EAAE;MAChC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAACH,IAAI,EAAEA;MAAI,CAAC;IAChC,CAAC;IACDI,qBAAqBA,CAACC,IAAI,EAAE;MAC1B,IAAI,CAACb,qBAAoB,GAAIa,IAAG;IAClC,CAAC;IACHC,KAAK,EAAE;MACH;MACA;MACA;MACA;IAAA,CACH;IACD,MAAMC,WAAWA,CAAA,EAAG;MAChB,IAAIC,MAAK,GAAI;QACTC,KAAK,EAAE;MACX;MACA,IAAIC,OAAM,GAAIvB,QAAO,GAAI,UAAS;MAClCW,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEW,OAAO,EAAE,UAAU,EAAEF,MAAM;MACrD,MAAMpB,KAAK,CAACuB,IAAI,CAACD,OAAO,EAAEF,MAAM,CAAC,CAACI,IAAI,CAAEC,QAAQ,IAAK;QACnDf,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEc,QAAQ;QACxC,IAAIA,QAAQ,CAACC,IAAG,IAAK,IAAI,EAAE;UACzB,IAAIA,IAAG,GAAID,QAAQ,CAACC,IAAG;UACvBhB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEe,IAAI;UAC/B,IAAIA,IAAI,CAACC,UAAS,IAAK,GAAG,EAAE;YACxB,IAAIC,QAAO,GAAIF,IAAI,CAACG,IAAG;YACvBnB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEiB,QAAQ;YAChC,IAAI,CAACvB,MAAK,GAAIuB,QAAO;UACvB;QACD;MACH,CAAC;IACH;EACJ,CAAC;EACDE,OAAOA,CAAA,EAAG;IACN,IAAI,CAACX,WAAW,CAAC;EACrB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}