{"ast":null,"code":"import { ref } from 'vue';\nimport LoginView from './LoginView.vue';\nimport SignUpView from '@/views/SignUp.vue';\nimport APIService from '@/APIService';\nimport CryptoJS from 'crypto-js';\nimport { USER_CACHE_KEY } from '@/config';\nexport default {\n  inject: [\"cryptojs\"],\n  components: {\n    LoginView,\n    SignUpView\n  },\n  setup() {\n    var inviter = ref(null);\n    var board = ref(null);\n    var isAuth = ref(false);\n    var isLogin = ref(true);\n    var currentUser = ref({});\n    return {\n      inviter,\n      board,\n      isAuth,\n      isLogin,\n      currentUser\n    };\n  },\n  mounted() {\n    APIService.init();\n    let routeParams = this.$route.params;\n    console.log(\"invitation params: \", routeParams);\n    let boardId = routeParams.boardId;\n    let inviterId = routeParams.inviter;\n    this.getInviteInfo(boardId, inviterId);\n  },\n  methods: {\n    handleDidAuthenticateUser(user) {\n      this.currentUser = user;\n    },\n    handleBackToLogin() {\n      this.isLogin = true;\n    },\n    handleNavToSignUp() {\n      this.isLogin = false;\n    },\n    async getInviteInfo(boardId, inviterId) {\n      var params = {\n        boardId: boardId,\n        inviterId: inviterId\n      };\n      let resp = await APIService.getInvitationInfo(params);\n      console.log(\"inviter resp: \", resp);\n      this.inviter = resp.inviter;\n      this.board = resp.board;\n      let userCacheString = localStorage.getItem(USER_CACHE_KEY);\n      if (userCacheString != null && userCacheString.length > 0) {\n        let userCache = JSON.parse(userCacheString);\n        let decryptionToken = userCache.token;\n        let encryptedUserData = userCache.user;\n        let decryptedData = CryptoJS.AES.decrypt(encryptedUserData, decryptionToken).toString(CryptoJS.enc.Utf8);\n        let cacheInfoObject = JSON.parse(decryptedData);\n        this.currentUser = cacheInfoObject.user;\n        // Just let him join\n        this.handleConfirmInvitation();\n      }\n    },\n    handleJoinBoard() {\n      this.isAuth = true;\n      // sign up the user on an overlay UI, \n      // add his id to the board's membership\n      // navigate to all boards page\n      // change fetch all boards api logic to fetch data based on members\n    },\n    async handleConfirmInvitation() {\n      var params = {\n        boardId: boardId,\n        inviteeId: inviterId\n      };\n      let resp = await APIService.confirmInvitation(params);\n      console.log(\"confirm invitation: \", resp);\n    }\n  }\n};","map":{"version":3,"names":["ref","LoginView","SignUpView","APIService","CryptoJS","USER_CACHE_KEY","inject","components","setup","inviter","board","isAuth","isLogin","currentUser","mounted","init","routeParams","$route","params","console","log","boardId","inviterId","getInviteInfo","methods","handleDidAuthenticateUser","user","handleBackToLogin","handleNavToSignUp","resp","getInvitationInfo","userCacheString","localStorage","getItem","length","userCache","JSON","parse","decryptionToken","token","encryptedUserData","decryptedData","AES","decrypt","toString","enc","Utf8","cacheInfoObject","handleConfirmInvitation","handleJoinBoard","inviteeId","confirmInvitation"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/views/InvitationView.vue"],"sourcesContent":["<template>\n     <div class=\"navBar\">\n          <div class=\"logoNameContainer\">\n          <img src=\"@/assets/logo.png\" class=\"logoIcon\">\n           <label for=\"\">Zinlo</label>\n          </div>\n          <div class=\"loginSignUpContainer\" v-if=\"!isAuth\">\n              <button class=\"loginBtn\" @click=\"handleJoinBoard\">Log In</button>\n              <button class=\"signUp\"  @click=\"handleJoinBoard\">Sign Up For Free</button>\n          </div>\n        </div>\n    <div v-if=\"isAuth\" class=\"authContainer\">\n      <LoginView v-if=\"isLogin\" class=\"inputFieldContainer\" isInvite=\"true\" @didTapNavToSignUp=\"handleNavToSignUp\" @didLogIn=\"handleDidAuthenticateUser\"/>\n      <SignUpView v-else class=\"inputFieldContainer\" isInvite=\"true\" @didTapNavToLogin=\"handleBackToLogin\"/>\n    </div>\n    <div v-else class=\"invitationContainer\">\n        <div class=\"mainInviteContainer\" v-if=\"inviter != null && board != null\">\n           <label class=\"messageLabel\"><span>{{ inviter.fullName }}</span> has invited you to join and <br>contribute to <span>{{ board.name }}</span> board.</label>\n            <img src=\"@/assets/teamIllustrations.png\" class=\"illustration\">\n            <button class=\"joinBtn\" @click=\"handleJoinBoard\">Join For Free</button>\n        </div>\n    </div>\n</template>\n<script>\nimport { ref } from 'vue'\nimport LoginView from './LoginView.vue';\nimport SignUpView from '@/views/SignUp.vue'\nimport APIService from '@/APIService';\nimport CryptoJS from 'crypto-js'\nimport { USER_CACHE_KEY } from '@/config'\n\nexport default {\n    inject: [\"cryptojs\"],\n    components: {\n        LoginView, SignUpView\n    },\n    setup() {\n        var inviter = ref(null)\n        var board = ref(null)\n        var isAuth = ref(false)\n        var isLogin = ref(true)\n        var currentUser = ref({})\n        return { inviter, board, isAuth, isLogin, currentUser}\n    }, \n    mounted() {\n        APIService.init()\n        let routeParams = this.$route.params\n        console.log(\"invitation params: \", routeParams)\n        let boardId = routeParams.boardId\n        let inviterId = routeParams.inviter\n        this.getInviteInfo(boardId, inviterId)\n    }, \n   methods: {\n    handleDidAuthenticateUser(user) {\n      this.currentUser = user\n    },\n    handleBackToLogin() {\n        this.isLogin = true\n    },\n    handleNavToSignUp() {\n        this.isLogin = false\n    },\n    async getInviteInfo(boardId, inviterId) {\n        var params = {\n         boardId: boardId,\n         inviterId: inviterId\n       }\n\n       let resp = await APIService.getInvitationInfo(params)\n       console.log(\"inviter resp: \", resp)\n       this.inviter = resp.inviter\n       this.board = resp.board\n       let userCacheString = localStorage.getItem(USER_CACHE_KEY)\n       if (userCacheString != null && userCacheString.length > 0) {\n        let userCache = JSON.parse(userCacheString)\n        let decryptionToken = userCache.token\n        let encryptedUserData = userCache.user\n        let decryptedData = CryptoJS.AES.decrypt(encryptedUserData, decryptionToken).toString(CryptoJS.enc.Utf8)\n        let cacheInfoObject = JSON.parse(decryptedData)\n        this.currentUser = cacheInfoObject.user\n        // Just let him join\n        this.handleConfirmInvitation()\n       }\n    }, \n    handleJoinBoard() {\n        this.isAuth = true \n        // sign up the user on an overlay UI, \n        // add his id to the board's membership\n        // navigate to all boards page\n        // change fetch all boards api logic to fetch data based on members\n    }, \n    async handleConfirmInvitation() {\n      var params = {\n        boardId: boardId,\n        inviteeId: inviterId\n       }\n\n       let resp = await APIService.confirmInvitation(params)\n       console.log(\"confirm invitation: \", resp)\n    }\n  }\n}\n</script>\n<style scoped>\n.authContainer {\n    width: 500px;\n    height: 700px;\n    background-color: white;\n    border-radius: var(--border-radius-2);\n    margin-right: auto;\n    margin-left: auto;\n    margin-top: 50px;\n}\n.messageLabel {\n    font-weight: 500;\n    font-size: 24px;\n    margin-top: 40px;\n    color: var(--color-bar-dark);\n}\n.messageLabel span {\n    font-weight: 700;\n}\n\n.mainInviteContainer {\n    display: flex;\n    flex-direction: column;\n}\n.illustration {\n    margin-top: 50px;\n    width: 400px;\n    height: 400px;\n    margin-right: auto;\n    margin-left: auto;\n    object-fit: contain;\n}\n.logoNameContainer label {\n    font-size: 30px;\n    font-weight: 700;\n    margin-left: 4px;\n    margin-top: auto;\n    margin-bottom: auto;\n}\n\n.logoIcon {\n    width: 34px;\n    height: 34px;\n    margin-top: auto;\n    margin-bottom: auto;\n}\n.signUp, .loginBtn, .joinBtn {\n    width: 100px;\n    height: 40px;\n    font-size: 15px;\n    font-weight: 500;\n    border-radius: var(--border-radius-1);\n    margin-top: auto;\n    margin-bottom: auto;\n}\n\n.joinBtn {\n    margin-right: auto;\n    margin-left: auto;\n    margin-top: 50px;\n}\n\n.signUp, .joinBtn {\n    width: 180px;\n    color: white;\n    background-color: var(--color-bar-dark)\n}\n.loginBtn {\n    color: var(--color-bar-dark);\n    border: 1px solid var(--color-bar-dark);\n}\n.logoNameContainer {\n    display: flex;\n    width: calc(100% - 300px);\n    height: 80%;\n}\n.loginSignUpContainer {\n    display: flex;\n    justify-content: space-between;\n    width: 300px;\n    height: 80%;\n}\n.navBar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    height: 60px;\n    background-color: white;\n    padding-right: 15px;\n    padding-left: 15px;\n}\n\n.invitationContainer {\n    height: 100vh;\n    width: 100vw;\n    background-color: var(--color-background);\n    display: flex;\n    flex-direction: column;\n}\n\n\n.googleTitleLabel {\n  font-weight: 500;\n  font-size: 16px;\n  margin-top: auto;\n  margin-bottom: auto;\n}\n.googleIcon {\n  margin-left: 10px;\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n  margin-top: auto;\n  margin-bottom: auto;\n}\n.googleButtonContainer {\n  display: flex;\n  margin-top: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  width: 340px;\n  height: 50px;\n  border: 1px solid var(--color-light);\n  border-radius: var(--border-radius-1);\n}\n.orLabel {\n  width: 30px;\n  height: 30px;\n  font-weight: 600;\n  margin-top: -12px;\n  color: var(--color-dark);\n  margin-left: 10px;\n}\n.leftLineView, .rightLineView {\n  width: 140px;\n  height: 1px;\n  background-color: var(--color-light);\n  margin-left: 30px;\n}\n\n.rightLineView {\n  margin-left: 10px;\n}\n\n.lineContainer {\n  display: flex;\n  margin-top: 50px;\n}\n.brandLogo {\n  width: 60px;\n  height: 60px;\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.authContentView {\n  display: flex;\n  flex-direction: column;\n  background-color: var(--color-background);\n  width: 100vw;\n  height: 100vh;\n}\n.signUpLabel {\n  display: block;\n  margin-top: 130px;\n}\n\n.signUpSpan {\n  color: var(--color-blue);\n  font-weight: 600;\n}\n.inputFieldContainer button { \n  margin-top: 30px;\n  width: 340px;\n  height: 50px;\n  margin-right: auto;\n  margin-left: auto;\n  font-weight: 600;\n  font-size: 16px;\n  color: white;\n  background-color: var(--color-bar-dark);\n  border: 0px solid transparent;\n  border-radius: var(--border-radius-1);\n}\n\n.inputFieldContainer {\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  width: 400px;\n  height: 650px;\n  margin-right: auto;\n  margin-left: auto;\n  border-radius: var(--border-radius-2);\n  margin-top: 50px;\n}\n\n/* .passwordField, .emailField {\n  width: 340px;\n  max-height: 44px;\n  font-weight: 500;\n  font-size: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 0px solid var(--color-light-primary) !important;\n  border-color: var(--color-light-primary);\n} */\n\n.passwordField, .emailField, .fullNameField, .loginEmailField {\n  width: 340px;\n  max-height: 44px;\n  font-weight: 500;\n  font-size: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 0px solid var(--color-light-primary) !important;\n  border-color: var(--color-light-primary);\n}\n.fullNameField {\n  margin-top: 54px;\n}\n\n.emailField {\n  margin-top: 30px;\n}\n.passwordField {\n  margin-top: 30px;\n}\n\n.forgotTitleLabel {\n  font-weight: 600;\n  font-size: 14px;\n  color: var(--color-dark);\n  margin-top: 30px;\n  float: left;\n  text-align: left;\n  margin-left: 34px;\n}\n.subTitleLabel {\n  color: var(--color-light-primary);\n  font-weight: 300;\n  font-size: 14px;\n}\n\n.titleLabel {\n  display: block;\n  margin-top: 10px;\n  font-weight: 500;\n  font-size: 18px;\n  margin-top: 30px;\n}\n\n.loginEmailField {\n    margin-top: 54px;\n}\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}