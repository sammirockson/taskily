{"ast":null,"code":"import { ref } from 'vue';\nexport default {\n  name: \"Videoplayer\",\n  props: {\n    src: {\n      type: String,\n      required: true\n    },\n    controls: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    loop: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    width: {\n      type: Number,\n      required: false,\n      default: 500\n    },\n    height: {\n      type: Number,\n      required: false,\n      default: 281\n    },\n    autoplay: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    muted: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    poster: {\n      type: String,\n      required: false\n    },\n    preload: {\n      type: String,\n      required: false,\n      default: \"auto\"\n    }\n  },\n  setup() {\n    var isPlaying = ref(false);\n    var isMuted = ref(false);\n    return {\n      isPlaying,\n      isMuted\n    };\n  },\n  methods: {\n    play() {\n      this.$refs.player.play();\n      this.setPlaying(true);\n    },\n    pause() {\n      this.$refs.player.pause();\n      this.setPlaying(false);\n    },\n    togglePlay() {\n      if (this.playing) {\n        this.pause();\n      } else {\n        this.play();\n      }\n    },\n    setPlaying(state) {\n      this.playing = state;\n    },\n    mute() {\n      this.$refs.player.muted = true;\n      this.setMuted(true);\n    }\n  },\n  mounted() {\n    this.play();\n  }\n};","map":{"version":3,"names":["ref","name","props","src","type","String","required","controls","Boolean","default","loop","width","Number","height","autoplay","muted","poster","preload","setup","isPlaying","isMuted","methods","play","$refs","player","setPlaying","pause","togglePlay","playing","state","mute","setMuted","mounted"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/Videoplayer.vue"],"sourcesContent":["<template>\n <video\n   class=\"videoContainer\"\n   :src=\"src\"\n   :muted=\"muted\"\n   :autoplay=\"autoplay\"\n   :controls=\"controls\"\n   :loop=\"loop\"\n   :width=\"width\"\n   :height=\"height\"\n   :poster=\"poster\"\n   :preload=\"preload\"\n   :playsinline=\"true\"\n   ref=\"player\"\n/>\n</template>\n<script>\nimport { ref } from 'vue'\nexport default {\n    name: \"Videoplayer\",\n    props: {\n       src: { type: String, required: true },\n       controls: { type: Boolean, required: false, default: false },\n       loop: { type: Boolean, required: false, default: false },\n       width: { type: Number, required: false, default: 500 },\n       height: { type: Number, required: false, default: 281 },\n       autoplay: { type: Boolean, required: false, default: false },\n       muted: { type: Boolean, required: false, default: false },\n       poster: { type: String, required: false },\n       preload: { type: String, required: false, default: \"auto\" },\n    }, \n    setup() {\n        var isPlaying = ref(false)\n        var isMuted = ref(false)\n        return { isPlaying, isMuted }\n    }, \n    methods: {\n     play() {\n      this.$refs.player.play();\n      this.setPlaying(true);\n    },\n    pause() {\n      this.$refs.player.pause();\n      this.setPlaying(false);\n    },\n    togglePlay() {\n      if (this.playing) {\n        this.pause();\n      } else {\n        this.play();\n      }\n    },\n    setPlaying(state) {\n      this.playing = state;\n    },\t\n\tmute() {\n      this.$refs.player.muted = true;\n      this.setMuted(true);\n    },\n    }, \n    mounted() {\n        this.play()\n    }\n}\n</script>\n<style scoped>\n    .videoContainer {\n        object-fit: cover;\n        border-radius: var(--border-radius-2);\n    }\n</style>"],"mappings":"AAiBA,SAASA,GAAE,QAAS,KAAI;AACxB,eAAe;EACXC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACJC,GAAG,EAAE;MAAEC,IAAI,EAAEC,MAAM;MAAEC,QAAQ,EAAE;IAAK,CAAC;IACrCC,QAAQ,EAAE;MAAEH,IAAI,EAAEI,OAAO;MAAEF,QAAQ,EAAE,KAAK;MAAEG,OAAO,EAAE;IAAM,CAAC;IAC5DC,IAAI,EAAE;MAAEN,IAAI,EAAEI,OAAO;MAAEF,QAAQ,EAAE,KAAK;MAAEG,OAAO,EAAE;IAAM,CAAC;IACxDE,KAAK,EAAE;MAAEP,IAAI,EAAEQ,MAAM;MAAEN,QAAQ,EAAE,KAAK;MAAEG,OAAO,EAAE;IAAI,CAAC;IACtDI,MAAM,EAAE;MAAET,IAAI,EAAEQ,MAAM;MAAEN,QAAQ,EAAE,KAAK;MAAEG,OAAO,EAAE;IAAI,CAAC;IACvDK,QAAQ,EAAE;MAAEV,IAAI,EAAEI,OAAO;MAAEF,QAAQ,EAAE,KAAK;MAAEG,OAAO,EAAE;IAAM,CAAC;IAC5DM,KAAK,EAAE;MAAEX,IAAI,EAAEI,OAAO;MAAEF,QAAQ,EAAE,KAAK;MAAEG,OAAO,EAAE;IAAM,CAAC;IACzDO,MAAM,EAAE;MAAEZ,IAAI,EAAEC,MAAM;MAAEC,QAAQ,EAAE;IAAM,CAAC;IACzCW,OAAO,EAAE;MAAEb,IAAI,EAAEC,MAAM;MAAEC,QAAQ,EAAE,KAAK;MAAEG,OAAO,EAAE;IAAO;EAC7D,CAAC;EACDS,KAAKA,CAAA,EAAG;IACJ,IAAIC,SAAQ,GAAInB,GAAG,CAAC,KAAK;IACzB,IAAIoB,OAAM,GAAIpB,GAAG,CAAC,KAAK;IACvB,OAAO;MAAEmB,SAAS;MAAEC;IAAQ;EAChC,CAAC;EACDC,OAAO,EAAE;IACRC,IAAIA,CAAA,EAAG;MACN,IAAI,CAACC,KAAK,CAACC,MAAM,CAACF,IAAI,CAAC,CAAC;MACxB,IAAI,CAACG,UAAU,CAAC,IAAI,CAAC;IACvB,CAAC;IACDC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACH,KAAK,CAACC,MAAM,CAACE,KAAK,CAAC,CAAC;MACzB,IAAI,CAACD,UAAU,CAAC,KAAK,CAAC;IACxB,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACC,OAAO,EAAE;QAChB,IAAI,CAACF,KAAK,CAAC,CAAC;MACd,OAAO;QACL,IAAI,CAACJ,IAAI,CAAC,CAAC;MACb;IACF,CAAC;IACDG,UAAUA,CAACI,KAAK,EAAE;MAChB,IAAI,CAACD,OAAM,GAAIC,KAAK;IACtB,CAAC;IACJC,IAAIA,CAAA,EAAG;MACF,IAAI,CAACP,KAAK,CAACC,MAAM,CAACT,KAAI,GAAI,IAAI;MAC9B,IAAI,CAACgB,QAAQ,CAAC,IAAI,CAAC;IACrB;EACA,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACV,IAAI,CAAC;EACd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}