{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref } from 'vue';\nimport { BASE_URL } from '@/config';\nimport axios from 'axios';\nexport default {\n  props: {\n    card: String\n  },\n  setup() {\n    var isDragging = ref(false);\n    // var files = ref([])\n    var localeFileURL = ref(\"\");\n    var remoteFileURL = ref(\"\");\n    var selectedFile = ref(null);\n    var card_id = ref(\"\");\n    return {\n      isDragging,\n      localeFileURL,\n      selectedFile,\n      remoteFileURL,\n      card_id\n    };\n  },\n  methods: {\n    async handleUploadFile() {\n      console.log(\"card_id: \", this.card_id);\n      if (this.selectedFile != null && this.localeFileURL != null) {\n        var postJson = {\n          card_id: this.card_id\n        };\n        var formsData = new FormData();\n        formsData.append('attachment', this.selectedFile, this.selectedFile.name);\n        formsData.append(\"postJson\", JSON.stringify(postJson));\n        let fullURL = BASE_URL + \"files/upload\";\n        await axios.post(fullURL, formsData).then(response => {\n          console.log(\"upload file response: \", response);\n        });\n      }\n    },\n    onChange() {\n      let file = this.$refs.file.files[0];\n      console.log(\"dropped file: \", file);\n      this.selectedFile = file;\n      this.localeFileURL = this.generateURL(file);\n      this.remoteFileURL = null;\n    },\n    dragover(e) {\n      e.preventDefault();\n      this.isDragging = true;\n    },\n    dragleave() {\n      this.isDragging = false;\n    },\n    drop(e) {\n      e.preventDefault();\n      this.$refs.file.files = e.dataTransfer.files;\n      this.onChange();\n      this.isDragging = false;\n    },\n    generateURL(file) {\n      let fileSrc = URL.createObjectURL(file);\n      setTimeout(() => {\n        URL.revokeObjectURL(fileSrc);\n      }, 1000);\n      return fileSrc;\n    }\n  },\n  watch: {\n    remoteFileURL(newVal, oldVal) {\n      if (newVal != null) {\n        this.fileURL = null;\n        this.selectedFile = null;\n      }\n    }\n  }\n  // updated() {\n  //     // this.card_id = card\n  //     console.log(this.card)\n  //     this.card_id = this.card\n  //     console.log(\"card_id: \", this.card_id)\n  // },\n};","map":{"version":3,"names":["ref","BASE_URL","axios","props","card","String","setup","isDragging","localeFileURL","remoteFileURL","selectedFile","card_id","methods","handleUploadFile","console","log","postJson","formsData","FormData","append","name","JSON","stringify","fullURL","post","then","response","onChange","file","$refs","files","generateURL","dragover","e","preventDefault","dragleave","drop","dataTransfer","fileSrc","URL","createObjectURL","setTimeout","revokeObjectURL","watch","newVal","oldVal","fileURL"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/AttachmentView.vue"],"sourcesContent":["<template>\n     <div class=\"dropFileMainView\">\n      <div\n        class=\"dropzone-container\"\n        @dragover=\"dragover\"\n        @dragleave=\"dragleave\"\n        @drop=\"drop\"\n       >\n        <input\n          type=\"file\"\n          name=\"file\"\n          id=\"fileInput\"\n          class=\"hidden-input\"\n          @change=\"onChange\"\n          ref=\"file\"\n          accept=\".jpg,.jpeg,.png\"\n        />\n  \n        <label for=\"fileInput\" class=\"file-label\">\n          <div v-if=\"isDragging\">Release to drop files.</div>\n          <div v-else>Drop files or <br/><b>Tap</b> to upload.</div>\n        </label>\n      </div>\n      <img class=\"preview-img\"  :src=\"fileURL == null ? remoteFileURL : localeFileURL\"/>\n      <label for=\"\">Or</label>\n      <v-text-field type=\"text\" prepend-inner-icon=\"mdi-file-outline\" class=\"fileLinkField\" v-model=\"remoteFileURL\" variant=\"outlined\" label=\"Paste file link\"></v-text-field>\n      <button class=\"uploadBtn\" @click=\"handleUploadFile\">Upload File</button>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { BASE_URL } from '@/config'; \nimport axios from 'axios';\n\nexport default {\n    props: { \n        card: String\n     },\n    setup() {\n        var isDragging = ref(false)\n        // var files = ref([])\n        var localeFileURL = ref(\"\")\n        var remoteFileURL = ref(\"\")\n        var selectedFile = ref(null)\n        var card_id = ref(\"\")\n        return {isDragging, localeFileURL, selectedFile, remoteFileURL, card_id}\n    }, \n    methods: {\n        async handleUploadFile() {\n            console.log(\"card_id: \", this.card_id)\n           if (this.selectedFile != null && this.localeFileURL != null) {\n               var postJson = {\n                 card_id: this.card_id\n               }\n              var formsData = new FormData()\n              formsData.append('attachment', this.selectedFile, this.selectedFile.name)\n              formsData.append(\"postJson\", JSON.stringify(postJson))\n              let fullURL = BASE_URL + \"files/upload\"\n              await axios.post(fullURL, formsData).then((response) => {\n                 console.log(\"upload file response: \", response)\n              })\n            }\n        },\n        onChange() {\n        let file = this.$refs.file.files[0]\n        console.log(\"dropped file: \", file)\n        this.selectedFile = file\n        this.localeFileURL = this.generateURL(file)\n        this.remoteFileURL = null\n      },\n      dragover(e) {\n        e.preventDefault();\n        this.isDragging = true;\n      },\n      dragleave() {\n        this.isDragging = false;\n      },\n      drop(e) {\n        e.preventDefault();\n        this.$refs.file.files = e.dataTransfer.files;\n        this.onChange();\n        this.isDragging = false;\n      },\n      generateURL(file) {\n       let fileSrc = URL.createObjectURL(file);\n       setTimeout(() => {\n         URL.revokeObjectURL(fileSrc);\n       }, 1000);\n       return fileSrc;\n      },\n    }, \n    watch: { \n        remoteFileURL(newVal, oldVal) { \n            if (newVal != null) {\n                this.fileURL = null\n                this.selectedFile = null\n            }\n        }, \n    }, \n    // updated() {\n    //     // this.card_id = card\n    //     console.log(this.card)\n    //     this.card_id = this.card\n    //     console.log(\"card_id: \", this.card_id)\n    // },\n}\n</script>\n<style scoped>\n.fileLinkField {\n  width: 280px;\n  max-height: 44px;\n  font-weight: 500;\n  font-size: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 0px solid var(--color-light-primary) !important;\n  border-color: var(--color-light-primary);\n  margin-top: 10px;\n}\n\n.uploadBtn { \n  margin-top: 40px;\n  margin-bottom: 10px;\n  width: 260px;\n  height: 44px;\n  margin-right: auto;\n  margin-left: auto;\n  font-weight: 600;\n  font-size: 16px;\n  color: white;\n  background-color: var(--color-primary);\n  border: 0px solid transparent;\n  border-radius: var(--border-radius-1);\n}\n\n  .dropFileMainView {\n    display: flex;\n    flex-direction: column;\n    height: 750px;\n    width: 300px;\n    overflow: hidden;\n  }\n\n.dropzone-container {\n    background: #f7fafc;\n    border: 1px solid #e2e8f0;\n    height: 250px;\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border-top-left-radius: var(--border-radius-2);\n    border-top-right-radius: var(--border-radius-2);\n}\n\n.hidden-input {\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    width: 1px;\n    height: 1px;\n}\n\n.file-label {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n    font-size: 20px;\n    cursor: pointer;\n}\n\n.preview-img {\n  width: 100px;\n  height: 100px;\n  margin-top: 15px;\n  margin-bottom: 8px;\n  object-fit: contain;\n  margin-right: auto;\n  margin-left: auto;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}