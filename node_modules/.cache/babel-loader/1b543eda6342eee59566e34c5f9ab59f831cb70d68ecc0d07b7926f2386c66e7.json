{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/totalCustomers.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-1b36db36\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"searchContainer\"\n};\nconst _hoisted_2 = {\n  class: \"taskNotificationContainer\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  id: \"addIcon\",\n  class: \"material-symbols-outlined\"\n}, \"add\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  class: \"profileImage\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_autocomplete = _resolveComponent(\"v-autocomplete\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"navBar\",\n    style: _normalizeStyle({\n      width: $setup.isSideBarExpanded ? 'calc(100vw - 250px)' : '100vw'\n    })\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_v_autocomplete, {\n    items: $setup.searchHistory,\n    density: \"comfortable\",\n    \"menu-icon\": \"\",\n    placeholder: \"Search...\",\n    \"prepend-inner-icon\": \"mdi-magnify\",\n    style: {\n      \"background-color\": \"white\",\n      \"max-height\": \"48px\",\n      \"border-radius\": \"16px\"\n    },\n    theme: \"light\",\n    variant: \"solo-filled\",\n    \"auto-select-first\": \"\",\n    \"item-props\": \"\"\n  }, null, 8 /* PROPS */, [\"items\"])]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleAddProduct && _ctx.handleAddProduct(...args))\n  }, [_hoisted_3, _createTextVNode(\" Create New Board\")])]), _hoisted_4], 4 /* STYLE */);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","id","src","_createElementBlock","style","_normalizeStyle","width","$setup","isSideBarExpanded","_hoisted_1","_createVNode","_component_v_autocomplete","items","searchHistory","density","placeholder","theme","variant","_hoisted_2","onClick","_cache","args","_ctx","handleAddProduct","_hoisted_3","_createTextVNode","_hoisted_4"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/NavBarView.vue"],"sourcesContent":["<template>\n    <div class=\"navBar\" :style=\"{width: isSideBarExpanded ? 'calc(100vw - 250px)' : '100vw'}\">\n       <div class=\"searchContainer\">\n        <v-autocomplete\n              :items=\"searchHistory\"\n              density=\"comfortable\"\n              menu-icon=\"\"\n              placeholder=\"Search...\"\n              prepend-inner-icon=\"mdi-magnify\"\n              style=\"background-color: white; max-height: 48px; border-radius: 16px;\"\n              theme=\"light\"\n              variant=\"solo-filled\"\n              auto-select-first\n              item-props\n          ></v-autocomplete>\n       </div>\n       <div class=\"taskNotificationContainer\">\n            <button @click=\"handleAddProduct\">       \n            <span id=\"addIcon\" class=\"material-symbols-outlined\">add</span>\n            Create New Board</button>\n       </div>      \n       <img src=\"@/assets/totalCustomers.png\" class=\"profileImage\">\n    </div>\n</template>\n<script>\nimport { ref } from 'vue'\nexport default {\n    props: [\"isExpanded\"],\n    setup() {\n        var searchHistory = ref([\"Groceries\", \"Fruits\", \"Meat\", \"Meatlo\", \"Something nice here\"])\n        var isSideBarExpanded = ref(true)\n        return { searchHistory, isSideBarExpanded } \n    }, \n    watch: { \n        isExpanded: function(newVal, oldVal) {\n            console.log('Prop changed isSideBarExpanwded: ', newVal)\n            this.isSideBarExpanded = newVal\n        }\n    }, \n}\n</script>\n<style scoped>\n.taskNotificationContainer button {\n    background-color: var(--color-bar-dark);\n    border-radius: var(--border-radius-2);\n    height: 50px;\n    width: 160px;\n    color: white;\n}\n.profileImage {\n    width: 40px;\n    height: 40px;\n    border-radius: 4px;\n    margin-left: 5px;\n    margin-top: auto;\n    margin-bottom: auto;\n}\n.searchContainer {\n    width: calc(100% - 240px);\n    height: 50px;\n    padding-right: 400px;\n    padding-left: 20px;\n    background-color: green;\n    padding-top: 10px;\n    padding-bottom: 10px;\n}\n.taskNotificationContainer {\n    width: 240px;\n    height: 50px;\n    display: flex;\n    flex-direction: row;\n    /* margin-right: 30px; */\n}\n\n.searchContainer, .taskNotificationContainer {\n    margin-top: auto;\n    margin-bottom: auto;\n}\n\n.navBar {\n  height: 50px;\n  width: calc(100vw - 250px);\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-right: auto;\n  margin-left: auto;\n  background-color: white;\n}\n</style>"],"mappings":";OAqBYA,UAAiC;;;EAnBjCC,KAAK,EAAC;AAAiB;;EAcvBA,KAAK,EAAC;AAA2B;gEAEjCC,mBAAA,CAA+D;EAAzDC,EAAE,EAAC,SAAS;EAACF,KAAK,EAAC;GAA4B,KAAG;gEAG7DC,mBAAA,CAA4D;EAAvDE,GAAiC,EAAjCJ,UAAiC;EAACC,KAAK,EAAC;;;;uBApBhDI,mBAAA,CAqBM;IArBDJ,KAAK,EAAC,QAAQ;IAAEK,KAAK,EAD9BC,eAAA;MAAAC,KAAA,EACwCC,MAAA,CAAAC,iBAAiB;IAAA;MAClDR,mBAAA,CAaM,OAbNS,UAaM,GAZLC,YAAA,CAWoBC,yBAAA;IAVbC,KAAK,EAAEL,MAAA,CAAAM,aAAa;IACrBC,OAAO,EAAC,aAAa;IACrB,WAAS,EAAC,EAAE;IACZC,WAAW,EAAC,WAAW;IACvB,oBAAkB,EAAC,aAAa;IAChCX,KAAuE,EAAvE;MAAA;MAAA;MAAA;IAAA,CAAuE;IACvEY,KAAK,EAAC,OAAO;IACbC,OAAO,EAAC,aAAa;IACrB,mBAAiB,EAAjB,EAAiB;IACjB,YAAU,EAAV;wCAGPjB,mBAAA,CAIM,OAJNkB,UAIM,GAHDlB,mBAAA,CAEyB;IAFhBmB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,gBAAA,IAAAD,IAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;MAChCG,UAA+D,EAlB3EC,gBAAA,CAkB2E,mBAC/C,E,KAErBC,UAA4D,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}