{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6ad22e9b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"memberOverlay\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Members\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"separatorLineView\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"membersList\"\n};\nconst _hoisted_6 = {\n  class: \"member-row\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  key: 1,\n  class: \"defaultImage\"\n};\nconst _hoisted_9 = {\n  for: \"\"\n};\nconst _hoisted_10 = {\n  for: \"\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"Make Admin\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.members, (member, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"memberCell\",\n      key: index\n    }, [_createElementVNode(\"div\", _hoisted_6, [member.picture.length > 0 ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: member.picture,\n      class: \"defaultImage\"\n    }, null, 8 /* PROPS */, _hoisted_7)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"label\", _hoisted_9, _toDisplayString(member.fullName.substring(0, 1)), 1 /* TEXT */)])), _createElementVNode(\"label\", _hoisted_10, _toDisplayString(member.fullName), 1 /* TEXT */)]), _hoisted_11]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","for","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","$setup","members","member","index","_hoisted_6","picture","length","src","_hoisted_7","_hoisted_8","_hoisted_9","_toDisplayString","fullName","substring","_hoisted_10","_hoisted_11"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/MemberOverlayView.vue"],"sourcesContent":["<template>\n    <div class=\"memberOverlay\">\n        <input type=\"text\">\n        <label for=\"\">Members</label>\n        <div class=\"separatorLineView\"/>\n        <div class=\"membersList\">\n           <div class=\"memberCell\" v-for=\"(member, index) in members\" :key=\"index\">\n                <div class=\"member-row\">\n                    <img v-if=\"member.picture.length > 0\" :src=\"member.picture\" class=\"defaultImage\">\n                <div v-else class=\"defaultImage\">\n                    <label for=\"\">{{ member.fullName.substring(0,1) }}</label>\n                </div>\n                <label for=\"\">{{ member.fullName }}</label>\n              </div> \n             <button>Make Admin</button>\n           </div>\n        </div>\n    </div>\n</template>\n<script>\nimport APIService from '@/APIService';\nimport { ref } from 'vue'\nexport default {\n    props: {\n        boardId: {\n            type: String\n        }\n    },\n    setup() {\n        var members = ref([])\n        return {\n            members\n        }\n    }, \n    methods: {\n        async fetchMembers() {\n            let params = {\n                boardId: this.boardId\n            }\n          let allMembers = await APIService.getBoardMembers(params)\n          console.log(\"allMembers: \", allMembers, \"params: \", params)\n          this.members = allMembers\n        }\n    }, \n    mounted() {\n        APIService.init()\n        this.fetchMembers()\n    }\n}\n</script>\n<style scoped>\n.defaultImage label {\n    color: white;\n    font-weight: 500;\n}\n.defaultImage {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 30px;\n    width: 30px;\n    border-radius: 15px;\n    background-color: orangered;\n    color: white;\n}\n.memberCell {\n    display: flex;\n    padding-left: 15px;\n    gap: 8px;\n    height: 50px;\n    align-items: center;\n}\n.membersList {\n    margin-top: 20px;\n    height: 480px;\n    overflow-y: scroll;\n}\n.separatorLineView {\n    height: 1px;\n    width: 100%;\n    margin-top: 150px;\n    background-color: var(--color-light);\n}\n.memberOverlay {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    background-color: red;\n}\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAe;gEACtBC,mBAAA,CAAmB;EAAZC,IAAI,EAAC;AAAM;gEAClBD,mBAAA,CAA6B;EAAtBE,GAAG,EAAC;AAAE,GAAC,SAAO;gEACrBF,mBAAA,CAAgC;EAA3BD,KAAK,EAAC;AAAmB;;EACzBA,KAAK,EAAC;AAAa;;EAEXA,KAAK,EAAC;AAAY;mBAPvC;;EAAAI,GAAA;EAS4BJ,KAAK,EAAC;;;EACPG,GAAG,EAAC;AAAE;;EAEVA,GAAG,EAAC;AAAE;iEAEhBF,mBAAA,CAA2B,gBAAnB,YAAU;;uBAb3BI,mBAAA,CAgBM,OAhBNC,UAgBM,GAfFC,UAAmB,EACnBC,UAA6B,EAC7BC,UAAgC,EAChCR,mBAAA,CAWM,OAXNS,UAWM,I,kBAVHL,mBAAA,CASMM,SAAA,QAfjBC,WAAA,CAM6DC,MAAA,CAAAC,OAAO,EANpE,CAM2CC,MAAM,EAAEC,KAAK;yBAA7CX,mBAAA,CASM;MATDL,KAAK,EAAC,YAAY;MAAqCI,GAAG,EAAEY;QAC5Df,mBAAA,CAMI,OANJgB,UAMI,GALWF,MAAM,CAACG,OAAO,CAACC,MAAM,Q,cAAhCd,mBAAA,CAAiF;MARrGD,GAAA;MAQ2DgB,GAAG,EAAEL,MAAM,CAACG,OAAO;MAAElB,KAAK,EAAC;4BARtFqB,UAAA,M,cASgBhB,mBAAA,CAEM,OAFNiB,UAEM,GADFrB,mBAAA,CAA0D,SAA1DsB,UAA0D,EAAAC,gBAAA,CAAzCT,MAAM,CAACU,QAAQ,CAACC,SAAS,uB,IAE9CzB,mBAAA,CAA2C,SAA3C0B,WAA2C,EAAAH,gBAAA,CAA1BT,MAAM,CAACU,QAAQ,iB,GAEnCG,WAA2B,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}