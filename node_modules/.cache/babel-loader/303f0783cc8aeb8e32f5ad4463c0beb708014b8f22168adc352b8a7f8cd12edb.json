{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PopupOverlay from './PopupOverlay.vue';\nimport PopupRouterView from './PopupRouterView.vue';\nimport { BASE_URL, USER_CACHE_KEY } from '@/config';\nimport ButtonCard from '@/components/ButtonCard.vue';\nimport DescriptionViewFrom from '@/components/DescriptionViewForm.vue';\nimport TagContainerView from '@/components/TagContainerView.vue';\nimport TextEditorView from '@/components/TextEditorView.vue';\nimport AttachmentView from '@/components/AttachmentView.vue';\nimport axios from 'axios';\nimport { ref } from 'vue';\nimport CryptoJS from 'crypto-js';\nimport Editor from 'primevue/editor';\nimport { VTimePicker } from 'vuetify/labs/VTimePicker';\nimport { VueEditor } from 'vue2-editor';\nimport { saveDesc } from '@/APIService';\nexport default {\n  inject: [\"cryptojs\"],\n  name: 'ProductImagePopup',\n  components: {\n    PopupOverlay,\n    PopupRouterView,\n    ButtonCard,\n    DescriptionViewFrom,\n    TagContainerView,\n    TextEditorView,\n    Editor,\n    AttachmentView,\n    VTimePicker,\n    VueEditor\n  },\n  setup() {\n    var members = ref([1, 2, 3, 4, 5, 6, 7, 8]);\n    var isTracked = ref(true);\n    var card = ref(null);\n    var list = ref(null);\n    var cardDesc = ref(\"Test description\");\n    var currentUser = ref(null);\n    var isTagTapped = ref(false);\n    var boardTags = ref([]);\n    var cardTags = ref([]);\n    var isDateTapped = ref(false);\n    var isAttachmentTapped = ref(false);\n    var selectedDate = ref(null);\n    var value = ref(null);\n    var time = ref(\"11:15\");\n    var timeStep = ref(\"10:10\");\n    var isLoading = ref(true);\n    var boardId = ref(\"\");\n    var isEditingDesc = ref(false);\n    var attachments = ref([]);\n    var isShowFileView = ref(false);\n    return {\n      members,\n      isTracked,\n      card,\n      cardDesc,\n      list,\n      isAttachmentTapped,\n      isLoading,\n      boardId,\n      attachments,\n      isShowFileView,\n      currentUser,\n      isTagTapped,\n      boardTags,\n      cardTags,\n      isDateTapped,\n      selectedDate,\n      value,\n      time,\n      timeStep,\n      isEditingDesc\n    };\n  },\n  async mounted() {},\n  created() {\n    // fetch from api\n    let routeParams = this.$route.params;\n    console.log(\"pop up params: \", routeParams);\n    this.boardId = routeParams.boardId;\n    let card_id = routeParams.cardId;\n    this.getCardBy(card_id);\n  },\n  methods: {\n    handleFileBrowserTapped() {\n      console.log(\"file browser tapped\");\n      this.isShowFileView = true;\n    },\n    handleDidUploadFile(updatedCard) {\n      this.card = updatedCard;\n      this.attachments = updatedCard.attachments;\n    },\n    async handleSaveTag(tag) {\n      console.log(\"prepare to save tag\");\n      var params = {\n        boardId: this.boardId,\n        cardId: this.card.id,\n        name: tag.name,\n        colorHex: tag.color,\n        id: Date.now()\n      };\n      var fullURL = BASE_URL + \"board/createTag\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"tag resp data: \", data);\n        }\n      });\n    },\n    handleCancelDescEditing() {\n      this.isEditingDesc = false;\n    },\n    handleDescEdit() {\n      this.isEditingDesc = true;\n    },\n    async handleSaveDate() {\n      let timeArray = this.time.split(':');\n      this.selectedDate.setHours(timeArray[0]);\n      this.selectedDate.setMinutes(timeArray[1]);\n      let dueDateMilliSec = this.selectedDate.getTime();\n      var params = {\n        card_id: this.card._id,\n        dueDate: dueDateMilliSec\n      };\n      var fullURL = BASE_URL + \"board/addDueDateToCard\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          if (data.statusCode == 200) {\n            this.card.dueDate = dueDateMilliSec;\n            this.selectedDate = null;\n            this.isDateTapped = false;\n            console.log(\"list and card info updated: \", data.resp);\n          }\n        }\n      });\n    },\n    async handleTagChanged(tag) {\n      if (tag.isChecked) {\n        this.cardTags.push(tag);\n      } else {\n        this.cardTags = this.cardTags.filter(item => item.id != tag.id);\n      }\n      var tags = [];\n      for (var index in this.cardTags) {\n        let cardTag = this.cardTags[index];\n        tags.push(cardTag.id);\n      }\n      var params = {\n        card_id: this.card._id,\n        tags: tags\n      };\n      var fullURL = BASE_URL + \"board/addTagsToCard\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"tags updated: \", data);\n        }\n      });\n    },\n    isTagChecked(tag) {\n      let tagFiler = this.cardTags.filter(item => item.id == tag.id);\n      return tagFiler.length > 0;\n    },\n    async fetchTags() {\n      var params = {\n        boardId: this.boardId\n      };\n      var fullURL = BASE_URL + \"board/getTags\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"fetch tag resps: \", data);\n          this.autoGrow();\n          if (data.resp != null) {\n            var tags = [];\n            for (var index in data.resp) {\n              let item = data.resp[index];\n              tags.push({\n                isChecked: this.isTagChecked(item),\n                name: item.name,\n                colorHex: item.colorHex,\n                id: item.id,\n                _id: item._id\n              });\n            }\n            this.boardTags = tags;\n          }\n        }\n      });\n    },\n    handleGoBack() {\n      let path = \"/b/\" + this.boardId;\n      this.$router.push({\n        path: path\n      });\n    },\n    handleSaveDescription() {\n      console.log(\"save description tapped\");\n      let html = document.getElementById(\"editor\").innerHTML;\n      console.log(\"editor html: \", html);\n      this.isEditingDesc = false;\n      saveDesc(html, this.card._id);\n    },\n    allowedHours: v => v % 2,\n    allowedMinutes: v => v >= 10 && v <= 50,\n    allowedStep: m => m % 10 === 0,\n    handleAttachmentTapped() {\n      this.isAttachmentTapped = true;\n    },\n    formatDate(card) {\n      let date = new Date(card.dueDate).toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric'\n      });\n      return date;\n    },\n    async getCardBy(card_id) {\n      var params = {\n        card_id: card_id\n      };\n      var fullURL = BASE_URL + \"board/getCardDetail\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          if (data.statusCode == 200) {\n            let resp = data.resp;\n            console.log(\"card detail data: \", resp);\n            if (resp != null) {\n              this.card = resp.card;\n              this.list = resp.list;\n              this.cardTags = resp.tags;\n              this.attachments = resp.attachments;\n              this.fetchTags();\n            }\n          }\n        }\n      });\n    },\n    autoGrow() {\n      let element = document.getElementById(\"cardNameId\");\n      if (element != null) {\n        element.style.height = \"20px\";\n        element.style.height = element.scrollHeight + \"px\";\n      }\n    },\n    handleDateTapped() {\n      this.isDateTapped = true;\n    },\n    refreshTags() {\n      this.fetchTags();\n    },\n    handleTagTapped() {\n      console.log(\"Tags tapped\");\n      this.isTagTapped = true;\n    },\n    expandAll() {\n      console.log(\"finally updated...\");\n    },\n    getUserInfo() {\n      let userCacheString = localStorage.getItem(USER_CACHE_KEY);\n      if (userCacheString == null) {\n        this.$router.push({\n          path: \"/login\"\n        });\n      } else {\n        let userCache = JSON.parse(userCacheString);\n        let decryptionToken = userCache.token;\n        let encryptedUserData = userCache.user;\n        let decryptedData = CryptoJS.AES.decrypt(encryptedUserData, decryptionToken).toString(CryptoJS.enc.Utf8);\n        let cacheInfoObject = JSON.parse(decryptedData);\n        this.currentUser = cacheInfoObject.user;\n        console.log(\"currentUser: \", this.currentUser);\n      }\n    },\n    async handleContentInfoTapped() {\n      console.log(\"selectedCard: \", this.card);\n      var params = {\n        card_id: this.card._id,\n        cardName: this.card.cardName,\n        cardDesc: this.cardDesc\n      };\n      var fullURL = BASE_URL + \"board/updateCard\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"card detail resp data: \", data);\n        }\n      });\n    }\n  },\n  watch: {\n    card() {\n      this.getUserInfo();\n    },\n    list(newVal, oldVal) {\n      this.selectedList = newVal;\n    },\n    tags(newVal, oldVal) {\n      console.log('tags popover prop changed: ', newVal, ' | was: ', oldVal);\n      var tags = [];\n      for (var index in newVal) {\n        let item = newVal[index];\n        tags.push({\n          isChecked: false,\n          name: item.name,\n          colorHex: item.colorHex,\n          id: item.id,\n          _id: item._id\n        });\n      }\n      this.cardTags = tags;\n      this.fetchTags();\n      let curentDate = new Date();\n      let hour = curentDate.getHours();\n      let minute = curentDate.getMinutes();\n      this.time = hour.toString() + \":\" + minute.toString();\n    },\n    selectedDate(newVal, oldVal) {\n      console.log('date changed: ', newVal, ' | was: ', oldVal);\n    }\n  }\n};","map":{"version":3,"names":["PopupOverlay","PopupRouterView","BASE_URL","USER_CACHE_KEY","ButtonCard","DescriptionViewFrom","TagContainerView","TextEditorView","AttachmentView","axios","ref","CryptoJS","Editor","VTimePicker","VueEditor","saveDesc","inject","name","components","setup","members","isTracked","card","list","cardDesc","currentUser","isTagTapped","boardTags","cardTags","isDateTapped","isAttachmentTapped","selectedDate","value","time","timeStep","isLoading","boardId","isEditingDesc","attachments","isShowFileView","mounted","created","routeParams","$route","params","console","log","card_id","cardId","getCardBy","methods","handleFileBrowserTapped","handleDidUploadFile","updatedCard","handleSaveTag","tag","id","colorHex","color","Date","now","fullURL","post","then","response","data","handleCancelDescEditing","handleDescEdit","handleSaveDate","timeArray","split","setHours","setMinutes","dueDateMilliSec","getTime","_id","dueDate","statusCode","resp","handleTagChanged","isChecked","push","filter","item","tags","index","cardTag","isTagChecked","tagFiler","length","fetchTags","autoGrow","handleGoBack","path","$router","handleSaveDescription","html","document","getElementById","innerHTML","allowedHours","v","allowedMinutes","allowedStep","m","handleAttachmentTapped","formatDate","date","toLocaleDateString","month","day","hour","minute","element","style","height","scrollHeight","handleDateTapped","refreshTags","handleTagTapped","expandAll","getUserInfo","userCacheString","localStorage","getItem","userCache","JSON","parse","decryptionToken","token","encryptedUserData","user","decryptedData","AES","decrypt","toString","enc","Utf8","cacheInfoObject","handleContentInfoTapped","cardName","watch","newVal","oldVal","selectedList","curentDate","getHours","getMinutes"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/CardPopupView.vue"],"sourcesContent":["<template>\n    <PopupRouterView>\n      <PopupOverlay/>\n    <v-container v-if=\"card == null\">\n    <v-row>\n      <v-col cols=\"12\" md=\"12\">\n        <v-skeleton-loader\n          class=\"mx-auto border\"\n          width=\"300\"\n          height=\"300\"\n          type=\"image, article\"\n        ></v-skeleton-loader>\n      </v-col>\n    </v-row>\n  </v-container>\n      <div class=\"card\" v-if=\"card != null\" @click.self=\"handleGoBack\">\n        <div class=\"cardInfoContainer\">\n             <div class=\"contentContainer\">\n                <textarea type=\"text\" v-on:blur=\"handleContentInfoTapped()\"  @input=\"autoGrow()\" class=\"cardNameField\" id=\"cardNameId\" v-model=\"card.cardName\"></textarea>\n                <div class=\"profileTagInfoContainer\">\n                <img src=\"@/assets/cardPhoto.png\" class=\"ownerProfile\">\n                <div class=\"profileInfoContainer\">\n                    <label class=\"onwerNameLabel\">Samuel</label>\n                    <label class=\"ownerRoleLabel\">Admin</label>\n                </div>\n                <img src=\"@/assets/cardPhoto.png\" class=\"assignedProfile\">\n                <div class=\"assignInfoContainer\">\n                    <label class=\"onwerNameLabel\">Ricky Bob</label>\n                    <label class=\"ownerRoleLabel\">Assignee</label>\n                </div>\n                </div>\n                <div class=\"tagItemsView\"> \n                    <v-chip-group selected-class=\"text-primary\" column>\n                   <v-chip v-for=\"tag in cardTags\" :key=\"tag\" style=\"border-radius: 8px; disable\">\n                     <label class=\"tagLabel\" :style=\"{'background-color': tag.colorHex}\">{{ tag.name }}</label>\n                   </v-chip>\n                  </v-chip-group>\n                </div>\n                <div class=\"profileTagInfoContainer\">\n                    <label class=\"listTagContainer\">{{ list.listName }}</label>\n                    <ButtonCard v-if=\"card.dueDate != null\" imageIcon=\"calendar.png\" :title=\"formatDate(card)\" class=\"dueDateField\"/>\n                    <ButtonCard imageIcon=\"eyeViews.png\" title=\"Tracking\" class=\"dueDateField\" isTracked=\"true\"/>\n                </div>\n                <TextEditorView class=\"descriptionContainer\" :cardDescription=\"card.description\" :isEditingDesc=\"this.isEditingDesc\" @isEditing=\"handleDescEdit\"/>\n                <div class=\"descriptionBtns\" v-if=\"isEditingDesc\">\n                    <button class=\"saveDescriptionBtn\" @click=\"handleSaveDescription\">Save</button>\n                    <button class=\"canelDescripBtn\" @click=\"handleCancelDescEditing\">Cancel</button>\n                </div>\n                <label class=\"attachmentsTitleLabel\" v-if=\" this.attachments.length > 0\">Attachments</label>\n                <div class=\"attachmentListView\">\n                    <div class=\"attachmentCell\" v-for=\"(attachment, index) in this.attachments\" :key=\"index\" @click=\"handleFileBrowserTapped\">\n                         <img :src=\"attachment.fileURL\" class=\"attchmentPreview\">\n                         <div class=\"attachmentInfoContainer\">\n                             <label class=\"attachmentFileNameLabel\">{{ attachment.fileName }}</label>\n                             <label class=\"attachmentDateLabel\">Attached on {{ attachment.createdAt }}</label>\n                         </div>\n                    </div>\n                </div>\n             </div>\n\n            <div class=\"controlsContainer\">\n             <label class=\"memberTitleLabel\">Members</label>\n             <div class=\"membersContainer\">\n                <div class=\"memberCell\" v-for=\"(index, member) in members\" :key=\"member\">\n                   <img :src=\"require(index == 8 ? `@/assets/add.svg` : `@/assets/cardPhoto.png`)\" class=\"memberPhoto\">\n                   <label class=\"memberNameLabel\" v-if=\"index != 8\">Name</label>\n                   <label class=\"memberNameLabel\" v-else>Join</label>\n                </div>\n             </div>\n             <label class=\"seeMoreMembersLabel\">See more</label>\n\n\n             <label class=\"memberLabel\">Action</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Assign\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Move\"/>\n\n             <label class=\"memberLabel\">Manage</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Tags\" @click=\"handleTagTapped\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Due Date\" @click=\"handleDateTapped\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Poll\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Checklist\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Attachments\" @click=\"handleAttachmentTapped\"/>\n             <label class=\"memberLabel\">Connect</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Share\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Copy URL\"/>\n             <label class=\"memberLabel\">Archive</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Delete\"/>\n             </div>\n        </div>\n        <!-- <v-overlay v-model=\"isShowFileView\" class=\"align-center justify-center overLayContainer\" contained>\n             <div class=\"fileViewer\">\n             </div>\n        </v-overlay> -->\n\n        <v-overlay v-model=\"isTagTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px;\" activator=\"tagBtn\" contained>\n            <TagContainerView @handleSaveTag=\"handleSaveTag\" @refreshTags=\"refreshTags\" @handleTagChanged=\"handleTagChanged\" :boardTags=\"this.boardTags\" class=\"tagContainerView\"/>\n        </v-overlay>\n        <v-overlay v-model=\"isDateTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" activator=\"tagBtn\" contained>\n          <div class=\"dueDateMainView\">\n           <div class=\"dateContainerView\">\n               <v-container>\n                 <v-row justify=\"space-around\">\n                   <v-date-picker show-adjacent-months v-model=\"selectedDate\"></v-date-picker>\n                 </v-row>\n                </v-container>\n            </div>\n            <div class=\"timePickerContainer\">   \n        <v-row justify=\"space-around\">\n      <v-time-picker\n        v-model=\"time\"\n        format=\"12hr\"\n        scrollable\n      ></v-time-picker>\n    </v-row>\n        </div>\n            <button :class=\"selectedDate == null ? `dateBtnDisabled` : `saveDateBtn`\" :disabled=\"selectedDate == null\" @click=\"handleSaveDate\">Save Date</button>\n        </div>\n        </v-overlay>\n\n        <v-overlay v-model=\"isAttachmentTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" contained>\n            <AttachmentView :card=\"this.card._id\" class=\"attachmentContainerView\" @fileUploadComplete=\"handleDidUploadFile\"/>\n        </v-overlay>\n\n        <v-overlay v-model=\"isShowFileView\" class=\"align-center justify-center overLayContainer\" contained>\n            <div class=\"fileViewer\">\n            </div>\n        </v-overlay>\n    \n    </div>\n    </PopupRouterView>\n  </template>\n\n<script>\nimport PopupOverlay from './PopupOverlay.vue';\nimport PopupRouterView from './PopupRouterView.vue';\nimport { BASE_URL, USER_CACHE_KEY } from '@/config'\n\nimport ButtonCard from '@/components/ButtonCard.vue'\nimport DescriptionViewFrom from '@/components/DescriptionViewForm.vue'\nimport TagContainerView from '@/components/TagContainerView.vue';\nimport TextEditorView from '@/components/TextEditorView.vue'\nimport AttachmentView from '@/components/AttachmentView.vue';\n\nimport axios from 'axios';\nimport { ref } from 'vue'\n\nimport CryptoJS from 'crypto-js'\nimport Editor from 'primevue/editor'\nimport { VTimePicker } from 'vuetify/labs/VTimePicker'\nimport { VueEditor } from 'vue2-editor'\nimport { saveDesc } from '@/APIService'\n  \nexport default {\n  inject: [\"cryptojs\"],\n  name: 'ProductImagePopup',\n  components: {\n    PopupOverlay,\n    PopupRouterView, \n    ButtonCard, DescriptionViewFrom, TagContainerView, TextEditorView, Editor, AttachmentView, VTimePicker, VueEditor\n  },\n  setup() {\n    var members = ref([1, 2, 3, 4, 5, 6, 7, 8])\n    var isTracked = ref(true)\n    var card = ref(null)\n    var list = ref(null)\n    var cardDesc = ref(\"Test description\")\n    var currentUser = ref(null)\n    var isTagTapped = ref(false)\n    var boardTags = ref([])\n    var cardTags = ref([])\n    var isDateTapped = ref(false)\n    var isAttachmentTapped = ref(false)\n    var selectedDate = ref(null)\n    var value = ref(null)\n    var time = ref(\"11:15\")\n    var timeStep = ref(\"10:10\")\n    var isLoading = ref(true)\n    var boardId = ref(\"\")\n    var isEditingDesc = ref(false)\n    var attachments = ref([])\n    var isShowFileView = ref(false) \n    return { \n          members, isTracked, card, cardDesc, list, isAttachmentTapped, isLoading, boardId, attachments, isShowFileView,\n          currentUser, isTagTapped, boardTags, cardTags, isDateTapped, selectedDate, value, time, timeStep, isEditingDesc\n        }\n    },\n    async mounted() {\n    },\n    created() {\n      // fetch from api\n      let routeParams = this.$route.params\n      console.log(\"pop up params: \", routeParams)\n      this.boardId = routeParams.boardId\n      let card_id = routeParams.cardId\n      this.getCardBy(card_id)\n    },\n    methods: {\n        handleFileBrowserTapped() {\n            console.log(\"file browser tapped\")\n            this.isShowFileView = true \n        },\n        handleDidUploadFile(updatedCard) {\n            this.card = updatedCard\n            this.attachments = updatedCard.attachments\n        },\n        async handleSaveTag(tag) {\n         console.log(\"prepare to save tag\")\n         var params = {\n            boardId: this.boardId, \n            cardId: this.card.id,\n            name: tag.name, \n            colorHex: tag.color, \n            id: Date.now()\n         }\n         var fullURL = BASE_URL + \"board/createTag\"\n         await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n             let data = response.data\n             console.log(\"tag resp data: \", data)\n            }\n          })\n        }, \n        handleCancelDescEditing() {\n            this.isEditingDesc = false \n        },\n        handleDescEdit() {\n            this.isEditingDesc = true \n        },\n        async handleSaveDate() {\n            let timeArray = this.time.split(':')\n            this.selectedDate.setHours(timeArray[0])\n            this.selectedDate.setMinutes(timeArray[1])\n            let dueDateMilliSec = this.selectedDate.getTime()\n            var params = {\n                card_id: this.card._id, \n                dueDate: dueDateMilliSec\n        }\n        var fullURL = BASE_URL + \"board/addDueDateToCard\"\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            if (data.statusCode == 200) {\n                this.card.dueDate = dueDateMilliSec\n                this.selectedDate = null\n                this.isDateTapped = false \n                console.log(\"list and card info updated: \", data.resp)\n              }\n             }\n          })\n        },\n      async handleTagChanged(tag) {\n            if (tag.isChecked) {\n                this.cardTags.push(tag)\n            } else {\n                this.cardTags = this.cardTags.filter(item => item.id != tag.id);\n            }\n          var tags = []\n          for (var index in this.cardTags) {\n             let cardTag = this.cardTags[index]\n             tags.push(cardTag.id)\n           }\n          var params = {\n            card_id: this.card._id, \n            tags: tags\n          }\n          var fullURL = BASE_URL + \"board/addTagsToCard\"\n          await axios.post(fullURL, params).then((response) => {\n            if (response.data != null) {\n             let data = response.data\n             console.log(\"tags updated: \", data)\n            }\n          })\n        },\n      isTagChecked(tag) {\n          let tagFiler = this.cardTags.filter(item => item.id == tag.id)\n          return tagFiler.length > 0\n      },\n      async fetchTags() {\n          var params = {\n            boardId: this.boardId\n          }\n          var fullURL = BASE_URL + \"board/getTags\"\n          await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n             let data = response.data\n             console.log(\"fetch tag resps: \", data)\n             this.autoGrow()\n             if (data.resp != null) {\n                var tags = []\n                for (var index in data.resp) {\n                    let item = data.resp[index]\n                    tags.push({isChecked: this.isTagChecked(item), name: item.name, colorHex: item.colorHex, id: item.id, _id: item._id})\n                }\n                this.boardTags = tags\n             }\n            }\n          })\n        },\n      handleGoBack() {\n        let path = \"/b/\" + this.boardId\n        this.$router.push({path: path})\n      },\n      handleSaveDescription() {\n          console.log(\"save description tapped\")\n          let html = document.getElementById(\"editor\").innerHTML\n          console.log(\"editor html: \", html)\n          this.isEditingDesc = false \n          saveDesc(html, this.card._id)\n      },\n      allowedHours: v => v % 2,\n      allowedMinutes: v => v >= 10 && v <= 50,\n      allowedStep: m => m % 10 === 0,\n      handleAttachmentTapped() {\n          this.isAttachmentTapped = true \n      },\n      formatDate(card) {\n          let date =  new Date(card.dueDate).toLocaleDateString('en-US', {\n              month: 'short', day: 'numeric' , hour: 'numeric', minute: 'numeric'\n          })\n          return date\n      },\n      async getCardBy(card_id) {\n        var params = {\n            card_id: card_id\n        }\n        var fullURL = BASE_URL + \"board/getCardDetail\"\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            if (data.statusCode == 200) {\n                let resp = data.resp\n                console.log(\"card detail data: \", resp)\n                if (resp != null) {\n                   this.card = resp.card\n                   this.list = resp.list\n                   this.cardTags = resp.tags\n                   this.attachments = resp.attachments\n                   this.fetchTags()\n                }\n              }\n             }\n          })\n        },\n        autoGrow() {\n            let element = document.getElementById(\"cardNameId\")\n            if (element != null) {\n                element.style.height = \"20px\";\n                element.style.height = (element.scrollHeight) + \"px\";\n            }\n        }, \n        handleDateTapped() {\n            this.isDateTapped = true \n        },\n        refreshTags() {\n            this.fetchTags()\n        },\n        handleTagTapped() {\n            console.log(\"Tags tapped\")\n            this.isTagTapped = true \n        },\n        expandAll() {\n            console.log(\"finally updated...\")\n        },\n        getUserInfo() {\n            let userCacheString = localStorage.getItem(USER_CACHE_KEY)\n            if (userCacheString == null) {\n                this.$router.push({path: \"/login\"})\n            } else {\n                let userCache = JSON.parse(userCacheString)\n                let decryptionToken = userCache.token\n                let encryptedUserData = userCache.user\n                let decryptedData = CryptoJS.AES.decrypt(encryptedUserData, decryptionToken).toString(CryptoJS.enc.Utf8)\n                let cacheInfoObject = JSON.parse(decryptedData)\n                this.currentUser = cacheInfoObject.user\n               console.log(\"currentUser: \", this.currentUser)\n            }\n        }, \n        async handleContentInfoTapped() {\n          console.log(\"selectedCard: \", this.card)\n          var params = {\n            card_id: this.card._id, \n            cardName: this.card.cardName, \n            cardDesc: this.cardDesc\n         }\n         var fullURL = BASE_URL + \"board/updateCard\"\n         await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n             let data = response.data\n             console.log(\"card detail resp data: \", data)\n            }\n          })\n        }\n    }, \n    watch: { \n        card() { \n           this.getUserInfo()\n        }, \n        list(newVal, oldVal) { \n           this.selectedList = newVal\n        }, \n        tags(newVal, oldVal) { \n           console.log('tags popover prop changed: ', newVal, ' | was: ', oldVal)\n           var tags = []\n            for (var index in newVal) {\n                let item = newVal[index]\n                tags.push({isChecked: false, name: item.name, colorHex: item.colorHex, id: item.id, _id: item._id})\n            }\n           this.cardTags = tags\n           this.fetchTags()\n           let curentDate = new Date()\n           let hour = curentDate.getHours()\n           let minute = curentDate.getMinutes()\n           this.time = hour.toString() + \":\" + minute.toString()\n        }, \n        selectedDate(newVal, oldVal) {\n            console.log('date changed: ', newVal, ' | was: ', oldVal)\n        }\n    }\n}\n</script>\n\n\n<style scoped>\n.fileViewer {\n    height: 400px;\n    width: 400px;\n    background-color: rebeccapurple;\n}\n.attachmentDateLabel {\n    font-weight: 300;\n    font-size: 12px;\n    display: flex;\n    margin-top: 4px; \n}\n.attachmentFileNameLabel {\n    font-weight: 500;\n    font-size: 16px;\n    display: flex;\n    max-height: 50px;\n    margin-top: 8px;\n}\n.attachmentInfoContainer {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    margin-left: 10px;\n    width: calc(100% - 110px);\n    height: 80px;\n    padding-bottom: 8px;\n}\n.attchmentPreview {\n    width: 80px;\n    height: 80px;\n    border-radius: 8px;\n    margin-top: auto;\n    margin-bottom: auto;\n    margin-left: 10px;\n    object-fit: contain;\n    overflow: hidden;\n}\n\n.attachmentsTitleLabel {\n    margin-top: 20px;\n    font-weight: 600;\n    font-size: 18px;\n    margin-bottom: 10px;\n    float: left;\n    display: flex;\n}\n.attachmentCell {\n    display: flex;\n    height: 90px;\n    width: 98%;\n    margin-bottom: 10px;\n    background-color: var(--color-background);\n    border-radius: 8px;\n}\n.descriptionBtns {\n    display: flex;\n    justify-content: space-between;\n    width: 160px;\n    height: 40px;\n}\n.canelDescripBtn {\n    font-weight: 600;\n    font-size: 16px;\n    width: 80px;\n    height: 40px;\n    color: var(--color-dark);\n}\n\n.saveDescriptionBtn, .saveDescriptionDisabledBtn { \n  width: 70px;\n  height: 40px;\n  font-weight: 600;\n  font-size: 16px;\n  color: white;\n  background-color: var(--color-bar-dark);\n  border: 0px solid transparent;\n  border-radius: var(--border-radius-1);\n}\n\n.saveDescriptionDisabledBtn {\n    background-color: var(--color-light);\n    color: var(--color-dark-variant);\n}\n\n.attachmentScrollContainer {\n    height: 350px;\n    width: 100%;\n    background-color: orangered;\n}\n.dateContainerView {\n    width: 300px;\n    height: 480px;\n}\n.v-time-picker {\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    margin-top: -70px;\n    margin-left: 30px;\n}\n.timePickerContainer {\n    height: 280px;\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n}\n.attachmentContainerView {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: white;\n    width: 300px;\n    height: 400px;\n    border-radius: var(--border-radius-2);\n}\n.saveDateBtn, .dateBtnDisabled { \n  margin-top: 10px;\n  margin-bottom: 10px;\n  width: 260px;\n  height: 44px;\n  margin-right: auto;\n  margin-left: auto;\n  font-weight: 600;\n  font-size: 16px;\n  color: white;\n  background-color: var(--color-bar-dark);\n  border: 0px solid transparent;\n  border-radius: var(--border-radius-1);\n}\n.dateBtnDisabled {\n    background-color: var(--color-light);\n    color: var(--color-dark-variant);\n}\n\n.dueDateMainView {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: white;\n    /* height: 550px; */\n    /* min-height: 970px; */\n    min-height: 970px;\n    border-radius: var(--border-radius-2);\n    overflow-y: scroll;\n}\n\n\n\n.tagCell {\n    background-color: #8B81F7;\n    height: 100%;\n    width: 100%;\n}\n.tagItemsView {\n    width: 480px;\n}\n.tagLabel {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    justify-items: center;\n    padding: 0;\n    height: 40px;\n    margin-right: -12px;\n    margin-left: -12px;\n    padding-right: 12px;\n    padding-left: 12px;\n    border-radius: var(--border-radius-1);\n    color: white;\n    font-weight: 600;\n    background-color: #8B81F7;\n}\n.tagContainerView {\n    z-index: 9999999;\n    width: 300px;\n    height: 600px;\n    margin-right: auto;\n    margin-left: auto;\n    /* margin-right: calc((100vw / 4)); */\n    background-color: white;\n    border-radius: var(--border-radius-1);\n}\n.descriptionContainer {\n    border: 1px solid var(--color-light);\n    border-radius: var(--border-radius-1);\n    margin-right: 500px;\n}\n.listTagContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 38px;\n    width: 140px;\n    padding-right: 10px;\n    padding-left: 10px;\n    color: var(--color-dark);\n    font-weight: 600;\n    background-color: var(--color-background);\n    border-radius: var(--border-radius-1);\n    text-transform: uppercase;\n    overflow: hidden;\n    white-space:nowrap;\n    text-overflow: clip;\n}\n.dueDateField {\n    width: 165px;\n    margin-left: 10px;\n}\n.ownerRoleLabel {\n    display: flex;\n    font-weight: 700;\n    font-size: 10px;\n    overflow: hidden;\n    text-align: center;\n    color: var(--color-dark);\n}\n.onwerNameLabel {\n    display: flex;\n    font-weight: 700;\n    font-size: 13px;\n    overflow: hidden;\n    text-align: center;\n}\n.ownerProfile, .assignedProfile {\n    width: 32px;\n    height: 32px;\n    object-fit: fill;\n    overflow: hidden;\n    border-radius: var(--border-radius-1);\n}\n\n.assignedProfile {\n    margin-left: 20px;\n}\n.profileInfoContainer, .assignInfoContainer {\n    display: flex;\n    flex-direction: column;\n    height: 40px;\n    margin-left: 5px;\n}\n\n.profileTagInfoContainer {\n    display: flex;\n    width: 100%;\n    height: 50px;\n    margin-top: 5px;\n}\n.cardNameField {\n    display: flex;\n    margin-top: 20px;\n    font-size: 20px;\n    font-weight: 700;\n    resize: none;\n    color: var(--color-dark);\n    margin-bottom: 8px;\n    min-height: 20px;\n}\n\n.memberCell {\n    display: flex;\n    flex-direction: column;\n}\n.memberNameLabel {\n    display: flex;\n    font-weight: 500;\n    font-size: 10px;\n    overflow: hidden;\n    text-align: center;\n    width: 100%;\n    margin-left: 1px;\n}\n.memberPhoto {\n    width: 30px;\n    height: 30px;\n    border-radius: var(--border-radius-1);\n    object-fit: fill;\n    overflow: hidden;\n}\n.memberTitleLabel {\n    display: flex;\n    margin: 10px;\n    margin-top: 24px;\n    font-weight: 600;\n    font-size: 14px;\n}\n\n.seeMoreMembersLabel {\n    margin-right: auto;\n    margin-left: auto;\n    text-align: center;\n    font-weight: 400;\n    font-size: 12px;\n    margin-top: 8px;\n}\n\n.memberLabel {\n    display: flex;\n    margin: 10px;\n    margin-top: 20px;\n    font-weight: 600;\n    font-size: 14px;\n}\n.contentContainer {\n    display: flex;\n    flex-direction: column;\n    width: 550px;\n    min-height: 94vh;\n    border-top-left-radius: var(--border-radius-2);\n    border-bottom-left-radius: var(--border-radius-2);\n    padding-left: 20px;\n    padding-right: 15px;\n}\n.controlsContainer {\n    display: flex;\n    flex-direction: column;\n    width: 190px;\n    min-height: 94vh;\n    border-top-right-radius: var(--border-radius-2);\n    border-bottom-right-radius: var(--border-radius-2);\n    /* background-color: aliceblue; */\n}\n.membersContainer {\n    display: grid;\n    grid-template-columns: repeat(4, 40px);\n    grid-template-rows: repeat(4, 56px);\n    width: 160px;\n    height: 100px;\n    justify-content: center;\n    margin-right: auto;\n    margin-left: auto;\n    grid-column-gap: 1px;\n    grid-row-gap: 1px;\n    margin-top: 4px;\n}\n\n.cardInfoContainer {\n    display: flex;\n    width: 740px;\n    /* width: 930px; */\n    min-height: 94vh;\n    margin-right: auto;\n    margin-left: auto;\n    margin-top: 3vh;\n    margin-bottom: 3vh;\n    background-color: white;\n    z-index: 999999999999;\n    border-radius: var(--border-radius-2);\n    padding-bottom: 30px;\n    /* overflow-y: scroll; */\n}\n .card {\n    width: 100vw;\n    height: 100vh;\n    background-color: transparent;\n    overflow-y: scroll;\n    z-index: 999999999999999;\n }\n</style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}