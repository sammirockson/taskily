{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// src/zindex/index.ts\nfunction handler() {\n  let zIndexes = [];\n  const generateZIndex = (key, autoZIndex, baseZIndex = 999) => {\n    const lastZIndex = getLastZIndex(key, autoZIndex, baseZIndex);\n    const newZIndex = lastZIndex.value + (lastZIndex.key === key ? 0 : baseZIndex) + 1;\n    zIndexes.push({\n      key,\n      value: newZIndex\n    });\n    return newZIndex;\n  };\n  const revertZIndex = zIndex => {\n    zIndexes = zIndexes.filter(obj => obj.value !== zIndex);\n  };\n  const getCurrentZIndex = (key, autoZIndex) => {\n    return getLastZIndex(key, autoZIndex).value;\n  };\n  const getLastZIndex = (key, autoZIndex, baseZIndex = 0) => {\n    return [...zIndexes].reverse().find(obj => autoZIndex ? true : obj.key === key) || {\n      key,\n      value: baseZIndex\n    };\n  };\n  const getZIndex = element => {\n    return element ? parseInt(element.style.zIndex, 10) || 0 : 0;\n  };\n  return {\n    get: getZIndex,\n    set: (key, element, baseZIndex) => {\n      if (element) {\n        element.style.zIndex = String(generateZIndex(key, true, baseZIndex));\n      }\n    },\n    clear: element => {\n      if (element) {\n        revertZIndex(getZIndex(element));\n        element.style.zIndex = \"\";\n      }\n    },\n    getCurrent: key => getCurrentZIndex(key, true)\n  };\n}\nvar ZIndex = handler();\nexport { ZIndex };","map":{"version":3,"names":["handler","zIndexes","generateZIndex","key","autoZIndex","baseZIndex","lastZIndex","getLastZIndex","newZIndex","value","push","revertZIndex","zIndex","filter","obj","getCurrentZIndex","reverse","find","getZIndex","element","parseInt","style","get","set","String","clear","getCurrent","ZIndex"],"sources":["../../src/zindex/index.ts"],"sourcesContent":["export interface ZIndexOptions {\n    get(element?: HTMLElement): number;\n    set(key: string, element: HTMLElement, baseZIndex?: number): void;\n    clear(element: HTMLElement): void;\n    getCurrent(key: string): number;\n}\n\nfunction handler(): ZIndexOptions {\n    let zIndexes: { key: string; value: number }[] = [];\n\n    const generateZIndex = (key: string, autoZIndex: boolean, baseZIndex: number = 999) => {\n        const lastZIndex = getLastZIndex(key, autoZIndex, baseZIndex);\n        const newZIndex = lastZIndex.value + (lastZIndex.key === key ? 0 : baseZIndex) + 1;\n\n        zIndexes.push({ key, value: newZIndex });\n\n        return newZIndex;\n    };\n\n    const revertZIndex = (zIndex: number) => {\n        zIndexes = zIndexes.filter((obj) => obj.value !== zIndex);\n    };\n\n    const getCurrentZIndex = (key: string, autoZIndex: boolean) => {\n        return getLastZIndex(key, autoZIndex).value;\n    };\n\n    const getLastZIndex = (key: string, autoZIndex: boolean, baseZIndex: number = 0) => {\n        return [...zIndexes].reverse().find((obj) => (autoZIndex ? true : obj.key === key)) || { key, value: baseZIndex };\n    };\n\n    const getZIndex = (element?: HTMLElement): number => {\n        return element ? parseInt(element.style.zIndex, 10) || 0 : 0;\n    };\n\n    return {\n        get: getZIndex,\n        set: (key: string, element?: HTMLElement, baseZIndex?: number) => {\n            if (element) {\n                element.style.zIndex = String(generateZIndex(key, true, baseZIndex));\n            }\n        },\n        clear: (element?: HTMLElement) => {\n            if (element) {\n                revertZIndex(getZIndex(element));\n                element.style.zIndex = '';\n            }\n        },\n        getCurrent: (key: string) => getCurrentZIndex(key, true)\n    };\n}\n\nexport const ZIndex: ZIndexOptions = handler();\n"],"mappings":";;AAOA,SAASA,QAAA,EAAyB;EAC9B,IAAIC,QAAA,GAA6C,EAAC;EAElD,MAAMC,cAAA,GAAiBA,CAACC,GAAA,EAAaC,UAAA,EAAqBC,UAAA,GAAqB,QAAQ;IACnF,MAAMC,UAAA,GAAaC,aAAA,CAAcJ,GAAA,EAAKC,UAAA,EAAYC,UAAU;IAC5D,MAAMG,SAAA,GAAYF,UAAA,CAAWG,KAAA,IAASH,UAAA,CAAWH,GAAA,KAAQA,GAAA,GAAM,IAAIE,UAAA,IAAc;IAEjFJ,QAAA,CAASS,IAAA,CAAK;MAAEP,GAAA;MAAKM,KAAA,EAAOD;IAAU,CAAC;IAEvC,OAAOA,SAAA;EACX;EAEA,MAAMG,YAAA,GAAgBC,MAAA,IAAmB;IACrCX,QAAA,GAAWA,QAAA,CAASY,MAAA,CAAQC,GAAA,IAAQA,GAAA,CAAIL,KAAA,KAAUG,MAAM;EAC5D;EAEA,MAAMG,gBAAA,GAAmBA,CAACZ,GAAA,EAAaC,UAAA,KAAwB;IAC3D,OAAOG,aAAA,CAAcJ,GAAA,EAAKC,UAAU,EAAEK,KAAA;EAC1C;EAEA,MAAMF,aAAA,GAAgBA,CAACJ,GAAA,EAAaC,UAAA,EAAqBC,UAAA,GAAqB,MAAM;IAChF,OAAO,CAAC,GAAGJ,QAAQ,EAAEe,OAAA,CAAQ,EAAEC,IAAA,CAAMH,GAAA,IAASV,UAAA,GAAa,OAAOU,GAAA,CAAIX,GAAA,KAAQA,GAAI,KAAK;MAAEA,GAAA;MAAKM,KAAA,EAAOJ;IAAW;EACpH;EAEA,MAAMa,SAAA,GAAaC,OAAA,IAAkC;IACjD,OAAOA,OAAA,GAAUC,QAAA,CAASD,OAAA,CAAQE,KAAA,CAAMT,MAAA,EAAQ,EAAE,KAAK,IAAI;EAC/D;EAEA,OAAO;IACHU,GAAA,EAAKJ,SAAA;IACLK,GAAA,EAAKA,CAACpB,GAAA,EAAagB,OAAA,EAAuBd,UAAA,KAAwB;MAC9D,IAAIc,OAAA,EAAS;QACTA,OAAA,CAAQE,KAAA,CAAMT,MAAA,GAASY,MAAA,CAAOtB,cAAA,CAAeC,GAAA,EAAK,MAAME,UAAU,CAAC;MACvE;IACJ;IACAoB,KAAA,EAAQN,OAAA,IAA0B;MAC9B,IAAIA,OAAA,EAAS;QACTR,YAAA,CAAaO,SAAA,CAAUC,OAAO,CAAC;QAC/BA,OAAA,CAAQE,KAAA,CAAMT,MAAA,GAAS;MAC3B;IACJ;IACAc,UAAA,EAAavB,GAAA,IAAgBY,gBAAA,CAAiBZ,GAAA,EAAK,IAAI;EAC3D;AACJ;AAEO,IAAMwB,MAAA,GAAwB3B,OAAA,CAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}