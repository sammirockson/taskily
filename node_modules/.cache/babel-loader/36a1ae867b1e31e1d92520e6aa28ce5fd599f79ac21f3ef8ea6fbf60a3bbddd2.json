{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PopupOverlay from './PopupOverlay.vue';\nimport PopupRouterView from './PopupRouterView.vue';\nimport { BASE_URL, USER_CACHE_KEY } from '@/config';\nimport ButtonCard from '@/components/ButtonCard.vue';\nimport DescriptionViewFrom from '@/components/DescriptionViewForm.vue';\nimport TagContainerView from '@/components/TagContainerView.vue';\nimport TextEditorView from '@/components/TextEditorView.vue';\nimport AttachmentView from '@/components/AttachmentView.vue';\nimport axios from 'axios';\nimport { ref } from 'vue';\nimport CryptoJS from 'crypto-js';\nimport Editor from 'primevue/editor';\nimport { VTimePicker } from 'vuetify/labs/VTimePicker';\nimport { VueEditor } from 'vue2-editor';\nexport default {\n  inject: [\"cryptojs\"],\n  name: 'ProductImagePopup',\n  components: {\n    PopupOverlay,\n    PopupRouterView,\n    ButtonCard,\n    DescriptionViewFrom,\n    TagContainerView,\n    TextEditorView,\n    Editor,\n    AttachmentView,\n    VTimePicker,\n    VueEditor\n  },\n  setup() {\n    var members = ref([1, 2, 3, 4, 5, 6, 7, 8]);\n    var isTracked = ref(true);\n    var card = ref(null);\n    var list = ref(null);\n    var cardDesc = ref(\"Test description\");\n    var selectedList = ref(null);\n    var currentUser = ref(null);\n    var isTagTapped = ref(false);\n    var boardTags = ref([]);\n    var cardTags = ref([]);\n    var isDateTapped = ref(false);\n    var isAttachmentTapped = ref(false);\n    var selectedDate = ref(null);\n    var value = ref(null);\n    var time = ref(\"11:15\");\n    var timeStep = ref(\"10:10\");\n    var isLoading = ref(true);\n    var cardDescription = ref(\"\");\n    return {\n      members,\n      isTracked,\n      card,\n      cardDesc,\n      list,\n      isAttachmentTapped,\n      isLoading,\n      cardDescription,\n      currentUser,\n      isTagTapped,\n      boardTags,\n      cardTags,\n      isDateTapped,\n      selectedDate,\n      value,\n      time,\n      timeStep\n    };\n  },\n  created() {\n    // fetch from api\n    let routeParams = this.$route.params;\n    console.log(\"pop up params: \", routeParams);\n    // Call api to fetch board\n    let card_id = routeParams.cardId;\n    this.getCardBy(card_id);\n  },\n  methods: {\n    handleGoBack() {\n      this.$router.go(-1);\n    },\n    handleSaveDescription() {\n      console.log(\"save description tapped\");\n      // let html = document.getElementById(\"editor\").innerHTML\n      // console.log(\"editor html: \", html)\n      // descriptionContainer\n    },\n    allowedHours: v => v % 2,\n    allowedMinutes: v => v >= 10 && v <= 50,\n    allowedStep: m => m % 10 === 0,\n    handleAttachmentTapped() {\n      this.isAttachmentTapped = true;\n    },\n    formatDate(card) {\n      let date = new Date(card.dueDate).toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric'\n      });\n      return date;\n    },\n    async getCardBy(card_id) {\n      var params = {\n        card_id: card_id\n      };\n      var fullURL = BASE_URL + \"board/getCardDetail\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          if (data.statusCode == 200) {\n            let resp = data.resp;\n            console.log(\"card detail data: \", resp);\n            if (resp != null) {\n              this.card = resp.card;\n              this.list = resp.list;\n              this.cardTags = resp.tags;\n              this.autoGrow();\n              //  this.isCardTapped = true \n              //  this.$emit('cardDetailInfo', resp)\n            }\n          }\n        }\n      });\n    },\n    autoGrow() {\n      let element = document.getElementById(\"cardNameId\");\n      if (element != null) {\n        element.style.height = \"15px\";\n        element.style.height = element.scrollHeight + \"px\";\n      }\n    },\n    handleDateTapped() {\n      this.isDateTapped = true;\n    },\n    refreshTags() {\n      this.fetchTags();\n    },\n    handleTagTapped() {\n      console.log(\"Tags tapped\");\n      this.isTagTapped = true;\n    },\n    expandAll() {\n      console.log(\"finally updated...\");\n    },\n    getUserInfo() {\n      let userCacheString = localStorage.getItem(USER_CACHE_KEY);\n      if (userCacheString == null) {\n        this.$router.push({\n          path: \"/login\"\n        });\n      } else {\n        let userCache = JSON.parse(userCacheString);\n        let decryptionToken = userCache.token;\n        let encryptedUserData = userCache.user;\n        let decryptedData = CryptoJS.AES.decrypt(encryptedUserData, decryptionToken).toString(CryptoJS.enc.Utf8);\n        let cacheInfoObject = JSON.parse(decryptedData);\n        this.currentUser = cacheInfoObject.user;\n        console.log(\"currentUser: \", this.currentUser);\n      }\n    },\n    async handleContentInfoTapped() {\n      console.log(\"selectedCard: \", this.selectedCard);\n      var params = {\n        card_id: this.selectedCard._id,\n        cardName: this.selectedCard.cardName,\n        cardDesc: this.cardDesc\n      };\n      var fullURL = BASE_URL + \"board/updateCard\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"card detail resp data: \", data);\n        }\n      });\n    }\n  },\n  watch: {\n    card(newVal, oldVal) {\n      this.selectedCard = newVal;\n      this.getUserInfo();\n    },\n    list(newVal, oldVal) {\n      this.selectedList = newVal;\n    },\n    tags(newVal, oldVal) {\n      console.log('tags popover prop changed: ', newVal, ' | was: ', oldVal);\n      var tags = [];\n      for (var index in newVal) {\n        let item = newVal[index];\n        tags.push({\n          isChecked: false,\n          name: item.name,\n          colorHex: item.colorHex,\n          id: item.id,\n          _id: item._id\n        });\n      }\n      this.cardTags = tags;\n      this.fetchTags();\n      let curentDate = new Date();\n      let hour = curentDate.getHours();\n      let minute = curentDate.getMinutes();\n      this.time = hour.toString() + \":\" + minute.toString();\n    },\n    selectedDate(newVal, oldVal) {\n      console.log('date changed: ', newVal, ' | was: ', oldVal);\n    }\n  },\n  updated() {}\n};","map":{"version":3,"names":["PopupOverlay","PopupRouterView","BASE_URL","USER_CACHE_KEY","ButtonCard","DescriptionViewFrom","TagContainerView","TextEditorView","AttachmentView","axios","ref","CryptoJS","Editor","VTimePicker","VueEditor","inject","name","components","setup","members","isTracked","card","list","cardDesc","selectedList","currentUser","isTagTapped","boardTags","cardTags","isDateTapped","isAttachmentTapped","selectedDate","value","time","timeStep","isLoading","cardDescription","created","routeParams","$route","params","console","log","card_id","cardId","getCardBy","methods","handleGoBack","$router","go","handleSaveDescription","allowedHours","v","allowedMinutes","allowedStep","m","handleAttachmentTapped","formatDate","date","Date","dueDate","toLocaleDateString","month","day","hour","minute","fullURL","post","then","response","data","statusCode","resp","tags","autoGrow","element","document","getElementById","style","height","scrollHeight","handleDateTapped","refreshTags","fetchTags","handleTagTapped","expandAll","getUserInfo","userCacheString","localStorage","getItem","push","path","userCache","JSON","parse","decryptionToken","token","encryptedUserData","user","decryptedData","AES","decrypt","toString","enc","Utf8","cacheInfoObject","handleContentInfoTapped","selectedCard","_id","cardName","watch","newVal","oldVal","index","item","isChecked","colorHex","id","curentDate","getHours","getMinutes","updated"],"sources":["/Users/samuelrockon/Desktop/Dev/taskily/src/components/CardPopupView.vue"],"sourcesContent":["<template>\n    <PopupRouterView>\n      <PopupOverlay/>\n      <div class=\"card\" v-if=\"card != null\" @click=\"handleGoBack\">\n        <div class=\"cardInfoContainer\">\n             <div class=\"contentContainer\">\n                <textarea type=\"text\" v-on:blur=\"handleContentInfoTapped()\"  @input=\"autoGrow()\" class=\"cardNameField\" id=\"cardNameId\" v-model=\"card.cardName\"></textarea>\n                <div class=\"profileTagInfoContainer\">\n                <img src=\"@/assets/cardPhoto.png\" class=\"ownerProfile\">\n                <div class=\"profileInfoContainer\">\n                    <label class=\"onwerNameLabel\">Samuel</label>\n                    <label class=\"ownerRoleLabel\">Admin</label>\n                </div>\n                <img src=\"@/assets/cardPhoto.png\" class=\"assignedProfile\">\n                <div class=\"assignInfoContainer\">\n                    <label class=\"onwerNameLabel\">Ricky Bob</label>\n                    <label class=\"ownerRoleLabel\">Assignee</label>\n                </div>\n                </div>\n                <div class=\"tagItemsView\"> \n                    <v-chip-group selected-class=\"text-primary\" column>\n                   <v-chip v-for=\"tag in cardTags\" :key=\"tag\" style=\"border-radius: 8px; disable\">\n                     <label class=\"tagLabel\" :style=\"{'background-color': tag.colorHex}\">{{ tag.name }}</label>\n                   </v-chip>\n                  </v-chip-group>\n                </div>\n                <div class=\"profileTagInfoContainer\">\n                    <label class=\"listTagContainer\">{{ list.listName }}</label>\n                    <ButtonCard v-if=\"card.dueDate != null\" imageIcon=\"calendar.png\" :title=\"formatDate(card)\" class=\"dueDateField\"/>\n                    <ButtonCard imageIcon=\"eyeViews.png\" title=\"Tracking\" class=\"dueDateField\" isTracked=\"true\"/>\n                </div>\n                <!-- <DescriptionViewFrom class=\"descriptionContainer\"/> -->\n                <TextEditorView class=\"descriptionContainer\" :cardDescription=\"this.cardDescription\"/>\n                <div class=\"descriptionBtns\">\n                    <button :class=\"cardDescription.length > 0 ? `saveDescriptionBtn` : `saveDescriptionDisabledBtn`\" :disabled='cardDescription.length == 0' @click=\"handleSaveDescription\">Save</button>\n                    <button class=\"canelDescripBtn\">Cancel</button>\n                </div>\n             </div>\n\n             <div class=\"controlsContainer\">\n             <label class=\"memberTitleLabel\">Members</label>\n             <div class=\"membersContainer\">\n                <div class=\"memberCell\" v-for=\"(index, member) in members\" :key=\"member\">\n                   <img :src=\"require(index == 8 ? `@/assets/add.svg` : `@/assets/cardPhoto.png`)\" class=\"memberPhoto\">\n                   <label class=\"memberNameLabel\" v-if=\"index != 8\">Name</label>\n                   <label class=\"memberNameLabel\" v-else>Join</label>\n                </div>\n             </div>\n             <label class=\"seeMoreMembersLabel\">See more</label>\n\n\n             <label class=\"memberLabel\">Action</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Assign\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Move\"/>\n\n             <label class=\"memberLabel\">Manage</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Tags\" @click=\"handleTagTapped\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Due Date\" @click=\"handleDateTapped\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Poll\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Checklist\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Attachments\" @click=\"handleAttachmentTapped\"/>\n             <label class=\"memberLabel\">Connect</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Share\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Copy URL\"/>\n             <label class=\"memberLabel\">Archive</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Delete\"/>\n             </div>\n        </div>\n        <v-overlay v-model=\"isTagTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" activator=\"tagBtn\" contained>\n            <TagContainerView @handleSaveTag=\"handleSaveTag\" @refreshTags=\"refreshTags\" @handleTagChanged=\"handleTagChanged\" :boardTags=\"this.boardTags\" class=\"tagContainerView\"/>\n        </v-overlay>\n        <v-overlay v-model=\"isDateTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" activator=\"tagBtn\" contained>\n          <div class=\"dueDateMainView\">\n           <div class=\"dateContainerView\">\n               <v-container>\n                 <v-row justify=\"space-around\">\n                   <v-date-picker show-adjacent-months v-model=\"selectedDate\"></v-date-picker>\n                 </v-row>\n                </v-container>\n            </div>\n            <div class=\"timePickerContainer\">   \n        <v-row justify=\"space-around\">\n      <v-time-picker\n        v-model=\"time\"\n        format=\"12hr\"\n        scrollable\n      ></v-time-picker>\n    </v-row>\n        </div>\n            <button :class=\"selectedDate == null ? `dateBtnDisabled` : `saveDateBtn`\" :disabled=\"selectedDate == null\" @click=\"handleSaveDate\">Save Date</button>\n        </div>\n        </v-overlay>\n        <v-overlay v-model=\"isAttachmentTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" contained>\n            <AttachmentView :card=\"this.card._id\" class=\"attachmentContainerView\"/>\n        </v-overlay>\n    </div>\n    </PopupRouterView>\n  </template>\n\n<script>\nimport PopupOverlay from './PopupOverlay.vue';\nimport PopupRouterView from './PopupRouterView.vue';\nimport { BASE_URL, USER_CACHE_KEY } from '@/config'\n\nimport ButtonCard from '@/components/ButtonCard.vue'\nimport DescriptionViewFrom from '@/components/DescriptionViewForm.vue'\nimport TagContainerView from '@/components/TagContainerView.vue';\nimport TextEditorView from '@/components/TextEditorView.vue'\nimport AttachmentView from '@/components/AttachmentView.vue';\n\nimport axios from 'axios';\nimport { ref } from 'vue'\n\nimport CryptoJS from 'crypto-js'\nimport Editor from 'primevue/editor'\nimport { VTimePicker } from 'vuetify/labs/VTimePicker'\nimport { VueEditor } from 'vue2-editor'\n  \nexport default {\n  inject: [\"cryptojs\"],\n  name: 'ProductImagePopup',\n  components: {\n    PopupOverlay,\n    PopupRouterView, \n    ButtonCard, DescriptionViewFrom, TagContainerView, TextEditorView, Editor, AttachmentView, VTimePicker, VueEditor\n  },\n  setup() {\n    var members = ref([1, 2, 3, 4, 5, 6, 7, 8])\n        var isTracked = ref(true)\n        var card = ref(null)\n        var list = ref(null)\n        var cardDesc = ref(\"Test description\")\n        var selectedList = ref(null)\n        var currentUser = ref(null)\n        var isTagTapped = ref(false)\n        var boardTags = ref([])\n        var cardTags = ref([])\n        var isDateTapped = ref(false)\n        var isAttachmentTapped = ref(false)\n        var selectedDate = ref(null)\n        var value = ref(null)\n        var time = ref(\"11:15\")\n        var timeStep = ref(\"10:10\")\n        var isLoading = ref(true)\n        var cardDescription = ref(\"\")\n      return { \n             members, isTracked, card, cardDesc, list, isAttachmentTapped, isLoading, cardDescription,\n             currentUser, isTagTapped, boardTags, cardTags, isDateTapped, selectedDate, value, time, timeStep\n            }\n    },\n    created() {\n      // fetch from api\n      let routeParams = this.$route.params\n      console.log(\"pop up params: \", routeParams)\n      // Call api to fetch board\n      let card_id = routeParams.cardId\n      this.getCardBy(card_id)\n    },\n    methods: {\n      handleGoBack() {\n        this.$router.go(-1)\n      },\n      handleSaveDescription() {\n          console.log(\"save description tapped\")\n          // let html = document.getElementById(\"editor\").innerHTML\n          // console.log(\"editor html: \", html)\n            // descriptionContainer\n      },\n      allowedHours: v => v % 2,\n      allowedMinutes: v => v >= 10 && v <= 50,\n      allowedStep: m => m % 10 === 0,\n      handleAttachmentTapped() {\n          this.isAttachmentTapped = true \n      },\n      formatDate(card) {\n          let date =  new Date(card.dueDate).toLocaleDateString('en-US', {\n              month: 'short', day: 'numeric' , hour: 'numeric', minute: 'numeric'\n          })\n          return date\n      },\n      async getCardBy(card_id) {\n        var params = {\n            card_id: card_id\n        }\n        var fullURL = BASE_URL + \"board/getCardDetail\"\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            if (data.statusCode == 200) {\n                let resp = data.resp\n                console.log(\"card detail data: \", resp)\n                if (resp != null) {\n                   this.card = resp.card\n                   this.list = resp.list\n                   this.cardTags = resp.tags\n                   this.autoGrow()\n                  //  this.isCardTapped = true \n                  //  this.$emit('cardDetailInfo', resp)\n                }\n                \n              }\n             }\n          })\n        },\n        autoGrow() {\n            let element = document.getElementById(\"cardNameId\")\n            if (element != null) {\n                element.style.height = \"15px\";\n                element.style.height = (element.scrollHeight) + \"px\";\n            }\n        }, \n        handleDateTapped() {\n            this.isDateTapped = true \n        },\n        refreshTags() {\n            this.fetchTags()\n        },\n        handleTagTapped() {\n            console.log(\"Tags tapped\")\n            this.isTagTapped = true \n        },\n        expandAll() {\n            console.log(\"finally updated...\")\n        },\n        getUserInfo() {\n            let userCacheString = localStorage.getItem(USER_CACHE_KEY)\n            if (userCacheString == null) {\n                this.$router.push({path: \"/login\"})\n            } else {\n                let userCache = JSON.parse(userCacheString)\n                let decryptionToken = userCache.token\n                let encryptedUserData = userCache.user\n                let decryptedData = CryptoJS.AES.decrypt(encryptedUserData, decryptionToken).toString(CryptoJS.enc.Utf8)\n                let cacheInfoObject = JSON.parse(decryptedData)\n                this.currentUser = cacheInfoObject.user\n               console.log(\"currentUser: \", this.currentUser)\n            }\n        }, \n        async handleContentInfoTapped() {\n          console.log(\"selectedCard: \", this.selectedCard)\n          var params = {\n            card_id: this.selectedCard._id, \n            cardName: this.selectedCard.cardName, \n            cardDesc: this.cardDesc\n         }\n         var fullURL = BASE_URL + \"board/updateCard\"\n         await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n             let data = response.data\n             console.log(\"card detail resp data: \", data)\n            }\n          })\n        },\n        \n    }, \n    watch: { \n        card(newVal, oldVal) { \n           this.selectedCard = newVal\n           this.getUserInfo()\n        }, \n        list(newVal, oldVal) { \n           this.selectedList = newVal\n        }, \n        tags(newVal, oldVal) { \n           console.log('tags popover prop changed: ', newVal, ' | was: ', oldVal)\n           var tags = []\n            for (var index in newVal) {\n                let item = newVal[index]\n                tags.push({isChecked: false, name: item.name, colorHex: item.colorHex, id: item.id, _id: item._id})\n            }\n           this.cardTags = tags\n           this.fetchTags()\n           let curentDate = new Date()\n           let hour = curentDate.getHours()\n           let minute = curentDate.getMinutes()\n           this.time = hour.toString() + \":\" + minute.toString()\n        }, \n        selectedDate(newVal, oldVal) {\n            console.log('date changed: ', newVal, ' | was: ', oldVal)\n        }\n    },\n    updated() {\n      \n    }\n  }\n  </script>\n\n\n<style scoped>\n.descriptionBtns {\n    display: flex;\n    justify-content: space-between;\n    width: 160px;\n    height: 40px;\n}\n.canelDescripBtn {\n    font-weight: 600;\n    font-size: 16px;\n    width: 80px;\n    height: 40px;\n    color: var(--color-dark);\n}\n\n.saveDescriptionBtn, .saveDescriptionDisabledBtn { \n  width: 70px;\n  height: 40px;\n  font-weight: 600;\n  font-size: 16px;\n  color: white;\n  background-color: var(--color-primary);\n  border: 0px solid transparent;\n  border-radius: var(--border-radius-1);\n}\n\n.saveDescriptionDisabledBtn {\n    background-color: var(--color-light);\n    color: var(--color-dark-variant);\n}\n\n.attachmentScrollContainer {\n    height: 350px;\n    width: 100%;\n    background-color: orangered;\n}\n.dateContainerView {\n    width: 300px;\n    height: 480px;\n}\n.v-time-picker {\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    margin-top: -70px;\n    margin-left: 30px;\n}\n.timePickerContainer {\n    height: 280px;\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n}\n.attachmentContainerView {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: white;\n    width: 300px;\n    height: 550px;\n    border-radius: var(--border-radius-2);\n}\n.saveDateBtn, .dateBtnDisabled { \n  margin-top: 10px;\n  margin-bottom: 10px;\n  width: 260px;\n  height: 44px;\n  margin-right: auto;\n  margin-left: auto;\n  font-weight: 600;\n  font-size: 16px;\n  color: white;\n  background-color: var(--color-primary);\n  border: 0px solid transparent;\n  border-radius: var(--border-radius-1);\n}\n.dateBtnDisabled {\n    background-color: var(--color-light);\n    color: var(--color-dark-variant);\n}\n\n.dueDateMainView {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: white;\n    /* height: 550px; */\n    /* min-height: 970px; */\n    min-height: 970px;\n    border-radius: var(--border-radius-2);\n    overflow-y: scroll;\n}\n\n\n\n.tagCell {\n    background-color: #8B81F7;\n    height: 100%;\n    width: 100%;\n}\n.tagItemsView {\n    width: 480px;\n}\n.tagLabel {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    justify-items: center;\n    padding: 0;\n    height: 40px;\n    margin-right: -12px;\n    margin-left: -12px;\n    padding-right: 12px;\n    padding-left: 12px;\n    border-radius: var(--border-radius-1);\n    color: white;\n    font-weight: 600;\n    background-color: #8B81F7;\n}\n.tagContainerView {\n    z-index: 9999999;\n    width: 300px;\n    height: 600px;\n    margin-right: auto;\n    margin-left: auto;\n    /* margin-right: calc((100vw / 4)); */\n    background-color: white;\n    border-radius: var(--border-radius-1);\n}\n.descriptionContainer {\n    border: 1px solid var(--color-light);\n    border-radius: var(--border-radius-1);\n    margin-right: 500px;\n}\n.listTagContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 38px;\n    width: 140px;\n    padding-right: 10px;\n    padding-left: 10px;\n    color: var(--color-dark);\n    font-weight: 600;\n    background-color: var(--color-background);\n    border-radius: var(--border-radius-1);\n    text-transform: uppercase;\n    overflow: hidden;\n    white-space:nowrap;\n    text-overflow: clip;\n}\n.dueDateField {\n    width: 165px;\n    margin-left: 10px;\n}\n.ownerRoleLabel {\n    display: flex;\n    font-weight: 700;\n    font-size: 10px;\n    overflow: hidden;\n    text-align: center;\n    color: var(--color-dark);\n}\n.onwerNameLabel {\n    display: flex;\n    font-weight: 700;\n    font-size: 13px;\n    overflow: hidden;\n    text-align: center;\n}\n.ownerProfile, .assignedProfile {\n    width: 32px;\n    height: 32px;\n    object-fit: fill;\n    overflow: hidden;\n    border-radius: var(--border-radius-1);\n}\n\n.assignedProfile {\n    margin-left: 20px;\n}\n.profileInfoContainer, .assignInfoContainer {\n    display: flex;\n    flex-direction: column;\n    height: 40px;\n    margin-left: 5px;\n}\n\n.profileTagInfoContainer {\n    display: flex;\n    width: 100%;\n    height: 50px;\n    margin-top: 5px;\n}\n.cardNameField {\n    display: flex;\n    margin-top: 20px;\n    font-size: 20px;\n    font-weight: 700;\n    resize: none;\n    color: var(--color-dark);\n    margin-bottom: 8px;\n}\n\n.memberCell {\n    display: flex;\n    flex-direction: column;\n}\n.memberNameLabel {\n    display: flex;\n    font-weight: 500;\n    font-size: 10px;\n    overflow: hidden;\n    text-align: center;\n    width: 100%;\n    margin-left: 1px;\n}\n.memberPhoto {\n    width: 30px;\n    height: 30px;\n    border-radius: var(--border-radius-1);\n    object-fit: fill;\n    overflow: hidden;\n}\n.memberTitleLabel {\n    display: flex;\n    margin: 10px;\n    margin-top: 24px;\n    font-weight: 600;\n    font-size: 14px;\n}\n\n.seeMoreMembersLabel {\n    margin-right: auto;\n    margin-left: auto;\n    text-align: center;\n    font-weight: 400;\n    font-size: 12px;\n    margin-top: 8px;\n}\n\n.memberLabel {\n    display: flex;\n    margin: 10px;\n    margin-top: 20px;\n    font-weight: 600;\n    font-size: 14px;\n}\n.contentContainer {\n    display: flex;\n    flex-direction: column;\n    width: 550px;\n    min-height: 94vh;\n    border-top-left-radius: var(--border-radius-2);\n    border-bottom-left-radius: var(--border-radius-2);\n    padding-left: 20px;\n    padding-right: 15px;\n}\n.controlsContainer {\n    display: flex;\n    flex-direction: column;\n    width: 190px;\n    min-height: 94vh;\n    border-top-right-radius: var(--border-radius-2);\n    border-bottom-right-radius: var(--border-radius-2);\n    /* background-color: aliceblue; */\n}\n.membersContainer {\n    display: grid;\n    grid-template-columns: repeat(4, 40px);\n    grid-template-rows: repeat(4, 56px);\n    width: 160px;\n    height: 100px;\n    justify-content: center;\n    margin-right: auto;\n    margin-left: auto;\n    grid-column-gap: 1px;\n    grid-row-gap: 1px;\n    margin-top: 4px;\n}\n\n.cardInfoContainer {\n    display: flex;\n    width: 740px;\n    /* width: 930px; */\n    min-height: 94vh;\n    margin-right: auto;\n    margin-left: auto;\n    margin-top: 3vh;\n    margin-bottom: 3vh;\n    background-color: white;\n    z-index: 999999999999;\n    border-radius: var(--border-radius-2);\n    padding-bottom: 30px;\n    /* overflow-y: scroll; */\n}\n .card {\n    width: 100vw;\n    height: 100vh;\n    background-color: transparent;\n    overflow-y: scroll;\n    z-index: 999999999999999;\n }\n</style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}