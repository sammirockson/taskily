{"ast":null,"code":"import { ref } from 'vue';\nimport { BASE_URL } from '@/config';\nimport axios from 'axios';\nexport default {\n  setup() {\n    var boardName = ref(\"\");\n    var isCreatingBoard = ref(false);\n    return {\n      boardName,\n      isCreatingBoard\n    };\n  },\n  methods: {\n    async createNewBoard() {\n      this.isCreatingBoard = true;\n      // Create default list, then add the id\n      let listParam = {\n        id: \"listPlaceholder\",\n        listName: \"Add New List\",\n        headerType: \"addList\",\n        footerType: \"add\",\n        isAddCard: false,\n        isCreateList: false,\n        cards: []\n      };\n      var fullListURL = BASE_URL + \"board/newList\";\n      console.log(\"full url: \", fullURL, \"params: \", listParam);\n      await axios.post(fullURL, params).then(response => {\n        console.log(\"list response: \", response);\n        if (response.data != null) {\n          let data = response.data;\n          if (data.statusCode == 200) {\n            let listItem = data.resp;\n            console.log(\"list: \", listItem);\n          }\n        }\n      });\n\n      // var params = {\n      //     name : this.boardName, \n      //     owner: \"1721545684258\",\n      //     list: [],\n      //     id: Date.now()\n      // }\n      // var fullURL = BASE_URL + \"board/new\"\n      // console.log(\"full url: \", fullURL, \"params: \", params)\n      // await axios.post(fullURL, params).then((response) => {\n      //   this.isCreatingBoard = false\n      //   console.log(\"board response: \", response)\n      //   if (response.data != null) {\n      //     let data = response.data\n      //     if (data.statusCode == 200) {\n      //         let board = data.resp\n      //         console.log(\"board: \", board)\n      //         // Go to boards\n      //         this.$emit('closeOverlay', true)\n      //         this.$router.push({path: \"/boards\"})\n      //         // dismiss the overlay\n      //     } else {\n      //         alert(data.msg)\n      //     }\n      //    }\n      // })\n    }\n  }\n};","map":{"version":3,"names":["ref","BASE_URL","axios","setup","boardName","isCreatingBoard","methods","createNewBoard","listParam","id","listName","headerType","footerType","isAddCard","isCreateList","cards","fullListURL","console","log","fullURL","post","params","then","response","data","statusCode","listItem","resp"],"sources":["/Users/samuelrockon/Desktop/Dev/taskily/src/components/CreateNewBoardView.vue"],"sourcesContent":["<template>\n    <div class=\"createBoard\">\n        <div class=\"createNewList\">\n            <textarea name=\"text\" v-model=\"boardName\" placeholder=\"Project managment starts with a new board\" class=\"createNewListField\" id=\"createNewListField_id\"></textarea>\n                <button v-if=\"isCreatingBoard\" class=\"addListBtn buttonload\">\n                   <i class=\"fa fa-circle-o-notch fa-spin\"></i> Creating... \n                </button>\n            <button v-else :class=\"boardName.length > 0 ? `addListBtn` : `addListBtnDisabled`\" :disabled='boardName.length == 0' @click=\"createNewBoard()\">Create Board</button>\n         </div>\n    </div>\n</template>\n<script>\nimport { ref } from 'vue'\nimport { BASE_URL } from '@/config'\nimport axios from 'axios';\n\nexport default {\n    setup() {\n        var boardName = ref(\"\")\n        var isCreatingBoard = ref(false)\n        return { boardName, isCreatingBoard }\n    }, \n    methods: {\n        async createNewBoard() {\n            this.isCreatingBoard = true \n            // Create default list, then add the id\n            let listParam = { id: \"listPlaceholder\", listName: \"Add New List\", headerType: \"addList\", footerType: \"add\", isAddCard: false, isCreateList: false, cards: []}\n            var fullListURL = BASE_URL + \"board/newList\"\n            console.log(\"full url: \", fullURL, \"params: \", listParam)\n            await axios.post(fullURL, params).then((response) => {\n              console.log(\"list response: \", response)\n              if (response.data != null) {\n                let data = response.data\n                if (data.statusCode == 200) {\n                    let listItem = data.resp\n                    console.log(\"list: \", listItem)\n                }\n               }\n            })\n\n            // var params = {\n            //     name : this.boardName, \n            //     owner: \"1721545684258\",\n            //     list: [],\n            //     id: Date.now()\n            // }\n            // var fullURL = BASE_URL + \"board/new\"\n            // console.log(\"full url: \", fullURL, \"params: \", params)\n            // await axios.post(fullURL, params).then((response) => {\n            //   this.isCreatingBoard = false\n            //   console.log(\"board response: \", response)\n            //   if (response.data != null) {\n            //     let data = response.data\n            //     if (data.statusCode == 200) {\n            //         let board = data.resp\n            //         console.log(\"board: \", board)\n            //         // Go to boards\n            //         this.$emit('closeOverlay', true)\n            //         this.$router.push({path: \"/boards\"})\n            //         // dismiss the overlay\n            //     } else {\n            //         alert(data.msg)\n            //     }\n            //    }\n            // })\n        }\n    }\n}\n</script>\n<style scoped>\n.addListBtn, .addListBtnDisabled {\n    display: block;\n    width: 140px;\n    height: 40px;\n    background-color: #FC6363;\n    color: white;\n    border-radius: var(--border-radius-1);\n    margin-left: 8px;\n    font-size: 14px;\n    font-weight: 600;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    margin-right: 10px;\n}\n\n.addListBtnDisabled {\n    background-color: var(--color-light);\n    color: var(--color-dark-variant);\n}\n\n.createNewList {\n    display: flex;\n    justify-content: center;\n    width: 98%;\n    padding-top: 20px;\n    z-index: 9999;\n    overflow: hidden;\n    background-color: white;\n    align-items: center;\n    margin-right: auto;\n    margin-left: auto;\n    border-radius: var(--border-radius-1)\n}\n\n.createNewListField {\n  padding: 8px;\n  width: 80%;\n  margin-left: 8px;\n  margin-right: 8px;\n  border: 1px solid var(--color-light);\n  border-radius: var(--border-radius-1);\n  text-align: left;\n  resize: none;\n  overflow: hidden;\n  height: 44px;\n  font-weight: 500;\n  font-size: 14px;\n}\n.createBoard {\n    display: block;\n    height: 100px;\n    width: 800px;\n    background-color: white;\n    border-radius: var(--border-radius-2);\n    margin-top: -280px;\n}\n    \n</style>"],"mappings":"AAYA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,QAAO,QAAS,UAAS;AAClC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,IAAIC,SAAQ,GAAIJ,GAAG,CAAC,EAAE;IACtB,IAAIK,eAAc,GAAIL,GAAG,CAAC,KAAK;IAC/B,OAAO;MAAEI,SAAS;MAAEC;IAAgB;EACxC,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,cAAcA,CAAA,EAAG;MACnB,IAAI,CAACF,eAAc,GAAI,IAAG;MAC1B;MACA,IAAIG,SAAQ,GAAI;QAAEC,EAAE,EAAE,iBAAiB;QAAEC,QAAQ,EAAE,cAAc;QAAEC,UAAU,EAAE,SAAS;QAAEC,UAAU,EAAE,KAAK;QAAEC,SAAS,EAAE,KAAK;QAAEC,YAAY,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAE;MAC7J,IAAIC,WAAU,GAAIf,QAAO,GAAI,eAAc;MAC3CgB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,OAAO,EAAE,UAAU,EAAEX,SAAS;MACxD,MAAMN,KAAK,CAACkB,IAAI,CAACD,OAAO,EAAEE,MAAM,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QACnDN,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEK,QAAQ;QACvC,IAAIA,QAAQ,CAACC,IAAG,IAAK,IAAI,EAAE;UACzB,IAAIA,IAAG,GAAID,QAAQ,CAACC,IAAG;UACvB,IAAIA,IAAI,CAACC,UAAS,IAAK,GAAG,EAAE;YACxB,IAAIC,QAAO,GAAIF,IAAI,CAACG,IAAG;YACvBV,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEQ,QAAQ;UAClC;QACD;MACH,CAAC;;MAED;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}