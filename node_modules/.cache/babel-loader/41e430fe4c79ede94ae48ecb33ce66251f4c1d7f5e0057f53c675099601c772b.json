{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-59cf3461\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"board\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BoardContentView = _resolveComponent(\"BoardContentView\");\n  const _component_ChatView = _resolveComponent(\"ChatView\");\n  const _component_CalendarView = _resolveComponent(\"CalendarView\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <SideBarView class=\\\"sideBar\\\" @handleMenuTapped=\\\"handleChangeContainer\\\" :cachedMenuKey=\\\"this.containerType\\\" :isExpanded=\\\"this.isExpanded\\\" :style=\\\"{width: isExpanded ? '250px' : '90px'}\\\"/> \"), $setup.containerType == 'board' ? (_openBlock(), _createBlock(_component_BoardContentView, {\n    key: 0,\n    class: \"fullBoardContainer\",\n    isExpanded: this.isExpanded\n  }, null, 8 /* PROPS */, [\"isExpanded\"])) : $setup.containerType == 'chat' ? (_openBlock(), _createBlock(_component_ChatView, {\n    key: 1,\n    class: \"productContainer\",\n    isExpanded: this.isExpanded\n  }, null, 8 /* PROPS */, [\"isExpanded\"])) : (_openBlock(), _createBlock(_component_CalendarView, {\n    key: 2,\n    class: \"addCategoryContainer\",\n    isExpanded: this.isExpanded\n  }, null, 8 /* PROPS */, [\"isExpanded\"]))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","$setup","containerType","_createBlock","_component_BoardContentView","key","isExpanded","_component_ChatView","_component_CalendarView"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/views/BoardView.vue"],"sourcesContent":["<template>\n    <div class=\"board\">\n       <!-- <SideBarView class=\"sideBar\" @handleMenuTapped=\"handleChangeContainer\" :cachedMenuKey=\"this.containerType\" :isExpanded=\"this.isExpanded\" :style=\"{width: isExpanded ? '250px' : '90px'}\"/> -->\n       <BoardContentView v-if=\"containerType == 'board'\" class=\"fullBoardContainer\" :isExpanded=\"this.isExpanded\"/>\n       <ChatView v-else-if=\"containerType == 'chat'\" class=\"productContainer\" :isExpanded=\"this.isExpanded\"/>\n       <CalendarView v-else=\"containerType == 'calendar'\" class=\"addCategoryContainer\" :isExpanded=\"this.isExpanded\"/>\n    </div>\n</template>\n<script>\nimport NavBar from '@/components/NavBarView.vue'\nimport SideBarView from '@/components/SideBarView.vue'\nimport BoardContentView from '@/components/BoardContentView.vue'\nimport ChatView from '@/views/ChatView.vue'\nimport CalendarView from '@/views/CalendarView.vue'\n\nimport { PICKMORE_MERCHANT_KEY, SIDE_BAR_MENU_ITEM_KEY } from '@/config'\nimport { ref } from 'vue'\n\nexport default {\n    props: [\"isExpanded\"],\n    components: {\n        SideBarView, BoardContentView, ChatView, CalendarView, NavBar\n    }, \n    methods: {\n        handleChangeContainer(menuId) {\n         console.log(\"menuId: \", menuId)\n         this.containerType = menuId\n       }, \n        handleBoardTypeTapped(item) {\n            this.selectedTaskBoardType = item\n        }\n    },\n    setup() {\n        var isSideBarExpanded = ref(false)\n        var selectedTaskBoardType = ref(\"All Team\")\n        const containerType = ref('board')\n        var boards = ref([\"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\"])\n        return { isSideBarExpanded, boards, selectedTaskBoardType, containerType}\n    },\n    watch: { \n        isExpanded: function(newVal, oldVal) {\n            console.log('Prop changed isSideBarExpanwded: ', newVal)\n            this.isSideBarExpanded = newVal\n        }\n    }, \n    mounted() {\n        document.body.classList.remove('dark');\n        document.body.classList.add('light');\n    } \n}\n</script>\n<style scoped>\n.productCellImage {\n    height: 200px;\n    width: 232px;\n    margin-right: auto;\n    margin-left: auto;\n    background-color: var(--color-light);\n    object-fit: cover;\n}\n\n.productGridCellWithBorder {\n    border: 2px solid var(--color-light);\n}\n.productGridCell, .productGridCellWithBorder {\n    display: block;\n    height: 280px;\n    overflow: hidden;\n    width: 232px;\n    background-color: white;\n    border-radius: var(--border-radius-2);\n}\n.boardViews {\n    width: 100%;\n    height: 100%;\n    background-color: var(--color-background);\n   \n}\n\n.boardContentView {\n    width: 99%;\n    height: 96%;\n    display: flex;\n    /* flex-direction: column; */\n    justify-content: left;\n    align-items: start;\n    background-color: white;\n    margin: auto;\n    margin-top: 10px;\n    border-radius: var(--border-radius-1);\n    padding: 30px;\n}\n\n.fullBoardContainer {\n    background-color: var(--color-background);\n    background: url(\"@/assets/card_bg_1.jpg\");\n    background-position: center center;\n    /* background-repeat: no-repeat; */\n    object-fit: cover;\n}\n\n\n.fullBoardContainer, .overviewContainer, .productContainer, .settingsContainer, .addCategoryContainer {\n  height: 100%;\n  /* width: calc(100vw - 250px); */\n  width: 100vw;\n}\n\n.board {\n  display: flex;\n  flex-direction: row;\n  background-color: var(--color-background);\n  width: 100vw;\n  height: 100vh;\n  overscroll-behavior: none;\n}\n    \n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAO;;;;;uBAAlBC,mBAAA,CAKM,OALNC,UAKM,GAJHC,mBAAA,0MAAmM,EAC3KC,MAAA,CAAAC,aAAa,e,cAArCC,YAAA,CAA4GC,2BAAA;IAHnHC,GAAA;IAGyDR,KAAK,EAAC,oBAAoB;IAAES,UAAU,OAAOA;6CAC1EL,MAAA,CAAAC,aAAa,c,cAAlCC,YAAA,CAAsGI,mBAAA;IAJ7GF,GAAA;IAIqDR,KAAK,EAAC,kBAAkB;IAAES,UAAU,OAAOA;4DACzFH,YAAA,CAA+GK,uBAAA;IALtHH,GAAA;IAK0DR,KAAK,EAAC,sBAAsB;IAAES,UAAU,OAAOA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}