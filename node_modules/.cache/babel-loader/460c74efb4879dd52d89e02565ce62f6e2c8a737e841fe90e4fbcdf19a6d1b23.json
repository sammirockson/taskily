{"ast":null,"code":"import _defineProperty from \"/Users/samuelrockon/Desktop/Dev/taskily/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { EventEmitter } from 'eventemitter3';\nimport instances from './instances.js';\nimport logger from './logger.js';\nconst debug = logger('quill:events');\nconst EVENTS = ['selectionchange', 'mousedown', 'mouseup', 'click'];\nEVENTS.forEach(eventName => {\n  document.addEventListener(eventName, function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    Array.from(document.querySelectorAll('.ql-container')).forEach(node => {\n      const quill = instances.get(node);\n      if (quill && quill.emitter) {\n        quill.emitter.handleDOM(...args);\n      }\n    });\n  });\n});\nclass Emitter extends EventEmitter {\n  constructor() {\n    super();\n    this.domListeners = {};\n    this.on('error', debug.error);\n  }\n  emit() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    debug.log.call(debug, ...args);\n    // @ts-expect-error\n    return super.emit(...args);\n  }\n  handleDOM(event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    (this.domListeners[event.type] || []).forEach(_ref => {\n      let {\n        node,\n        handler\n      } = _ref;\n      if (event.target === node || node.contains(event.target)) {\n        handler(event, ...args);\n      }\n    });\n  }\n  listenDOM(eventName, node, handler) {\n    if (!this.domListeners[eventName]) {\n      this.domListeners[eventName] = [];\n    }\n    this.domListeners[eventName].push({\n      node,\n      handler\n    });\n  }\n}\n_defineProperty(Emitter, \"events\", {\n  EDITOR_CHANGE: 'editor-change',\n  SCROLL_BEFORE_UPDATE: 'scroll-before-update',\n  SCROLL_BLOT_MOUNT: 'scroll-blot-mount',\n  SCROLL_BLOT_UNMOUNT: 'scroll-blot-unmount',\n  SCROLL_OPTIMIZE: 'scroll-optimize',\n  SCROLL_UPDATE: 'scroll-update',\n  SCROLL_EMBED_UPDATE: 'scroll-embed-update',\n  SELECTION_CHANGE: 'selection-change',\n  TEXT_CHANGE: 'text-change',\n  COMPOSITION_BEFORE_START: 'composition-before-start',\n  COMPOSITION_START: 'composition-start',\n  COMPOSITION_BEFORE_END: 'composition-before-end',\n  COMPOSITION_END: 'composition-end'\n});\n_defineProperty(Emitter, \"sources\", {\n  API: 'api',\n  SILENT: 'silent',\n  USER: 'user'\n});\nexport default Emitter;","map":{"version":3,"names":["EventEmitter","instances","logger","debug","EVENTS","forEach","eventName","document","addEventListener","_len","arguments","length","args","Array","_key","from","querySelectorAll","node","quill","get","emitter","handleDOM","Emitter","constructor","domListeners","on","error","emit","_len2","_key2","log","call","event","_len3","_key3","type","_ref","handler","target","contains","listenDOM","push","_defineProperty","EDITOR_CHANGE","SCROLL_BEFORE_UPDATE","SCROLL_BLOT_MOUNT","SCROLL_BLOT_UNMOUNT","SCROLL_OPTIMIZE","SCROLL_UPDATE","SCROLL_EMBED_UPDATE","SELECTION_CHANGE","TEXT_CHANGE","COMPOSITION_BEFORE_START","COMPOSITION_START","COMPOSITION_BEFORE_END","COMPOSITION_END","API","SILENT","USER"],"sources":["../../src/core/emitter.ts"],"sourcesContent":["import { EventEmitter } from 'eventemitter3';\nimport instances from './instances.js';\nimport logger from './logger.js';\n\nconst debug = logger('quill:events');\nconst EVENTS = ['selectionchange', 'mousedown', 'mouseup', 'click'];\n\nEVENTS.forEach((eventName) => {\n  document.addEventListener(eventName, (...args) => {\n    Array.from(document.querySelectorAll('.ql-container')).forEach((node) => {\n      const quill = instances.get(node);\n      if (quill && quill.emitter) {\n        quill.emitter.handleDOM(...args);\n      }\n    });\n  });\n});\n\nclass Emitter extends EventEmitter<string> {\n  static events = {\n    EDITOR_CHANGE: 'editor-change',\n    SCROLL_BEFORE_UPDATE: 'scroll-before-update',\n    SCROLL_BLOT_MOUNT: 'scroll-blot-mount',\n    SCROLL_BLOT_UNMOUNT: 'scroll-blot-unmount',\n    SCROLL_OPTIMIZE: 'scroll-optimize',\n    SCROLL_UPDATE: 'scroll-update',\n    SCROLL_EMBED_UPDATE: 'scroll-embed-update',\n    SELECTION_CHANGE: 'selection-change',\n    TEXT_CHANGE: 'text-change',\n    COMPOSITION_BEFORE_START: 'composition-before-start',\n    COMPOSITION_START: 'composition-start',\n    COMPOSITION_BEFORE_END: 'composition-before-end',\n    COMPOSITION_END: 'composition-end',\n  } as const;\n\n  static sources = {\n    API: 'api',\n    SILENT: 'silent',\n    USER: 'user',\n  } as const;\n\n  protected domListeners: Record<string, { node: Node; handler: Function }[]>;\n\n  constructor() {\n    super();\n    this.domListeners = {};\n    this.on('error', debug.error);\n  }\n\n  emit(...args: unknown[]): boolean {\n    debug.log.call(debug, ...args);\n    // @ts-expect-error\n    return super.emit(...args);\n  }\n\n  handleDOM(event: Event, ...args: unknown[]) {\n    (this.domListeners[event.type] || []).forEach(({ node, handler }) => {\n      if (event.target === node || node.contains(event.target as Node)) {\n        handler(event, ...args);\n      }\n    });\n  }\n\n  listenDOM(eventName: string, node: Node, handler: EventListener) {\n    if (!this.domListeners[eventName]) {\n      this.domListeners[eventName] = [];\n    }\n    this.domListeners[eventName].push({ node, handler });\n  }\n}\n\nexport type EmitterSource =\n  (typeof Emitter.sources)[keyof typeof Emitter.sources];\n\nexport default Emitter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}