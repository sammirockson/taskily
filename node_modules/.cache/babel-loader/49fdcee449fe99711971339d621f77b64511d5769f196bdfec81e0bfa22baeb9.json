{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport ButtonCard from '@/components/ButtonCard.vue';\nimport DescriptionViewFrom from '@/components/DescriptionViewForm.vue';\nimport TagContainerView from '@/components/TagContainerView.vue';\nimport TextEditorView from '@/components/TextEditorView.vue';\nimport AttachmentView from '@/components/AttachmentView.vue';\nimport axios from 'axios';\nimport { BASE_URL, USER_CACHE_KEY } from '@/config';\nimport CryptoJS from 'crypto-js';\nimport Editor from 'primevue/editor';\n\n// import \"quill/dist/quill.core.css\";\n\nexport default {\n  inject: [\"cryptojs\"],\n  components: {\n    ButtonCard,\n    DescriptionViewFrom,\n    TagContainerView,\n    TextEditorView,\n    Editor,\n    AttachmentView\n  },\n  props: {\n    card: Object,\n    list: Object,\n    tags: []\n  },\n  setup() {\n    var members = ref([1, 2, 3, 4, 5, 6, 7, 8]);\n    var isTracked = ref(true);\n    var cardo = ref(null);\n    var cardDesc = ref(\"Test description\");\n    var selectedCard = ref(null);\n    var selectedList = ref(null);\n    var currentUser = ref(null);\n    var isTagTapped = ref(false);\n    var boardTags = ref([]);\n    var cardTags = ref([]);\n    var isDateTapped = ref(false);\n    var isAttachmentTapped = ref(false);\n    var selectedDate = ref(null);\n    var value = ref(null);\n    return {\n      members,\n      isTracked,\n      cardo,\n      cardDesc,\n      selectedCard,\n      selectedList,\n      isAttachmentTapped,\n      currentUser,\n      isTagTapped,\n      boardTags,\n      cardTags,\n      isDateTapped,\n      selectedDate,\n      value\n    };\n  },\n  methods: {\n    handleAttachmentTapped() {\n      this.isAttachmentTapped = true;\n    },\n    formatDate(card) {\n      let date = new Date(card.dueDate).toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric'\n      });\n      return date;\n    },\n    async handleSaveDate() {\n      let dueDateMilliSec = this.selectedDate.getTime();\n      var params = {\n        card_id: this.selectedCard._id,\n        dueDate: dueDateMilliSec\n      };\n      var fullURL = BASE_URL + \"board/addDueDateToCard\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          if (data.statusCode == 200) {\n            this.selectedCard.dueDate = dueDateMilliSec;\n            this.selectedDate = null;\n            this.isDateTapped = false;\n            console.log(\"list and card info updated: \", data.resp);\n          }\n        }\n      });\n    },\n    handleDateTapped() {\n      this.isDateTapped = true;\n    },\n    refreshTags() {\n      this.fetchTags();\n    },\n    async handleTagChanged(tag) {\n      if (tag.isChecked) {\n        this.cardTags.push(tag);\n      } else {\n        this.cardTags = this.cardTags.filter(item => item.id != tag.id);\n      }\n      var tags = [];\n      for (var index in this.cardTags) {\n        let cardTag = this.cardTags[index];\n        tags.push(cardTag.id);\n      }\n      var params = {\n        card_id: this.selectedCard._id,\n        tags: tags\n      };\n      var fullURL = BASE_URL + \"board/addTagsToCard\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"tags updated: \", data);\n        }\n      });\n    },\n    isTagChecked(tag) {\n      let tagFiler = this.cardTags.filter(item => item.id == tag.id);\n      return tagFiler.length > 0;\n    },\n    async fetchTags() {\n      var params = {\n        boardId: this.selectedList.boardId\n      };\n      var fullURL = BASE_URL + \"board/getTags\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"fetch tag resps: \", data);\n          if (data.resp != null) {\n            var tags = [];\n            for (var index in data.resp) {\n              let item = data.resp[index];\n              tags.push({\n                isChecked: this.isTagChecked(item),\n                name: item.name,\n                colorHex: item.colorHex,\n                id: item.id,\n                _id: item._id\n              });\n            }\n            this.boardTags = tags;\n          }\n        }\n      });\n    },\n    async handleSaveTag(tag) {\n      console.log(\"prepare to save tag\");\n      var params = {\n        boardId: this.selectedList.boardId,\n        cardId: this.selectedCard.id,\n        name: tag.name,\n        colorHex: tag.color,\n        id: Date.now()\n      };\n      var fullURL = BASE_URL + \"board/createTag\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"tag resp data: \", data);\n        }\n      });\n    },\n    handleTagTapped() {\n      console.log(\"Tags tapped\");\n      this.isTagTapped = true;\n    },\n    expandAll() {\n      console.log(\"finally updated...\");\n    },\n    async handleContentInfoTapped() {\n      console.log(\"selectedCard: \", this.selectedCard);\n      var params = {\n        card_id: this.selectedCard._id,\n        cardName: this.selectedCard.cardName,\n        cardDesc: this.cardDesc\n      };\n      var fullURL = BASE_URL + \"board/updateCard\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"card detail resp data: \", data);\n        }\n      });\n    },\n    autoGrow() {\n      let element = document.getElementById(\"cardNameId\");\n      if (element != null) {\n        element.style.height = \"15px\";\n        element.style.height = element.scrollHeight + \"px\";\n      }\n    },\n    handleOverlayClosed() {\n      console.log(\"close overlay tapped\");\n      this.$emit('overlayDismissed');\n    },\n    getUserInfo() {\n      let userCacheString = localStorage.getItem(USER_CACHE_KEY);\n      let userCache = JSON.parse(userCacheString);\n      let decryptionToken = userCache.token;\n      let encryptedUserData = userCache.user;\n      let decryptedData = CryptoJS.AES.decrypt(encryptedUserData, decryptionToken).toString(CryptoJS.enc.Utf8);\n      let cacheInfoObject = JSON.parse(decryptedData);\n      this.currentUser = cacheInfoObject.user;\n      console.log(\"currentUser: \", this.currentUser);\n    }\n  },\n  watch: {\n    card(newVal, oldVal) {\n      this.selectedCard = newVal;\n      this.getUserInfo();\n    },\n    list(newVal, oldVal) {\n      this.selectedList = newVal;\n    },\n    tags(newVal, oldVal) {\n      console.log('tags popover prop changed: ', newVal, ' | was: ', oldVal);\n      var tags = [];\n      for (var index in newVal) {\n        let item = newVal[index];\n        tags.push({\n          isChecked: false,\n          name: item.name,\n          colorHex: item.colorHex,\n          id: item.id,\n          _id: item._id\n        });\n      }\n      this.cardTags = tags;\n      this.fetchTags();\n    },\n    selectedDate(newVal, oldVal) {\n      console.log('date changed: ', newVal, ' | was: ', oldVal);\n    }\n  },\n  destroyed() {\n    this.boardTags = [];\n  },\n  mounted() {\n    console.log(\"mounting cardDetail...\");\n    this.autoGrow();\n  },\n  updated() {\n    this.autoGrow();\n  }\n};","map":{"version":3,"names":["ref","ButtonCard","DescriptionViewFrom","TagContainerView","TextEditorView","AttachmentView","axios","BASE_URL","USER_CACHE_KEY","CryptoJS","Editor","inject","components","props","card","Object","list","tags","setup","members","isTracked","cardo","cardDesc","selectedCard","selectedList","currentUser","isTagTapped","boardTags","cardTags","isDateTapped","isAttachmentTapped","selectedDate","value","methods","handleAttachmentTapped","formatDate","date","Date","dueDate","toLocaleDateString","month","day","hour","minute","handleSaveDate","dueDateMilliSec","getTime","params","card_id","_id","fullURL","post","then","response","data","statusCode","console","log","resp","handleDateTapped","refreshTags","fetchTags","handleTagChanged","tag","isChecked","push","filter","item","id","index","cardTag","isTagChecked","tagFiler","length","boardId","name","colorHex","handleSaveTag","cardId","color","now","handleTagTapped","expandAll","handleContentInfoTapped","cardName","autoGrow","element","document","getElementById","style","height","scrollHeight","handleOverlayClosed","$emit","getUserInfo","userCacheString","localStorage","getItem","userCache","JSON","parse","decryptionToken","token","encryptedUserData","user","decryptedData","AES","decrypt","toString","enc","Utf8","cacheInfoObject","watch","newVal","oldVal","destroyed","mounted","updated"],"sources":["/Users/samuelrockon/Desktop/Dev/taskily/src/components/PopOverCardView.vue"],"sourcesContent":["<template>\n    <div class=\"card\" @click.self=\"handleOverlayClosed\">\n        <div class=\"cardInfoContainer\">\n             <div class=\"contentContainer\">\n                <textarea type=\"text\" v-on:blur=\"handleContentInfoTapped()\"  @input=\"autoGrow()\" class=\"cardNameField\" id=\"cardNameId\" v-model=\"card.cardName\"></textarea>\n                <div class=\"profileTagInfoContainer\">\n                <img src=\"@/assets/cardPhoto.png\" class=\"ownerProfile\">\n                <div class=\"profileInfoContainer\">\n                    <label class=\"onwerNameLabel\">Samuel</label>\n                    <label class=\"ownerRoleLabel\">Admin</label>\n                </div>\n                <img src=\"@/assets/cardPhoto.png\" class=\"assignedProfile\">\n                <div class=\"assignInfoContainer\">\n                    <label class=\"onwerNameLabel\">Ricky Bob</label>\n                    <label class=\"ownerRoleLabel\">Assignee</label>\n                </div>\n                </div>\n                <div class=\"tagItemsView\"> \n                    <v-chip-group selected-class=\"text-primary\" column>\n                   <v-chip v-for=\"tag in cardTags\" :key=\"tag\" style=\"border-radius: 8px; disable\">\n                     <label class=\"tagLabel\" :style=\"{'background-color': tag.colorHex}\">{{ tag.name }}</label>\n                   </v-chip>\n                  </v-chip-group>\n                </div>\n                <div class=\"profileTagInfoContainer\">\n                    <label class=\"listTagContainer\">{{ list.listName }}</label>\n                    <ButtonCard v-if=\"card.dueDate != null\" imageIcon=\"calendar.png\" :title=\"formatDate(card)\" class=\"dueDateField\"/>\n                    <ButtonCard imageIcon=\"eyeViews.png\" title=\"Tracking\" class=\"dueDateField\" isTracked=\"true\"/>\n                </div>\n                <!-- <DescriptionViewFrom class=\"descriptionContainer\"/> -->\n                <TextEditorView class=\"descriptionContainer\"/>\n                <!-- <Editor v-model=\"value\" editorStyle=\"height: 320px\" /> -->\n\n             </div>\n\n             <div class=\"controlsContainer\">\n             <label class=\"memberTitleLabel\">Members</label>\n             <div class=\"membersContainer\">\n                <div class=\"memberCell\" v-for=\"(index, member) in members\" :key=\"member\">\n                   <img :src=\"require(index == 8 ? `@/assets/add.svg` : `@/assets/cardPhoto.png`)\" class=\"memberPhoto\">\n                   <label class=\"memberNameLabel\" v-if=\"index != 8\">Name</label>\n                   <label class=\"memberNameLabel\" v-else>Join</label>\n                </div>\n             </div>\n             <label class=\"seeMoreMembersLabel\">See more</label>\n\n\n             <label class=\"memberLabel\">Action</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Assign\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Move\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Track\"/>\n\n             <label class=\"memberLabel\">Manage</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Tags\" @click=\"handleTagTapped\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Due Date\" @click=\"handleDateTapped\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Poll\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Checklist\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Attachments\" @click=\"handleAttachmentTapped\"/>\n             <label class=\"memberLabel\">Connect</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Share\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Copy URL\"/>\n             <label class=\"memberLabel\">Archive</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Delete\"/>\n             </div>\n        </div>\n        <v-overlay v-model=\"isTagTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" activator=\"tagBtn\" contained>\n            <TagContainerView @handleSaveTag=\"handleSaveTag\" @refreshTags=\"refreshTags\" @handleTagChanged=\"handleTagChanged\" :boardTags=\"this.boardTags\" class=\"tagContainerView\"/>\n        </v-overlay>\n        <v-overlay v-model=\"isDateTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" activator=\"tagBtn\" contained>\n          <div class=\"dueDateMainView\">\n           <div class=\"dateContainerView\">\n               <v-container>\n                 <v-row justify=\"space-around\">\n                   <v-date-picker show-adjacent-months v-model=\"selectedDate\"></v-date-picker>\n                 </v-row>\n                </v-container>\n            </div>\n            <button :class=\"selectedDate == null ? `dateBtnDisabled` : `saveDateBtn`\" :disabled=\"selectedDate == null\" @click=\"handleSaveDate\">Save Date</button>\n        </div>\n        </v-overlay>\n        <v-overlay v-model=\"isAttachmentTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" contained>\n            <AttachmentView class=\"attachmentContainerView\"/>\n        </v-overlay>\n    </div>\n</template>\n<script>\nimport { ref } from 'vue'\nimport ButtonCard from '@/components/ButtonCard.vue'\nimport DescriptionViewFrom from '@/components/DescriptionViewForm.vue'\nimport TagContainerView from '@/components/TagContainerView.vue';\nimport TextEditorView from '@/components/TextEditorView.vue'\nimport AttachmentView from '@/components/AttachmentView.vue';\n\nimport axios from 'axios';\nimport { BASE_URL, USER_CACHE_KEY } from '@/config'\nimport CryptoJS from 'crypto-js'\nimport Editor from 'primevue/editor'\n\n// import \"quill/dist/quill.core.css\";\n\n\nexport default {\n    inject: [\"cryptojs\"],\n    components: {\n        ButtonCard, DescriptionViewFrom, TagContainerView, TextEditorView, Editor, AttachmentView\n    },\n    props: { card: Object, list: Object, tags: [] },\n    setup() {\n        var members = ref([1, 2, 3, 4, 5, 6, 7, 8])\n        var isTracked = ref(true)\n        var cardo = ref(null)\n        var cardDesc = ref(\"Test description\")\n        var selectedCard = ref(null)\n        var selectedList = ref(null)\n        var currentUser = ref(null)\n        var isTagTapped = ref(false)\n        var boardTags = ref([])\n        var cardTags = ref([])\n        var isDateTapped = ref(false)\n        var isAttachmentTapped = ref(false)\n        var selectedDate = ref(null)\n        var value = ref(null)\n        return { \n             members, isTracked, cardo, cardDesc, selectedCard, selectedList, isAttachmentTapped,\n             currentUser, isTagTapped, boardTags, cardTags, isDateTapped, selectedDate, value\n            }\n    }, \n    methods: {\n        handleAttachmentTapped() {\n            this.isAttachmentTapped = true \n        },\n        formatDate(card) {\n            let date =  new Date(card.dueDate).toLocaleDateString('en-US', {\n                month: 'short', day: 'numeric' , hour: 'numeric', minute: 'numeric'\n            })\n            return date\n        },\n        async handleSaveDate() {\n            let dueDateMilliSec = this.selectedDate.getTime()\n            var params = {\n                card_id: this.selectedCard._id, \n                dueDate: dueDateMilliSec\n        }\n        var fullURL = BASE_URL + \"board/addDueDateToCard\"\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            if (data.statusCode == 200) {\n                this.selectedCard.dueDate = dueDateMilliSec\n                this.selectedDate = null\n                this.isDateTapped = false \n                console.log(\"list and card info updated: \", data.resp)\n              }\n             }\n          })\n        },\n        handleDateTapped() {\n            this.isDateTapped = true \n        },\n        refreshTags() {\n            this.fetchTags()\n        },\n       async handleTagChanged(tag) {\n            if (tag.isChecked) {\n                this.cardTags.push(tag)\n            } else {\n                this.cardTags = this.cardTags.filter(item => item.id != tag.id);\n            }\n          var tags = []\n          for (var index in this.cardTags) {\n             let cardTag = this.cardTags[index]\n             tags.push(cardTag.id)\n           }\n          var params = {\n            card_id: this.selectedCard._id, \n            tags: tags\n          }\n          var fullURL = BASE_URL + \"board/addTagsToCard\"\n          await axios.post(fullURL, params).then((response) => {\n            if (response.data != null) {\n             let data = response.data\n             console.log(\"tags updated: \", data)\n            }\n          })\n        },\n        isTagChecked(tag) {\n            let tagFiler = this.cardTags.filter(item => item.id == tag.id)\n            return tagFiler.length > 0\n        },\n        async fetchTags() {\n          var params = {\n            boardId: this.selectedList.boardId\n          }\n          var fullURL = BASE_URL + \"board/getTags\"\n          await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n             let data = response.data\n             console.log(\"fetch tag resps: \", data)\n             if (data.resp != null) {\n                var tags = []\n                for (var index in data.resp) {\n                    let item = data.resp[index]\n                    tags.push({isChecked: this.isTagChecked(item), name: item.name, colorHex: item.colorHex, id: item.id, _id: item._id})\n                }\n                this.boardTags = tags\n             }\n            }\n          })\n        },\n       async handleSaveTag(tag) {\n        console.log(\"prepare to save tag\")\n        var params = {\n            boardId: this.selectedList.boardId, \n            cardId: this.selectedCard.id,\n            name: tag.name, \n            colorHex: tag.color, \n            id: Date.now()\n         }\n         var fullURL = BASE_URL + \"board/createTag\"\n         await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n             let data = response.data\n             console.log(\"tag resp data: \", data)\n            }\n          })\n        },\n        handleTagTapped() {\n            console.log(\"Tags tapped\")\n            this.isTagTapped = true \n        },\n        expandAll() {\n            console.log(\"finally updated...\")\n        },\n        async handleContentInfoTapped() {\n          console.log(\"selectedCard: \", this.selectedCard)\n          var params = {\n            card_id: this.selectedCard._id, \n            cardName: this.selectedCard.cardName, \n            cardDesc: this.cardDesc\n         }\n         var fullURL = BASE_URL + \"board/updateCard\"\n         await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n             let data = response.data\n             console.log(\"card detail resp data: \", data)\n            }\n          })\n        },\n        autoGrow() {\n            let element = document.getElementById(\"cardNameId\")\n            if (element != null) {\n                element.style.height = \"15px\";\n                element.style.height = (element.scrollHeight) + \"px\";\n            }\n        },\n        handleOverlayClosed() {\n           console.log(\"close overlay tapped\")\n           this.$emit('overlayDismissed')\n        }, \n        getUserInfo() {\n            let userCacheString = localStorage.getItem(USER_CACHE_KEY)\n            let userCache = JSON.parse(userCacheString)\n            let decryptionToken = userCache.token\n            let encryptedUserData = userCache.user\n            let decryptedData = CryptoJS.AES.decrypt(encryptedUserData, decryptionToken).toString(CryptoJS.enc.Utf8)\n            let cacheInfoObject = JSON.parse(decryptedData)\n            this.currentUser = cacheInfoObject.user\n            console.log(\"currentUser: \", this.currentUser)\n        }\n    }, \n    watch: { \n        card(newVal, oldVal) { \n           this.selectedCard = newVal\n           this.getUserInfo()\n        }, \n        list(newVal, oldVal) { \n           this.selectedList = newVal\n        }, \n        tags(newVal, oldVal) { \n           console.log('tags popover prop changed: ', newVal, ' | was: ', oldVal)\n           var tags = []\n            for (var index in newVal) {\n                let item = newVal[index]\n                tags.push({isChecked: false, name: item.name, colorHex: item.colorHex, id: item.id, _id: item._id})\n            }\n           this.cardTags = tags\n           this.fetchTags()\n        }, \n        selectedDate(newVal, oldVal) {\n            console.log('date changed: ', newVal, ' | was: ', oldVal)\n        }\n    },\n    destroyed() {\n        this.boardTags = []\n    },\n    mounted() {\n        console.log(\"mounting cardDetail...\")\n        this.autoGrow()\n    }, \n    updated() {\n        this.autoGrow()\n    }\n}\n</script>\n<style scoped>\n.attachmentContainerView {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: white;\n    width: 300px;\n    height: 550px;\n    border-radius: var(--border-radius-2);\n}\n.saveDateBtn, .dateBtnDisabled { \n  margin-top: 10px;\n  margin-bottom: 10px;\n  width: 260px;\n  height: 44px;\n  margin-right: auto;\n  margin-left: auto;\n  font-weight: 600;\n  font-size: 16px;\n  color: white;\n  background-color: var(--color-primary);\n  border: 0px solid transparent;\n  border-radius: var(--border-radius-1);\n}\n.dateBtnDisabled {\n    background-color: var(--color-light);\n    color: var(--color-dark-variant);\n}\n\n.dueDateMainView {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: white;\n    height: 550px;\n    border-radius: var(--border-radius-2);\n}\n\n\n\n.tagCell {\n    background-color: #8B81F7;\n    height: 100%;\n    width: 100%;\n}\n.tagItemsView {\n    width: 480px;\n}\n.tagLabel {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    justify-items: center;\n    padding: 0;\n    height: 40px;\n    margin-right: -12px;\n    margin-left: -12px;\n    padding-right: 12px;\n    padding-left: 12px;\n    border-radius: var(--border-radius-1);\n    color: white;\n    font-weight: 600;\n    background-color: #8B81F7;\n}\n.tagContainerView {\n    z-index: 9999999;\n    width: 300px;\n    height: 600px;\n    margin-right: auto;\n    margin-left: auto;\n    /* margin-right: calc((100vw / 4)); */\n    background-color: white;\n    border-radius: var(--border-radius-1);\n}\n.descriptionContainer {\n    border: 1px solid var(--color-light);\n    border-radius: var(--border-radius-1);\n    margin-right: 500px;\n}\n.listTagContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 38px;\n    width: 140px;\n    padding-right: 10px;\n    padding-left: 10px;\n    color: var(--color-dark);\n    font-weight: 600;\n    background-color: var(--color-background);\n    border-radius: var(--border-radius-1);\n    text-transform: uppercase;\n    overflow: hidden;\n    white-space:nowrap;\n    text-overflow: clip;\n}\n.dueDateField {\n    width: 165px;\n    margin-left: 10px;\n}\n.ownerRoleLabel {\n    display: flex;\n    font-weight: 700;\n    font-size: 10px;\n    overflow: hidden;\n    text-align: center;\n    color: var(--color-dark);\n}\n.onwerNameLabel {\n    display: flex;\n    font-weight: 700;\n    font-size: 13px;\n    overflow: hidden;\n    text-align: center;\n}\n.ownerProfile, .assignedProfile {\n    width: 32px;\n    height: 32px;\n    object-fit: fill;\n    overflow: hidden;\n    border-radius: var(--border-radius-1);\n}\n\n.assignedProfile {\n    margin-left: 20px;\n}\n.profileInfoContainer, .assignInfoContainer {\n    display: flex;\n    flex-direction: column;\n    height: 40px;\n    margin-left: 5px;\n}\n\n.profileTagInfoContainer {\n    display: flex;\n    width: 100%;\n    height: 50px;\n    margin-top: 5px;\n}\n.cardNameField {\n    display: flex;\n    margin-top: 20px;\n    font-size: 20px;\n    font-weight: 700;\n    resize: none;\n    color: var(--color-dark);\n    margin-bottom: 8px;\n}\n\n.memberCell {\n    display: flex;\n    flex-direction: column;\n}\n.memberNameLabel {\n    display: flex;\n    font-weight: 500;\n    font-size: 10px;\n    overflow: hidden;\n    text-align: center;\n    width: 100%;\n    margin-left: 1px;\n}\n.memberPhoto {\n    width: 30px;\n    height: 30px;\n    border-radius: var(--border-radius-1);\n    object-fit: fill;\n    overflow: hidden;\n}\n.memberTitleLabel {\n    display: flex;\n    margin: 10px;\n    margin-top: 24px;\n    font-weight: 600;\n    font-size: 14px;\n}\n\n.seeMoreMembersLabel {\n    margin-right: auto;\n    margin-left: auto;\n    text-align: center;\n    font-weight: 400;\n    font-size: 12px;\n    margin-top: 8px;\n}\n\n.memberLabel {\n    display: flex;\n    margin: 10px;\n    margin-top: 20px;\n    font-weight: 600;\n    font-size: 14px;\n}\n.contentContainer {\n    display: flex;\n    flex-direction: column;\n    width: 550px;\n    min-height: 94vh;\n    border-top-left-radius: var(--border-radius-2);\n    border-bottom-left-radius: var(--border-radius-2);\n    padding-left: 20px;\n    padding-right: 15px;\n}\n.controlsContainer {\n    display: flex;\n    flex-direction: column;\n    width: 190px;\n    min-height: 94vh;\n    border-top-right-radius: var(--border-radius-2);\n    border-bottom-right-radius: var(--border-radius-2);\n    /* background-color: aliceblue; */\n}\n.membersContainer {\n    display: grid;\n    grid-template-columns: repeat(4, 40px);\n    grid-template-rows: repeat(4, 56px);\n    width: 160px;\n    height: 100px;\n    justify-content: center;\n    margin-right: auto;\n    margin-left: auto;\n    grid-column-gap: 1px;\n    grid-row-gap: 1px;\n    margin-top: 4px;\n}\n\n.cardInfoContainer {\n    display: flex;\n    width: 740px;\n    min-height: 94vh;\n    margin-right: auto;\n    margin-left: auto;\n    margin-top: 3vh;\n    margin-bottom: 3vh;\n    background-color: white;\n    z-index: 999999999999;\n    border-radius: var(--border-radius-2);\n    padding-bottom: 30px;\n    /* overflow-y: scroll; */\n}\n .card {\n    width: 100vw;\n    height: 100vh;\n    background-color: transparent;\n    overflow-y: scroll;\n }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}