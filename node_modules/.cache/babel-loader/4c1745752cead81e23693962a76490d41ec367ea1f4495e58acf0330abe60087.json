{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea15f292\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"createBoard\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"addListBtn buttonload\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa fa-circle-o-notch fa-spin\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"createNewList\",\n    style: _normalizeStyle({\n      display: _ctx.list.headerType == `creatingList` ? 'flex' : 'none'\n    })\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    name: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.newListName = $event),\n    onInput: _cache[1] || (_cache[1] = $event => _ctx.dynamicTextArea(_ctx.index)),\n    placeholder: \"Create New List\",\n    class: \"createNewListField\",\n    id: \"createNewListField_id\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.newListName]]), _ctx.isSavingCard ? (_openBlock(), _createElementBlock(\"button\", _hoisted_2, [_hoisted_3, _createTextVNode(\" Creating... \")])) : (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"addListBtn\",\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.createANewList())\n  }, \"Create Board\"))], 4 /* STYLE */)]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","style","_normalizeStyle","display","_ctx","list","headerType","name","_cache","$event","newListName","onInput","dynamicTextArea","index","placeholder","id","isSavingCard","_hoisted_2","_hoisted_3","_createTextVNode","onClick","createANewList"],"sources":["/Users/samuelrockon/Desktop/Dev/taskily/src/components/CreateNewBoardView.vue"],"sourcesContent":["<template>\n    <div class=\"createBoard\">\n        <div class=\"createNewList\" :style=\"{display: list.headerType ==  `creatingList` ? 'flex' : 'none'}\">\n            <textarea name=\"text\" v-model=\"newListName\" @input=\"dynamicTextArea(index)\" placeholder=\"Create New List\" class=\"createNewListField\" id=\"createNewListField_id\"></textarea>\n                <button v-if=\"isSavingCard\" class=\"addListBtn buttonload\">\n                   <i class=\"fa fa-circle-o-notch fa-spin\"></i> Creating... \n                </button>\n            <button v-else class=\"addListBtn\" @click=\"createANewList()\">Create Board</button>\n         </div>\n    </div>\n</template>\n<script>\nexport default {\n    \n}\n</script>\n<style scoped>\n.createBoard {\n    display: block;\n    height: 100px;\n    width: 800px;\n    background-color: white;\n    border-radius: var(--border-radius-2);\n    margin-top: -280px;\n}\n    \n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAa;;EAD5BC,GAAA;EAI4CD,KAAK,EAAC;;gEAC/BE,mBAAA,CAA4C;EAAzCF,KAAK,EAAC;AAA8B;;uBAJtDG,mBAAA,CAQM,OARNC,UAQM,GAPFF,mBAAA,CAMO;IANFF,KAAK,EAAC,eAAe;IAAEK,KAAK,EAFzCC,eAAA;MAAAC,OAAA,EAEqDC,IAAA,CAAAC,IAAI,CAACC,UAAU;IAAA;sBACxDR,mBAAA,CAA2K;IAAjKS,IAAI,EAAC,MAAM;IAHjC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAG2CL,IAAA,CAAAM,WAAW,GAAAD,MAAA;IAAGE,OAAK,EAAAH,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,IAAA,CAAAQ,eAAe,CAACR,IAAA,CAAAS,KAAK;IAAGC,WAAW,EAAC,iBAAiB;IAAClB,KAAK,EAAC,oBAAoB;IAACmB,EAAE,EAAC;iEAAzGX,IAAA,CAAAM,WAAW,E,GACxBN,IAAA,CAAAY,YAAY,I,cAA1BjB,mBAAA,CAES,UAFTkB,UAES,GADNC,UAA4C,EAL/DC,gBAAA,CAK+D,eAC/C,E,oBACJpB,mBAAA,CAAiF;IAP7FF,GAAA;IAO2BD,KAAK,EAAC,YAAY;IAAEwB,OAAK,EAAAZ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,IAAA,CAAAiB,cAAc;KAAI,cAAY,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}