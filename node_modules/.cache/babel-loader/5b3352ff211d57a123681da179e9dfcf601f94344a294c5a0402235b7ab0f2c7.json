{"ast":null,"code":"import PopupOverlay from './PopupOverlay.vue';\nimport PopupRouterView from './PopupRouterView.vue';\nimport { BASE_URL } from '@/config';\nimport ButtonCard from '@/components/ButtonCard.vue';\nimport DescriptionViewFrom from '@/components/DescriptionViewForm.vue';\nimport TagContainerView from '@/components/TagContainerView.vue';\nimport TextEditorView from '@/components/TextEditorView.vue';\nimport AttachmentView from '@/components/AttachmentView.vue';\nimport axios from 'axios';\nimport { ref } from 'vue';\nexport default {\n  name: 'ProductImagePopup',\n  components: {\n    PopupOverlay,\n    PopupRouterView\n  },\n  setup() {\n    var selectedCard = ref(null);\n    var selectedList = ref(null);\n    var cardTags = ref([]);\n    return {\n      selectedCard,\n      selectedList,\n      cardTags\n    };\n  },\n  created() {\n    // fetch from api\n    let routeParams = this.$route.params;\n    console.log(\"pop up params: \", routeParams);\n    // Call api to fetch board\n    let card_id = routeParams.cardId;\n    this.getCardBy(card_id);\n  },\n  methods: {\n    async getCardBy(card_id) {\n      var params = {\n        card_id: card_id\n      };\n      var fullURL = BASE_URL + \"board/getCardDetail\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"card detail data: \", data);\n          if (data.statusCode == 200) {\n            let resp = data.resp;\n            if (resp != null) {\n              this.selectedCard = resp.card;\n              this.selectedList = resp.list;\n              this.cardTags = resp.tags;\n              //  this.isCardTapped = true \n              //  this.$emit('cardDetailInfo', resp)\n            }\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["PopupOverlay","PopupRouterView","BASE_URL","ButtonCard","DescriptionViewFrom","TagContainerView","TextEditorView","AttachmentView","axios","ref","name","components","setup","selectedCard","selectedList","cardTags","created","routeParams","$route","params","console","log","card_id","cardId","getCardBy","methods","fullURL","post","then","response","data","statusCode","resp","card","list","tags"],"sources":["/Users/samuelrockon/Desktop/Dev/taskily/src/components/CardPopupView.vue"],"sourcesContent":["<template>\n    <PopupRouterView>\n      <PopupOverlay/>\n      <div class=\"card\" @click.self=\"handleOverlayClosed\">\n        <div class=\"cardInfoContainer\" :style=\"{width: card.attachments.length > 0 ? '930px' : '740px'}\">\n            <div class=\"controlsContainer\" v-if=\"card.attachments.length > 0\">\n                 <div class=\"fileAttachmentsContainer\">\n                 </div>\n            </div>\n             <div class=\"contentContainer\">\n                <textarea type=\"text\" v-on:blur=\"handleContentInfoTapped()\"  @input=\"autoGrow()\" class=\"cardNameField\" id=\"cardNameId\" v-model=\"card.cardName\"></textarea>\n                <div class=\"profileTagInfoContainer\">\n                <img src=\"@/assets/cardPhoto.png\" class=\"ownerProfile\">\n                <div class=\"profileInfoContainer\">\n                    <label class=\"onwerNameLabel\">Samuel</label>\n                    <label class=\"ownerRoleLabel\">Admin</label>\n                </div>\n                <img src=\"@/assets/cardPhoto.png\" class=\"assignedProfile\">\n                <div class=\"assignInfoContainer\">\n                    <label class=\"onwerNameLabel\">Ricky Bob</label>\n                    <label class=\"ownerRoleLabel\">Assignee</label>\n                </div>\n                </div>\n                <div class=\"tagItemsView\"> \n                    <v-chip-group selected-class=\"text-primary\" column>\n                   <v-chip v-for=\"tag in cardTags\" :key=\"tag\" style=\"border-radius: 8px; disable\">\n                     <label class=\"tagLabel\" :style=\"{'background-color': tag.colorHex}\">{{ tag.name }}</label>\n                   </v-chip>\n                  </v-chip-group>\n                </div>\n                <div class=\"profileTagInfoContainer\">\n                    <label class=\"listTagContainer\">{{ list.listName }}</label>\n                    <ButtonCard v-if=\"card.dueDate != null\" imageIcon=\"calendar.png\" :title=\"formatDate(card)\" class=\"dueDateField\"/>\n                    <ButtonCard imageIcon=\"eyeViews.png\" title=\"Tracking\" class=\"dueDateField\" isTracked=\"true\"/>\n                </div>\n                <!-- <DescriptionViewFrom class=\"descriptionContainer\"/> -->\n                <TextEditorView class=\"descriptionContainer\" :cardDescription=\"this.cardDescription\"/>\n                <div class=\"descriptionBtns\">\n                    <button :class=\"cardDescription.length > 0 ? `saveDescriptionBtn` : `saveDescriptionDisabledBtn`\" :disabled='cardDescription.length == 0' @click=\"handleSaveDescription\">Save</button>\n                    <button class=\"canelDescripBtn\">Cancel</button>\n                </div>\n             </div>\n\n             <div class=\"controlsContainer\">\n             <label class=\"memberTitleLabel\">Members</label>\n             <div class=\"membersContainer\">\n                <div class=\"memberCell\" v-for=\"(index, member) in members\" :key=\"member\">\n                   <img :src=\"require(index == 8 ? `@/assets/add.svg` : `@/assets/cardPhoto.png`)\" class=\"memberPhoto\">\n                   <label class=\"memberNameLabel\" v-if=\"index != 8\">Name</label>\n                   <label class=\"memberNameLabel\" v-else>Join</label>\n                </div>\n             </div>\n             <label class=\"seeMoreMembersLabel\">See more</label>\n\n\n             <label class=\"memberLabel\">Action</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Assign\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Move\"/>\n\n             <label class=\"memberLabel\">Manage</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Tags\" @click=\"handleTagTapped\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Due Date\" @click=\"handleDateTapped\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Poll\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Checklist\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Attachments\" @click=\"handleAttachmentTapped\"/>\n             <label class=\"memberLabel\">Connect</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Share\"/>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Copy URL\"/>\n             <label class=\"memberLabel\">Archive</label>\n             <ButtonCard imageIcon=\"invoice_icon.png\" title=\"Delete\"/>\n             </div>\n        </div>\n        <v-overlay v-model=\"isTagTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" activator=\"tagBtn\" contained>\n            <TagContainerView @handleSaveTag=\"handleSaveTag\" @refreshTags=\"refreshTags\" @handleTagChanged=\"handleTagChanged\" :boardTags=\"this.boardTags\" class=\"tagContainerView\"/>\n        </v-overlay>\n        <v-overlay v-model=\"isDateTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" activator=\"tagBtn\" contained>\n          <div class=\"dueDateMainView\">\n           <div class=\"dateContainerView\">\n               <v-container>\n                 <v-row justify=\"space-around\">\n                   <v-date-picker show-adjacent-months v-model=\"selectedDate\"></v-date-picker>\n                 </v-row>\n                </v-container>\n            </div>\n            <div class=\"timePickerContainer\">   \n        <v-row justify=\"space-around\">\n      <v-time-picker\n        v-model=\"time\"\n        format=\"12hr\"\n        scrollable\n      ></v-time-picker>\n    </v-row>\n        </div>\n            <button :class=\"selectedDate == null ? `dateBtnDisabled` : `saveDateBtn`\" :disabled=\"selectedDate == null\" @click=\"handleSaveDate\">Save Date</button>\n        </div>\n        </v-overlay>\n        <v-overlay v-model=\"isAttachmentTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" contained>\n            <AttachmentView :card=\"this.selectedCard._id\" class=\"attachmentContainerView\"/>\n        </v-overlay>\n    </div>\n    </PopupRouterView>\n  </template>\n\n<script>\nimport PopupOverlay from './PopupOverlay.vue';\nimport PopupRouterView from './PopupRouterView.vue';\nimport { BASE_URL } from '@/config'\n\nimport ButtonCard from '@/components/ButtonCard.vue'\nimport DescriptionViewFrom from '@/components/DescriptionViewForm.vue'\nimport TagContainerView from '@/components/TagContainerView.vue';\nimport TextEditorView from '@/components/TextEditorView.vue'\nimport AttachmentView from '@/components/AttachmentView.vue';\n\nimport axios from 'axios';\nimport { ref } from 'vue'\n  \nexport default {\n  name: 'ProductImagePopup',\n  components: {\n    PopupOverlay,\n    PopupRouterView\n  },\n  setup() {\n      var selectedCard = ref(null)\n      var selectedList = ref(null)\n      var cardTags = ref([])\n      return { selectedCard, selectedList, cardTags };\n    },\n    created() {\n      // fetch from api\n      let routeParams = this.$route.params\n      console.log(\"pop up params: \", routeParams)\n      // Call api to fetch board\n      let card_id = routeParams.cardId\n      this.getCardBy(card_id)\n    },\n    methods: {\n      async getCardBy(card_id) {\n        var params = {\n            card_id: card_id\n        }\n        var fullURL = BASE_URL + \"board/getCardDetail\"\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            console.log(\"card detail data: \", data)\n            if (data.statusCode == 200) {\n                let resp = data.resp\n                if (resp != null) {\n                   this.selectedCard = resp.card\n                   this.selectedList = resp.list\n                   this.cardTags = resp.tags\n                  //  this.isCardTapped = true \n                  //  this.$emit('cardDetailInfo', resp)\n                }\n                \n              }\n             }\n          })\n        }\n    }\n  }\n  </script>\n\n<style scoped>\n.containerView {\n  background-color: white;\n  height: 400px;\n  width: 400px;\n  z-index: 9999999999;\n}\n</style>\n  "],"mappings":"AAwGA,OAAOA,YAAW,MAAO,oBAAoB;AAC7C,OAAOC,eAAc,MAAO,uBAAuB;AACnD,SAASC,QAAO,QAAS,UAAS;AAElC,OAAOC,UAAS,MAAO,6BAA4B;AACnD,OAAOC,mBAAkB,MAAO,sCAAqC;AACrE,OAAOC,gBAAe,MAAO,mCAAmC;AAChE,OAAOC,cAAa,MAAO,iCAAgC;AAC3D,OAAOC,cAAa,MAAO,iCAAiC;AAE5D,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,GAAE,QAAS,KAAI;AAExB,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,UAAU,EAAE;IACVX,YAAY;IACZC;EACF,CAAC;EACDW,KAAKA,CAAA,EAAG;IACJ,IAAIC,YAAW,GAAIJ,GAAG,CAAC,IAAI;IAC3B,IAAIK,YAAW,GAAIL,GAAG,CAAC,IAAI;IAC3B,IAAIM,QAAO,GAAIN,GAAG,CAAC,EAAE;IACrB,OAAO;MAAEI,YAAY;MAAEC,YAAY;MAAEC;IAAS,CAAC;EACjD,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAIC,WAAU,GAAI,IAAI,CAACC,MAAM,CAACC,MAAK;IACnCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,WAAW;IAC1C;IACA,IAAIK,OAAM,GAAIL,WAAW,CAACM,MAAK;IAC/B,IAAI,CAACC,SAAS,CAACF,OAAO;EACxB,CAAC;EACDG,OAAO,EAAE;IACP,MAAMD,SAASA,CAACF,OAAO,EAAE;MACvB,IAAIH,MAAK,GAAI;QACTG,OAAO,EAAEA;MACb;MACA,IAAII,OAAM,GAAIxB,QAAO,GAAI,qBAAoB;MAC7C,MAAMM,KAAK,CAACmB,IAAI,CAACD,OAAO,EAAEP,MAAM,CAAC,CAACS,IAAI,CAAEC,QAAQ,IAAK;QACnD,IAAIA,QAAQ,CAACC,IAAG,IAAK,IAAI,EAAE;UACzB,IAAIA,IAAG,GAAID,QAAQ,CAACC,IAAG;UACvBV,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAES,IAAI;UACtC,IAAIA,IAAI,CAACC,UAAS,IAAK,GAAG,EAAE;YACxB,IAAIC,IAAG,GAAIF,IAAI,CAACE,IAAG;YACnB,IAAIA,IAAG,IAAK,IAAI,EAAE;cACf,IAAI,CAACnB,YAAW,GAAImB,IAAI,CAACC,IAAG;cAC5B,IAAI,CAACnB,YAAW,GAAIkB,IAAI,CAACE,IAAG;cAC5B,IAAI,CAACnB,QAAO,GAAIiB,IAAI,CAACG,IAAG;cACzB;cACA;YACF;UAEF;QACD;MACH,CAAC;IACH;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}