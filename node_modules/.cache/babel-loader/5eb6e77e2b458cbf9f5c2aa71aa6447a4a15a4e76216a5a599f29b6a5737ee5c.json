{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref } from 'vue';\nimport { BASE_URL } from '@/config';\nimport axios from 'axios';\nexport default {\n  props: {\n    card: String\n  },\n  setup() {\n    var isDragging = ref(false);\n    // var files = ref([])\n    var localeFileURL = ref(null);\n    var remoteFileURL = ref(null);\n    var selectedFile = ref(null);\n    var card_id = ref(\"\");\n    var isUploading = ref(false);\n    return {\n      isDragging,\n      localeFileURL,\n      selectedFile,\n      remoteFileURL,\n      card_id,\n      isUploading\n    };\n  },\n  methods: {\n    async handleUploadFile() {\n      let fileTypes = this.selectedFile.name.split(\".\");\n      if (this.selectedFile != null && this.localeFileURL != null && fileTypes.length > 0) {\n        let fileType = fileTypes.pop();\n        console.log(\"fileTypes: \", fileTypes, \"fileType: \", fileType.toLowerCase());\n        var postJson = {\n          card_id: this.card_id,\n          fileType: fileType.toLowerCase()\n        };\n        var formsData = new FormData();\n        formsData.append('attachment', this.selectedFile, this.selectedFile.name);\n        formsData.append(\"postJson\", JSON.stringify(postJson));\n        let fullURL = BASE_URL + \"files/upload\";\n        this.isUploading = true;\n        await axios.post(fullURL, formsData).then(response => {\n          this.isUploading = false;\n          this.selectedFile = null;\n          this.localeFileURL = null;\n          console.log(\"upload file response: \", response);\n          if (response.data != null) {\n            let data = response.data;\n            if (data.statusCode == 200) {\n              this.$emit(\"fileUploadComplete\", data.resp);\n            }\n          }\n        });\n      }\n\n      // if (this.remoteFileURL != null) {\n      //   var postJson = {\n      //      card_id: this.card_id, \n      //      remoteFileURL: this.remoteFileURL\n      //   }\n      //   let fullURL = BASE_URL + \"files/remoteURL\"\n      //   this.isUploading = true \n      //   await axios.post(fullURL, postJson).then((response) => {\n      //     this.isUploading = false \n      //     this.remoteFileURL = null\n      //      console.log(\"upload file response: \", response)\n      //   })\n      // }\n    },\n    onChange() {\n      let file = this.$refs.file.files[0];\n      console.log(\"dropped file: \", file);\n      this.selectedFile = file;\n      this.localeFileURL = this.generateURL(file);\n      this.remoteFileURL = null;\n    },\n    dragover(e) {\n      e.preventDefault();\n      this.isDragging = true;\n    },\n    dragleave() {\n      this.isDragging = false;\n    },\n    drop(e) {\n      e.preventDefault();\n      this.$refs.file.files = e.dataTransfer.files;\n      this.onChange();\n      this.isDragging = false;\n    },\n    generateURL(file) {\n      let fileSrc = URL.createObjectURL(file);\n      setTimeout(() => {\n        URL.revokeObjectURL(fileSrc);\n      }, 1000);\n      return fileSrc;\n    }\n  },\n  watch: {\n    remoteFileURL(newVal, oldVal) {\n      if (newVal != null) {\n        this.fileURL = null;\n        this.selectedFile = null;\n      }\n    }\n  },\n  updated() {\n    this.card_id = this.card;\n  }\n};","map":{"version":3,"names":["ref","BASE_URL","axios","props","card","String","setup","isDragging","localeFileURL","remoteFileURL","selectedFile","card_id","isUploading","methods","handleUploadFile","fileTypes","name","split","length","fileType","pop","console","log","toLowerCase","postJson","formsData","FormData","append","JSON","stringify","fullURL","post","then","response","data","statusCode","$emit","resp","onChange","file","$refs","files","generateURL","dragover","e","preventDefault","dragleave","drop","dataTransfer","fileSrc","URL","createObjectURL","setTimeout","revokeObjectURL","watch","newVal","oldVal","fileURL","updated"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/AttachmentView.vue"],"sourcesContent":["<template>\n     <div class=\"dropFileMainView\">\n      <div\n        class=\"dropzone-container\"\n        @dragover=\"dragover\"\n        @dragleave=\"dragleave\"\n        @drop=\"drop\"\n       >\n        <input\n          type=\"file\"\n          name=\"file\"\n          id=\"fileInput\"\n          class=\"hidden-input\"\n          @change=\"onChange\"\n          ref=\"file\"\n          accept=\".docx ,.pptx ,.xlsx ,.pdf ,.jpg ,.jpeg ,.png, .mp4, .mov\"\n        />\n  \n        <label for=\"fileInput\" class=\"file-label\">\n          <img src=\"@/assets/uploadCloudDark.png\" class=\"cloud\">\n          <div v-if=\"isDragging\">Release to drop a file.</div>\n          <div class=\"uploader\" v-else> \n          <b>Drop</b> a file or <b>Tap</b> to upload.<br>PNG, JPG, JPEG, PPTX, PDF, DOCX, XLSX\n          </div>\n        </label>\n      </div>\n      <img v-if=\"localeFileURL != null || remoteFileURL != null\" class=\"preview-img\"  :src=\"localeFileURL == null ? remoteFileURL : localeFileURL\"/>\n      <button v-if=\"isUploading\" class=\"uploadBtn buttonload\">\n            <i class=\"fa fa-circle-o-notch fa-spin\"></i> Uploading... \n        </button>\n      <button v-else class=\"uploadBtn\" @click=\"handleUploadFile\">Upload File</button>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { BASE_URL } from '@/config'; \nimport axios from 'axios';\n\nexport default {\n    props: { card: String },\n    setup() {\n        var isDragging = ref(false)\n        // var files = ref([])\n        var localeFileURL = ref(null)\n        var remoteFileURL = ref(null)\n        var selectedFile = ref(null)\n        var card_id = ref(\"\")\n        var isUploading = ref(false)\n        return {isDragging, localeFileURL, selectedFile, remoteFileURL, card_id, isUploading}\n    }, \n    methods: {\n        async handleUploadFile() {\n          let fileTypes = this.selectedFile.name.split(\".\")\n           if (this.selectedFile != null && this.localeFileURL != null && fileTypes.length > 0) {\n            let fileType = fileTypes.pop()\n            console.log(\"fileTypes: \", fileTypes, \"fileType: \", fileType.toLowerCase())\n               var postJson = {\n                 card_id: this.card_id,\n                 fileType: fileType.toLowerCase()\n               }\n              var formsData = new FormData()\n              formsData.append('attachment', this.selectedFile, this.selectedFile.name)\n              formsData.append(\"postJson\", JSON.stringify(postJson))\n              let fullURL = BASE_URL + \"files/upload\"\n              this.isUploading = true \n              await axios.post(fullURL, formsData).then((response) => {\n                this.isUploading = false \n                this.selectedFile = null\n                this.localeFileURL = null\n                 console.log(\"upload file response: \", response)\n                 if (response.data != null) {\n                   let data = response.data\n                  if (data.statusCode == 200) {\n                     this.$emit(\"fileUploadComplete\", data.resp)\n                  }\n                }\n              })\n            }\n\n            // if (this.remoteFileURL != null) {\n            //   var postJson = {\n            //      card_id: this.card_id, \n            //      remoteFileURL: this.remoteFileURL\n            //   }\n            //   let fullURL = BASE_URL + \"files/remoteURL\"\n            //   this.isUploading = true \n            //   await axios.post(fullURL, postJson).then((response) => {\n            //     this.isUploading = false \n            //     this.remoteFileURL = null\n            //      console.log(\"upload file response: \", response)\n            //   })\n            // }\n        },\n      onChange() {\n        let file = this.$refs.file.files[0]\n        console.log(\"dropped file: \", file)\n        this.selectedFile = file\n        this.localeFileURL = this.generateURL(file)\n        this.remoteFileURL = null\n      },\n      dragover(e) {\n        e.preventDefault();\n        this.isDragging = true;\n      },\n      dragleave() {\n        this.isDragging = false;\n      },\n      drop(e) {\n        e.preventDefault();\n        this.$refs.file.files = e.dataTransfer.files;\n        this.onChange();\n        this.isDragging = false;\n      },\n      generateURL(file) {\n       let fileSrc = URL.createObjectURL(file);\n       setTimeout(() => {\n         URL.revokeObjectURL(fileSrc);\n       }, 1000);\n       return fileSrc;\n      },\n    }, \n    watch: { \n      remoteFileURL(newVal, oldVal) { \n         if (newVal != null) {\n             this.fileURL = null\n             this.selectedFile = null\n          }\n        }, \n    }, \n    updated() {\n        this.card_id = this.card\n    },\n}\n</script>\n<style scoped>\n.cloud {\n  width: 40px;\n  height: 40px;\n  margin-bottom: 10px;\n}\n.fileLinkField {\n  width: 280px;\n  max-height: 44px;\n  font-weight: 500;\n  font-size: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 0px solid var(--color-light-primary) !important;\n  border-color: var(--color-light-primary);\n  margin-top: 5px;\n}\n\n.uploadBtn { \n  margin-top: 40px;\n  margin-bottom: 20px;\n  width: 260px;\n  height: 44px;\n  margin-right: auto;\n  margin-left: auto;\n  font-weight: 600;\n  font-size: 16px;\n  color: white;\n  background-color: var(--color-bar-dark);\n  border: 0px solid transparent;\n  border-radius: var(--border-radius-1);\n}\n\n  .dropFileMainView {\n    display: flex;\n    flex-direction: column;\n    height: 750px;\n    width: 300px;\n    overflow: hidden;\n  }\n\n.dropzone-container {\n    background: #f7fafc;\n    border: 1px solid #e2e8f0;\n    height: 250px;\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border-top-left-radius: var(--border-radius-2);\n    border-top-right-radius: var(--border-radius-2);\n}\n\n.hidden-input {\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    width: 1px;\n    height: 1px;\n}\n\n.file-label {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n    font-size: 16px;\n    cursor: pointer;\n    font-weight: 400;\n}\n\n.preview-img {\n  width: 100px;\n  height: 100px;\n  margin-top: 15px;\n  margin-bottom: 8px;\n  object-fit: contain;\n  margin-right: auto;\n  margin-left: auto;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}