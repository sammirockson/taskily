{"ast":null,"code":"import _defineProperty from \"/Users/samuelrockon/Desktop/Dev/taskily/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { merge } from 'lodash-es';\nimport * as Parchment from 'parchment';\nimport Delta from 'quill-delta';\nimport Editor from './editor.js';\nimport Emitter from './emitter.js';\nimport instances from './instances.js';\nimport logger from './logger.js';\nimport Module from './module.js';\nimport Selection, { Range } from './selection.js';\nimport Composition from './composition.js';\nimport Theme from './theme.js';\nimport scrollRectIntoView from './utils/scrollRectIntoView.js';\nimport createRegistryWithFormats from './utils/createRegistryWithFormats.js';\nconst debug = logger('quill');\nconst globalRegistry = new Parchment.Registry();\nParchment.ParentBlot.uiClass = 'ql-ui';\n\n/**\n * Options for initializing a Quill instance\n */\n\n/**\n * Similar to QuillOptions, but with all properties expanded to their default values,\n * and all selectors resolved to HTMLElements.\n */\n\nclass Quill {\n  static debug(limit) {\n    if (limit === true) {\n      limit = 'log';\n    }\n    logger.level(limit);\n  }\n  static find(node) {\n    let bubble = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return instances.get(node) || globalRegistry.find(node, bubble);\n  }\n  static import(name) {\n    if (this.imports[name] == null) {\n      debug.error(`Cannot import ${name}. Are you sure it was registered?`);\n    }\n    return this.imports[name];\n  }\n  static register() {\n    if (typeof (arguments.length <= 0 ? undefined : arguments[0]) !== 'string') {\n      const target = arguments.length <= 0 ? undefined : arguments[0];\n      const overwrite = !!(arguments.length <= 1 ? undefined : arguments[1]);\n      const name = 'attrName' in target ? target.attrName : target.blotName;\n      if (typeof name === 'string') {\n        // Shortcut for formats:\n        // register(Blot | Attributor, overwrite)\n        this.register(`formats/${name}`, target, overwrite);\n      } else {\n        Object.keys(target).forEach(key => {\n          this.register(key, target[key], overwrite);\n        });\n      }\n    } else {\n      const path = arguments.length <= 0 ? undefined : arguments[0];\n      const target = arguments.length <= 1 ? undefined : arguments[1];\n      const overwrite = !!(arguments.length <= 2 ? undefined : arguments[2]);\n      if (this.imports[path] != null && !overwrite) {\n        debug.warn(`Overwriting ${path} with`, target);\n      }\n      this.imports[path] = target;\n      if ((path.startsWith('blots/') || path.startsWith('formats/')) && target && typeof target !== 'boolean' && target.blotName !== 'abstract') {\n        globalRegistry.register(target);\n      }\n      if (typeof target.register === 'function') {\n        target.register(globalRegistry);\n      }\n    }\n  }\n  constructor(container) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.options = expandConfig(container, options);\n    this.container = this.options.container;\n    if (this.container == null) {\n      debug.error('Invalid Quill container', container);\n      return;\n    }\n    if (this.options.debug) {\n      Quill.debug(this.options.debug);\n    }\n    const html = this.container.innerHTML.trim();\n    this.container.classList.add('ql-container');\n    this.container.innerHTML = '';\n    instances.set(this.container, this);\n    this.root = this.addContainer('ql-editor');\n    this.root.classList.add('ql-blank');\n    this.emitter = new Emitter();\n    const scrollBlotName = Parchment.ScrollBlot.blotName;\n    const ScrollBlot = this.options.registry.query(scrollBlotName);\n    if (!ScrollBlot || !('blotName' in ScrollBlot)) {\n      throw new Error(`Cannot initialize Quill without \"${scrollBlotName}\" blot`);\n    }\n    this.scroll = new ScrollBlot(this.options.registry, this.root, {\n      emitter: this.emitter\n    });\n    this.editor = new Editor(this.scroll);\n    this.selection = new Selection(this.scroll, this.emitter);\n    this.composition = new Composition(this.scroll, this.emitter);\n    this.theme = new this.options.theme(this, this.options); // eslint-disable-line new-cap\n    this.keyboard = this.theme.addModule('keyboard');\n    this.clipboard = this.theme.addModule('clipboard');\n    this.history = this.theme.addModule('history');\n    this.uploader = this.theme.addModule('uploader');\n    this.theme.addModule('input');\n    this.theme.addModule('uiNode');\n    this.theme.init();\n    this.emitter.on(Emitter.events.EDITOR_CHANGE, type => {\n      if (type === Emitter.events.TEXT_CHANGE) {\n        this.root.classList.toggle('ql-blank', this.editor.isBlank());\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_UPDATE, (source, mutations) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo = oldRange && newRange ? {\n        oldRange,\n        newRange\n      } : undefined;\n      modify.call(this, () => this.editor.update(null, mutations, selectionInfo), source);\n    });\n    this.emitter.on(Emitter.events.SCROLL_EMBED_UPDATE, (blot, delta) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo = oldRange && newRange ? {\n        oldRange,\n        newRange\n      } : undefined;\n      modify.call(this, () => {\n        const change = new Delta().retain(blot.offset(this)).retain({\n          [blot.statics.blotName]: delta\n        });\n        return this.editor.update(change, [], selectionInfo);\n      }, Quill.sources.USER);\n    });\n    if (html) {\n      const contents = this.clipboard.convert({\n        html: `${html}<p><br></p>`,\n        text: '\\n'\n      });\n      this.setContents(contents);\n    }\n    this.history.clear();\n    if (this.options.placeholder) {\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\n    }\n    if (this.options.readOnly) {\n      this.disable();\n    }\n    this.allowReadOnlyEdits = false;\n  }\n  addContainer(container) {\n    let refNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (typeof container === 'string') {\n      const className = container;\n      container = document.createElement('div');\n      container.classList.add(className);\n    }\n    this.container.insertBefore(container, refNode);\n    return container;\n  }\n  blur() {\n    this.selection.setRange(null);\n  }\n  deleteText(index, length, source) {\n    // @ts-expect-error\n    [index, length,, source] = overload(index, length, source);\n    return modify.call(this, () => {\n      return this.editor.deleteText(index, length);\n    }, source, index, -1 * length);\n  }\n  disable() {\n    this.enable(false);\n  }\n  editReadOnly(modifier) {\n    this.allowReadOnlyEdits = true;\n    const value = modifier();\n    this.allowReadOnlyEdits = false;\n    return value;\n  }\n  enable() {\n    let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this.scroll.enable(enabled);\n    this.container.classList.toggle('ql-disabled', !enabled);\n  }\n  focus() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.selection.focus();\n    if (!options.preventScroll) {\n      this.scrollSelectionIntoView();\n    }\n  }\n  format(name, value) {\n    let source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Emitter.sources.API;\n    return modify.call(this, () => {\n      const range = this.getSelection(true);\n      let change = new Delta();\n      if (range == null) return change;\n      if (this.scroll.query(name, Parchment.Scope.BLOCK)) {\n        change = this.editor.formatLine(range.index, range.length, {\n          [name]: value\n        });\n      } else if (range.length === 0) {\n        this.selection.format(name, value);\n        return change;\n      } else {\n        change = this.editor.formatText(range.index, range.length, {\n          [name]: value\n        });\n      }\n      this.setSelection(range, Emitter.sources.SILENT);\n      return change;\n    }, source);\n  }\n  formatLine(index, length, name, value, source) {\n    let formats;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(index, length,\n    // @ts-expect-error\n    name, value, source);\n    return modify.call(this, () => {\n      return this.editor.formatLine(index, length, formats);\n    }, source, index, 0);\n  }\n  formatText(index, length, name, value, source) {\n    let formats;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n    // @ts-expect-error\n    index, length, name, value, source);\n    return modify.call(this, () => {\n      return this.editor.formatText(index, length, formats);\n    }, source, index, 0);\n  }\n  getBounds(index) {\n    let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let bounds = null;\n    if (typeof index === 'number') {\n      bounds = this.selection.getBounds(index, length);\n    } else {\n      bounds = this.selection.getBounds(index.index, index.length);\n    }\n    if (!bounds) return null;\n    const containerBounds = this.container.getBoundingClientRect();\n    return {\n      bottom: bounds.bottom - containerBounds.top,\n      height: bounds.height,\n      left: bounds.left - containerBounds.left,\n      right: bounds.right - containerBounds.left,\n      top: bounds.top - containerBounds.top,\n      width: bounds.width\n    };\n  }\n  getContents() {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;\n    [index, length] = overload(index, length);\n    return this.editor.getContents(index, length);\n  }\n  getFormat() {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getSelection(true);\n    let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (typeof index === 'number') {\n      return this.editor.getFormat(index, length);\n    }\n    return this.editor.getFormat(index.index, index.length);\n  }\n  getIndex(blot) {\n    return blot.offset(this.scroll);\n  }\n  getLength() {\n    return this.scroll.length();\n  }\n  getLeaf(index) {\n    return this.scroll.leaf(index);\n  }\n  getLine(index) {\n    return this.scroll.line(index);\n  }\n  getLines() {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;\n    if (typeof index !== 'number') {\n      return this.scroll.lines(index.index, index.length);\n    }\n    return this.scroll.lines(index, length);\n  }\n  getModule(name) {\n    return this.theme.modules[name];\n  }\n  getSelection() {\n    let focus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (focus) this.focus();\n    this.update(); // Make sure we access getRange with editor in consistent state\n    return this.selection.getRange()[0];\n  }\n  getSemanticHTML() {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let length = arguments.length > 1 ? arguments[1] : undefined;\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getHTML(index, length);\n  }\n  getText() {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let length = arguments.length > 1 ? arguments[1] : undefined;\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getText(index, length);\n  }\n  hasFocus() {\n    return this.selection.hasFocus();\n  }\n  insertEmbed(index, embed, value) {\n    let source = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Quill.sources.API;\n    return modify.call(this, () => {\n      return this.editor.insertEmbed(index, embed, value);\n    }, source, index);\n  }\n  insertText(index, text, name, value, source) {\n    let formats;\n    // eslint-disable-next-line prefer-const\n    // @ts-expect-error\n    [index,, formats, source] = overload(index, 0, name, value, source);\n    return modify.call(this, () => {\n      return this.editor.insertText(index, text, formats);\n    }, source, index, text.length);\n  }\n  isEnabled() {\n    return this.scroll.isEnabled();\n  }\n  off() {\n    return this.emitter.off(...arguments);\n  }\n  on() {\n    return this.emitter.on(...arguments);\n  }\n  once() {\n    return this.emitter.once(...arguments);\n  }\n  removeFormat(index, length, source) {\n    [index, length,, source] = overload(index, length, source);\n    return modify.call(this, () => {\n      return this.editor.removeFormat(index, length);\n    }, source, index);\n  }\n  scrollRectIntoView(rect) {\n    scrollRectIntoView(this.root, rect);\n  }\n\n  /**\n   * @deprecated Use Quill#scrollSelectionIntoView() instead.\n   */\n  scrollIntoView() {\n    console.warn('Quill#scrollIntoView() has been deprecated and will be removed in the near future. Please use Quill#scrollSelectionIntoView() instead.');\n    this.scrollSelectionIntoView();\n  }\n\n  /**\n   * Scroll the current selection into the visible area.\n   * If the selection is already visible, no scrolling will occur.\n   */\n  scrollSelectionIntoView() {\n    const range = this.selection.lastRange;\n    const bounds = range && this.selection.getBounds(range.index, range.length);\n    if (bounds) {\n      this.scrollRectIntoView(bounds);\n    }\n  }\n  setContents(delta) {\n    let source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Emitter.sources.API;\n    return modify.call(this, () => {\n      delta = new Delta(delta);\n      const length = this.getLength();\n      // Quill will set empty editor to \\n\n      const delete1 = this.editor.deleteText(0, length);\n      const applied = this.editor.insertContents(0, delta);\n      // Remove extra \\n from empty editor initialization\n      const delete2 = this.editor.deleteText(this.getLength() - 1, 1);\n      return delete1.compose(applied).compose(delete2);\n    }, source);\n  }\n  setSelection(index, length, source) {\n    if (index == null) {\n      // @ts-expect-error https://github.com/microsoft/TypeScript/issues/22609\n      this.selection.setRange(null, length || Quill.sources.API);\n    } else {\n      // @ts-expect-error\n      [index, length,, source] = overload(index, length, source);\n      this.selection.setRange(new Range(Math.max(0, index), length), source);\n      if (source !== Emitter.sources.SILENT) {\n        this.scrollSelectionIntoView();\n      }\n    }\n  }\n  setText(text) {\n    let source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Emitter.sources.API;\n    const delta = new Delta().insert(text);\n    return this.setContents(delta, source);\n  }\n  update() {\n    let source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Emitter.sources.USER;\n    const change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\n    this.selection.update(source);\n    // TODO this is usually undefined\n    return change;\n  }\n  updateContents(delta) {\n    let source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Emitter.sources.API;\n    return modify.call(this, () => {\n      delta = new Delta(delta);\n      return this.editor.applyDelta(delta);\n    }, source, true);\n  }\n}\n_defineProperty(Quill, \"DEFAULTS\", {\n  bounds: null,\n  modules: {\n    clipboard: true,\n    keyboard: true,\n    history: true,\n    uploader: true\n  },\n  placeholder: '',\n  readOnly: false,\n  registry: globalRegistry,\n  theme: 'default'\n});\n_defineProperty(Quill, \"events\", Emitter.events);\n_defineProperty(Quill, \"sources\", Emitter.sources);\n_defineProperty(Quill, \"version\", typeof \"2.0.2\" === 'undefined' ? 'dev' : \"2.0.2\");\n_defineProperty(Quill, \"imports\", {\n  delta: Delta,\n  parchment: Parchment,\n  'core/module': Module,\n  'core/theme': Theme\n});\nfunction resolveSelector(selector) {\n  return typeof selector === 'string' ? document.querySelector(selector) : selector;\n}\nfunction expandModuleConfig(config) {\n  return Object.entries(config ?? {}).reduce((expanded, _ref) => {\n    let [key, value] = _ref;\n    return {\n      ...expanded,\n      [key]: value === true ? {} : value\n    };\n  }, {});\n}\nfunction omitUndefinedValuesFromOptions(obj) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => entry[1] !== undefined));\n}\nfunction expandConfig(containerOrSelector, options) {\n  const container = resolveSelector(containerOrSelector);\n  if (!container) {\n    throw new Error('Invalid Quill container');\n  }\n  const shouldUseDefaultTheme = !options.theme || options.theme === Quill.DEFAULTS.theme;\n  const theme = shouldUseDefaultTheme ? Theme : Quill.import(`themes/${options.theme}`);\n  if (!theme) {\n    throw new Error(`Invalid theme ${options.theme}. Did you register it?`);\n  }\n  const {\n    modules: quillModuleDefaults,\n    ...quillDefaults\n  } = Quill.DEFAULTS;\n  const {\n    modules: themeModuleDefaults,\n    ...themeDefaults\n  } = theme.DEFAULTS;\n  let userModuleOptions = expandModuleConfig(options.modules);\n  // Special case toolbar shorthand\n  if (userModuleOptions != null && userModuleOptions.toolbar && userModuleOptions.toolbar.constructor !== Object) {\n    userModuleOptions = {\n      ...userModuleOptions,\n      toolbar: {\n        container: userModuleOptions.toolbar\n      }\n    };\n  }\n  const modules = merge({}, expandModuleConfig(quillModuleDefaults), expandModuleConfig(themeModuleDefaults), userModuleOptions);\n  const config = {\n    ...quillDefaults,\n    ...omitUndefinedValuesFromOptions(themeDefaults),\n    ...omitUndefinedValuesFromOptions(options)\n  };\n  let registry = options.registry;\n  if (registry) {\n    if (options.formats) {\n      debug.warn('Ignoring \"formats\" option because \"registry\" is specified');\n    }\n  } else {\n    registry = options.formats ? createRegistryWithFormats(options.formats, config.registry, debug) : config.registry;\n  }\n  return {\n    ...config,\n    registry,\n    container,\n    theme,\n    modules: Object.entries(modules).reduce((modulesWithDefaults, _ref2) => {\n      let [name, value] = _ref2;\n      if (!value) return modulesWithDefaults;\n      const moduleClass = Quill.import(`modules/${name}`);\n      if (moduleClass == null) {\n        debug.error(`Cannot load ${name} module. Are you sure you registered it?`);\n        return modulesWithDefaults;\n      }\n      return {\n        ...modulesWithDefaults,\n        // @ts-expect-error\n        [name]: merge({}, moduleClass.DEFAULTS || {}, value)\n      };\n    }, {}),\n    bounds: resolveSelector(config.bounds)\n  };\n}\n\n// Handle selection preservation and TEXT_CHANGE emission\n// common to modification APIs\nfunction modify(modifier, source, index, shift) {\n  if (!this.isEnabled() && source === Emitter.sources.USER && !this.allowReadOnlyEdits) {\n    return new Delta();\n  }\n  let range = index == null ? null : this.getSelection();\n  const oldDelta = this.editor.delta;\n  const change = modifier();\n  if (range != null) {\n    if (index === true) {\n      index = range.index; // eslint-disable-line prefer-destructuring\n    }\n    if (shift == null) {\n      range = shiftRange(range, change, source);\n    } else if (shift !== 0) {\n      // @ts-expect-error index should always be number\n      range = shiftRange(range, index, shift, source);\n    }\n    this.setSelection(range, Emitter.sources.SILENT);\n  }\n  if (change.length() > 0) {\n    const args = [Emitter.events.TEXT_CHANGE, change, oldDelta, source];\n    this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n    if (source !== Emitter.sources.SILENT) {\n      this.emitter.emit(...args);\n    }\n  }\n  return change;\n}\nfunction overload(index, length, name, value, source) {\n  let formats = {};\n  // @ts-expect-error\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\n    // Allow for throwaway end (used by insertText/insertEmbed)\n    if (typeof length !== 'number') {\n      // @ts-expect-error\n      source = value;\n      value = name;\n      name = length;\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    } else {\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    }\n  } else if (typeof length !== 'number') {\n    // @ts-expect-error\n    source = value;\n    value = name;\n    name = length;\n    length = 0;\n  }\n  // Handle format being object, two format name/value strings or excluded\n  if (typeof name === 'object') {\n    // @ts-expect-error Fix me later\n    formats = name;\n    // @ts-expect-error\n    source = value;\n  } else if (typeof name === 'string') {\n    if (value != null) {\n      formats[name] = value;\n    } else {\n      // @ts-expect-error\n      source = name;\n    }\n  }\n  // Handle optional source\n  source = source || Emitter.sources.API;\n  // @ts-expect-error\n  return [index, length, formats, source];\n}\nfunction shiftRange(range, index, lengthOrSource, source) {\n  const length = typeof lengthOrSource === 'number' ? lengthOrSource : 0;\n  if (range == null) return null;\n  let start;\n  let end;\n  // @ts-expect-error -- TODO: add a better type guard around `index`\n  if (index && typeof index.transformPosition === 'function') {\n    [start, end] = [range.index, range.index + range.length].map(pos =>\n    // @ts-expect-error -- TODO: add a better type guard around `index`\n    index.transformPosition(pos, source !== Emitter.sources.USER));\n  } else {\n    [start, end] = [range.index, range.index + range.length].map(pos => {\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      if (pos < index || pos === index && source === Emitter.sources.USER) return pos;\n      if (length >= 0) {\n        return pos + length;\n      }\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      return Math.max(index, pos + length);\n    });\n  }\n  return new Range(start, end - start);\n}\nexport { Parchment, Range };\nexport { globalRegistry, expandConfig, overload, Quill as default };","map":{"version":3,"names":["merge","Parchment","Delta","Editor","Emitter","instances","logger","Module","Selection","Range","Composition","Theme","scrollRectIntoView","createRegistryWithFormats","debug","globalRegistry","Registry","ParentBlot","uiClass","Quill","limit","level","find","node","bubble","arguments","length","undefined","get","import","name","imports","error","register","target","overwrite","attrName","blotName","Object","keys","forEach","key","path","warn","startsWith","constructor","container","options","expandConfig","html","innerHTML","trim","classList","add","set","root","addContainer","emitter","scrollBlotName","ScrollBlot","registry","query","Error","scroll","editor","selection","composition","theme","keyboard","addModule","clipboard","history","uploader","init","on","events","EDITOR_CHANGE","type","TEXT_CHANGE","toggle","isBlank","SCROLL_UPDATE","source","mutations","oldRange","lastRange","newRange","getRange","selectionInfo","modify","call","update","SCROLL_EMBED_UPDATE","blot","delta","change","retain","offset","statics","sources","USER","contents","convert","text","setContents","clear","placeholder","setAttribute","readOnly","disable","allowReadOnlyEdits","refNode","className","document","createElement","insertBefore","blur","setRange","deleteText","index","overload","enable","editReadOnly","modifier","value","enabled","focus","preventScroll","scrollSelectionIntoView","format","API","range","getSelection","Scope","BLOCK","formatLine","formatText","setSelection","SILENT","formats","getBounds","bounds","containerBounds","getBoundingClientRect","bottom","top","height","left","right","width","getContents","getLength","getFormat","getIndex","getLeaf","leaf","getLine","line","getLines","Number","MAX_VALUE","lines","getModule","modules","getSemanticHTML","getHTML","getText","hasFocus","insertEmbed","embed","insertText","isEnabled","off","once","removeFormat","rect","scrollIntoView","console","delete1","applied","insertContents","delete2","compose","Math","max","setText","insert","updateContents","applyDelta","_defineProperty","parchment","resolveSelector","selector","querySelector","expandModuleConfig","config","entries","reduce","expanded","_ref","omitUndefinedValuesFromOptions","obj","fromEntries","filter","entry","containerOrSelector","shouldUseDefaultTheme","DEFAULTS","quillModuleDefaults","quillDefaults","themeModuleDefaults","themeDefaults","userModuleOptions","toolbar","modulesWithDefaults","_ref2","moduleClass","shift","oldDelta","shiftRange","args","emit","lengthOrSource","start","end","transformPosition","map","pos","default"],"sources":["../../src/core/quill.ts"],"sourcesContent":["import { merge } from 'lodash-es';\nimport * as Parchment from 'parchment';\nimport type { Op } from 'quill-delta';\nimport Delta from 'quill-delta';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type Block from '../blots/block.js';\nimport type Scroll from '../blots/scroll.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type Uploader from '../modules/uploader.js';\nimport Editor from './editor.js';\nimport Emitter from './emitter.js';\nimport type { EmitterSource } from './emitter.js';\nimport instances from './instances.js';\nimport logger from './logger.js';\nimport type { DebugLevel } from './logger.js';\nimport Module from './module.js';\nimport Selection, { Range } from './selection.js';\nimport type { Bounds } from './selection.js';\nimport Composition from './composition.js';\nimport Theme from './theme.js';\nimport type { ThemeConstructor } from './theme.js';\nimport scrollRectIntoView from './utils/scrollRectIntoView.js';\nimport type { Rect } from './utils/scrollRectIntoView.js';\nimport createRegistryWithFormats from './utils/createRegistryWithFormats.js';\n\nconst debug = logger('quill');\n\nconst globalRegistry = new Parchment.Registry();\nParchment.ParentBlot.uiClass = 'ql-ui';\n\n/**\n * Options for initializing a Quill instance\n */\nexport interface QuillOptions {\n  theme?: string;\n  debug?: DebugLevel | boolean;\n  registry?: Parchment.Registry;\n  /**\n   * Whether to disable the editing\n   * @default false\n   */\n  readOnly?: boolean;\n\n  /**\n   * Placeholder text to display when the editor is empty\n   * @default \"\"\n   */\n  placeholder?: string;\n  bounds?: HTMLElement | string | null;\n  modules?: Record<string, unknown>;\n\n  /**\n   * A list of formats that are recognized and can exist within the editor contents.\n   * `null` means all formats are allowed.\n   * @default null\n   */\n  formats?: string[] | null;\n}\n\n/**\n * Similar to QuillOptions, but with all properties expanded to their default values,\n * and all selectors resolved to HTMLElements.\n */\nexport interface ExpandedQuillOptions\n  extends Omit<QuillOptions, 'theme' | 'formats'> {\n  theme: ThemeConstructor;\n  registry: Parchment.Registry;\n  container: HTMLElement;\n  modules: Record<string, unknown>;\n  bounds?: HTMLElement | null;\n  readOnly: boolean;\n}\n\nclass Quill {\n  static DEFAULTS = {\n    bounds: null,\n    modules: {\n      clipboard: true,\n      keyboard: true,\n      history: true,\n      uploader: true,\n    },\n    placeholder: '',\n    readOnly: false,\n    registry: globalRegistry,\n    theme: 'default',\n  } satisfies Partial<QuillOptions>;\n  static events = Emitter.events;\n  static sources = Emitter.sources;\n  static version = typeof QUILL_VERSION === 'undefined' ? 'dev' : QUILL_VERSION;\n\n  static imports: Record<string, unknown> = {\n    delta: Delta,\n    parchment: Parchment,\n    'core/module': Module,\n    'core/theme': Theme,\n  };\n\n  static debug(limit: DebugLevel | boolean) {\n    if (limit === true) {\n      limit = 'log';\n    }\n    logger.level(limit);\n  }\n\n  static find(node: Node, bubble = false) {\n    return instances.get(node) || globalRegistry.find(node, bubble);\n  }\n\n  static import(name: 'core/module'): typeof Module;\n  static import(name: `themes/${string}`): typeof Theme;\n  static import(name: 'parchment'): typeof Parchment;\n  static import(name: 'delta'): typeof Delta;\n  static import(name: string): unknown;\n  static import(name: string) {\n    if (this.imports[name] == null) {\n      debug.error(`Cannot import ${name}. Are you sure it was registered?`);\n    }\n    return this.imports[name];\n  }\n\n  static register(\n    targets: Record<\n      string,\n      | Parchment.RegistryDefinition\n      | Record<string, unknown> // any objects\n      | Theme\n      | Module\n      | Function // ES5 constructors\n    >,\n    overwrite?: boolean,\n  ): void;\n  static register(\n    target: Parchment.RegistryDefinition,\n    overwrite?: boolean,\n  ): void;\n  static register(path: string, target: any, overwrite?: boolean): void;\n  static register(...args: any[]): void {\n    if (typeof args[0] !== 'string') {\n      const target = args[0];\n      const overwrite = !!args[1];\n\n      const name = 'attrName' in target ? target.attrName : target.blotName;\n      if (typeof name === 'string') {\n        // Shortcut for formats:\n        // register(Blot | Attributor, overwrite)\n        this.register(`formats/${name}`, target, overwrite);\n      } else {\n        Object.keys(target).forEach((key) => {\n          this.register(key, target[key], overwrite);\n        });\n      }\n    } else {\n      const path = args[0];\n      const target = args[1];\n      const overwrite = !!args[2];\n\n      if (this.imports[path] != null && !overwrite) {\n        debug.warn(`Overwriting ${path} with`, target);\n      }\n      this.imports[path] = target;\n      if (\n        (path.startsWith('blots/') || path.startsWith('formats/')) &&\n        target &&\n        typeof target !== 'boolean' &&\n        target.blotName !== 'abstract'\n      ) {\n        globalRegistry.register(target);\n      }\n      if (typeof target.register === 'function') {\n        target.register(globalRegistry);\n      }\n    }\n  }\n\n  container: HTMLElement;\n  root: HTMLDivElement;\n  scroll: Scroll;\n  emitter: Emitter;\n  protected allowReadOnlyEdits: boolean;\n  editor: Editor;\n  composition: Composition;\n  selection: Selection;\n\n  theme: Theme;\n  keyboard: Keyboard;\n  clipboard: Clipboard;\n  history: History;\n  uploader: Uploader;\n\n  options: ExpandedQuillOptions;\n\n  constructor(container: HTMLElement | string, options: QuillOptions = {}) {\n    this.options = expandConfig(container, options);\n    this.container = this.options.container;\n    if (this.container == null) {\n      debug.error('Invalid Quill container', container);\n      return;\n    }\n    if (this.options.debug) {\n      Quill.debug(this.options.debug);\n    }\n    const html = this.container.innerHTML.trim();\n    this.container.classList.add('ql-container');\n    this.container.innerHTML = '';\n    instances.set(this.container, this);\n    this.root = this.addContainer('ql-editor');\n    this.root.classList.add('ql-blank');\n    this.emitter = new Emitter();\n    const scrollBlotName = Parchment.ScrollBlot.blotName;\n    const ScrollBlot = this.options.registry.query(scrollBlotName);\n    if (!ScrollBlot || !('blotName' in ScrollBlot)) {\n      throw new Error(\n        `Cannot initialize Quill without \"${scrollBlotName}\" blot`,\n      );\n    }\n    this.scroll = new ScrollBlot(this.options.registry, this.root, {\n      emitter: this.emitter,\n    }) as Scroll;\n    this.editor = new Editor(this.scroll);\n    this.selection = new Selection(this.scroll, this.emitter);\n    this.composition = new Composition(this.scroll, this.emitter);\n    this.theme = new this.options.theme(this, this.options); // eslint-disable-line new-cap\n    this.keyboard = this.theme.addModule('keyboard');\n    this.clipboard = this.theme.addModule('clipboard');\n    this.history = this.theme.addModule('history');\n    this.uploader = this.theme.addModule('uploader');\n    this.theme.addModule('input');\n    this.theme.addModule('uiNode');\n    this.theme.init();\n    this.emitter.on(Emitter.events.EDITOR_CHANGE, (type) => {\n      if (type === Emitter.events.TEXT_CHANGE) {\n        this.root.classList.toggle('ql-blank', this.editor.isBlank());\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_UPDATE, (source, mutations) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => this.editor.update(null, mutations, selectionInfo),\n        source,\n      );\n    });\n    this.emitter.on(Emitter.events.SCROLL_EMBED_UPDATE, (blot, delta) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => {\n          const change = new Delta()\n            .retain(blot.offset(this))\n            .retain({ [blot.statics.blotName]: delta });\n          return this.editor.update(change, [], selectionInfo);\n        },\n        Quill.sources.USER,\n      );\n    });\n    if (html) {\n      const contents = this.clipboard.convert({\n        html: `${html}<p><br></p>`,\n        text: '\\n',\n      });\n      this.setContents(contents);\n    }\n    this.history.clear();\n    if (this.options.placeholder) {\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\n    }\n    if (this.options.readOnly) {\n      this.disable();\n    }\n    this.allowReadOnlyEdits = false;\n  }\n\n  addContainer(container: string, refNode?: Node | null): HTMLDivElement;\n  addContainer(container: HTMLElement, refNode?: Node | null): HTMLElement;\n  addContainer(\n    container: string | HTMLElement,\n    refNode: Node | null = null,\n  ): HTMLDivElement | HTMLElement {\n    if (typeof container === 'string') {\n      const className = container;\n      container = document.createElement('div');\n      container.classList.add(className);\n    }\n    this.container.insertBefore(container, refNode);\n    return container;\n  }\n\n  blur() {\n    this.selection.setRange(null);\n  }\n\n  deleteText(range: Range, source?: EmitterSource): Delta;\n  deleteText(index: number, length: number, source?: EmitterSource): Delta;\n  deleteText(\n    index: number | Range,\n    length?: number | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    // @ts-expect-error\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.deleteText(index, length);\n      },\n      source,\n      index,\n      -1 * length,\n    );\n  }\n\n  disable() {\n    this.enable(false);\n  }\n\n  editReadOnly<T>(modifier: () => T): T {\n    this.allowReadOnlyEdits = true;\n    const value = modifier();\n    this.allowReadOnlyEdits = false;\n    return value;\n  }\n\n  enable(enabled = true) {\n    this.scroll.enable(enabled);\n    this.container.classList.toggle('ql-disabled', !enabled);\n  }\n\n  focus(options: { preventScroll?: boolean } = {}) {\n    this.selection.focus();\n    if (!options.preventScroll) {\n      this.scrollSelectionIntoView();\n    }\n  }\n\n  format(\n    name: string,\n    value: unknown,\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        const range = this.getSelection(true);\n        let change = new Delta();\n        if (range == null) return change;\n        if (this.scroll.query(name, Parchment.Scope.BLOCK)) {\n          change = this.editor.formatLine(range.index, range.length, {\n            [name]: value,\n          });\n        } else if (range.length === 0) {\n          this.selection.format(name, value);\n          return change;\n        } else {\n          change = this.editor.formatText(range.index, range.length, {\n            [name]: value,\n          });\n        }\n        this.setSelection(range, Emitter.sources.SILENT);\n        return change;\n      },\n      source,\n    );\n  }\n\n  formatLine(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string | Record<string, unknown>,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      index,\n      length,\n      // @ts-expect-error\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatLine(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  formatText(\n    range: Range,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number | Range,\n    length: number | string,\n    name: string | unknown,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      // @ts-expect-error\n      index,\n      length,\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatText(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  getBounds(index: number | Range, length = 0): Bounds | null {\n    let bounds: Bounds | null = null;\n    if (typeof index === 'number') {\n      bounds = this.selection.getBounds(index, length);\n    } else {\n      bounds = this.selection.getBounds(index.index, index.length);\n    }\n    if (!bounds) return null;\n    const containerBounds = this.container.getBoundingClientRect();\n    return {\n      bottom: bounds.bottom - containerBounds.top,\n      height: bounds.height,\n      left: bounds.left - containerBounds.left,\n      right: bounds.right - containerBounds.left,\n      top: bounds.top - containerBounds.top,\n      width: bounds.width,\n    };\n  }\n\n  getContents(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getContents(index, length);\n  }\n\n  getFormat(index?: number, length?: number): { [format: string]: unknown };\n  getFormat(range?: Range): {\n    [format: string]: unknown;\n  };\n  getFormat(\n    index: Range | number = this.getSelection(true),\n    length = 0,\n  ): { [format: string]: unknown } {\n    if (typeof index === 'number') {\n      return this.editor.getFormat(index, length);\n    }\n    return this.editor.getFormat(index.index, index.length);\n  }\n\n  getIndex(blot: Parchment.Blot) {\n    return blot.offset(this.scroll);\n  }\n\n  getLength() {\n    return this.scroll.length();\n  }\n\n  getLeaf(index: number) {\n    return this.scroll.leaf(index);\n  }\n\n  getLine(index: number) {\n    return this.scroll.line(index);\n  }\n\n  getLines(range: Range): (Block | BlockEmbed)[];\n  getLines(index?: number, length?: number): (Block | BlockEmbed)[];\n  getLines(\n    index: Range | number = 0,\n    length = Number.MAX_VALUE,\n  ): (Block | BlockEmbed)[] {\n    if (typeof index !== 'number') {\n      return this.scroll.lines(index.index, index.length);\n    }\n    return this.scroll.lines(index, length);\n  }\n\n  getModule(name: string) {\n    return this.theme.modules[name];\n  }\n\n  getSelection(focus: true): Range;\n  getSelection(focus?: boolean): Range | null;\n  getSelection(focus = false): Range | null {\n    if (focus) this.focus();\n    this.update(); // Make sure we access getRange with editor in consistent state\n    return this.selection.getRange()[0];\n  }\n\n  getSemanticHTML(range: Range): string;\n  getSemanticHTML(index?: number, length?: number): string;\n  getSemanticHTML(index: Range | number = 0, length?: number) {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getHTML(index, length);\n  }\n\n  getText(range?: Range): string;\n  getText(index?: number, length?: number): string;\n  getText(index: Range | number = 0, length?: number): string {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getText(index, length);\n  }\n\n  hasFocus() {\n    return this.selection.hasFocus();\n  }\n\n  insertEmbed(\n    index: number,\n    embed: string,\n    value: unknown,\n    source: EmitterSource = Quill.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertEmbed(index, embed, value);\n      },\n      source,\n      index,\n    );\n  }\n\n  insertText(index: number, text: string, source?: EmitterSource): Delta;\n  insertText(\n    index: number,\n    text: string,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name?: string | Record<string, unknown> | EmitterSource,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    // @ts-expect-error\n    [index, , formats, source] = overload(index, 0, name, value, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertText(index, text, formats);\n      },\n      source,\n      index,\n      text.length,\n    );\n  }\n\n  isEnabled() {\n    return this.scroll.isEnabled();\n  }\n\n  off(...args: Parameters<(typeof Emitter)['prototype']['off']>) {\n    return this.emitter.off(...args);\n  }\n\n  on(\n    event: (typeof Emitter)['events']['TEXT_CHANGE'],\n    handler: (delta: Delta, oldContent: Delta, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['SELECTION_CHANGE'],\n    handler: (range: Range, oldRange: Range, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['EDITOR_CHANGE'],\n    handler: (\n      ...args:\n        | [\n            (typeof Emitter)['events']['TEXT_CHANGE'],\n            Delta,\n            Delta,\n            EmitterSource,\n          ]\n        | [\n            (typeof Emitter)['events']['SELECTION_CHANGE'],\n            Range,\n            Range,\n            EmitterSource,\n          ]\n    ) => void,\n  ): Emitter;\n  on(event: string, ...args: unknown[]): Emitter;\n  on(...args: Parameters<(typeof Emitter)['prototype']['on']>): Emitter {\n    return this.emitter.on(...args);\n  }\n\n  once(...args: Parameters<(typeof Emitter)['prototype']['once']>) {\n    return this.emitter.once(...args);\n  }\n\n  removeFormat(index: number, length: number, source?: EmitterSource): Delta {\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.removeFormat(index, length);\n      },\n      source,\n      index,\n    );\n  }\n\n  scrollRectIntoView(rect: Rect) {\n    scrollRectIntoView(this.root, rect);\n  }\n\n  /**\n   * @deprecated Use Quill#scrollSelectionIntoView() instead.\n   */\n  scrollIntoView() {\n    console.warn(\n      'Quill#scrollIntoView() has been deprecated and will be removed in the near future. Please use Quill#scrollSelectionIntoView() instead.',\n    );\n    this.scrollSelectionIntoView();\n  }\n\n  /**\n   * Scroll the current selection into the visible area.\n   * If the selection is already visible, no scrolling will occur.\n   */\n  scrollSelectionIntoView() {\n    const range = this.selection.lastRange;\n    const bounds = range && this.selection.getBounds(range.index, range.length);\n    if (bounds) {\n      this.scrollRectIntoView(bounds);\n    }\n  }\n\n  setContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        const length = this.getLength();\n        // Quill will set empty editor to \\n\n        const delete1 = this.editor.deleteText(0, length);\n        const applied = this.editor.insertContents(0, delta);\n        // Remove extra \\n from empty editor initialization\n        const delete2 = this.editor.deleteText(this.getLength() - 1, 1);\n        return delete1.compose(applied).compose(delete2);\n      },\n      source,\n    );\n  }\n  setSelection(range: Range | null, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(index: number, length?: number, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(\n    index: Range | null | number,\n    length?: EmitterSource | number,\n    source?: EmitterSource,\n  ): void {\n    if (index == null) {\n      // @ts-expect-error https://github.com/microsoft/TypeScript/issues/22609\n      this.selection.setRange(null, length || Quill.sources.API);\n    } else {\n      // @ts-expect-error\n      [index, length, , source] = overload(index, length, source);\n      this.selection.setRange(new Range(Math.max(0, index), length), source);\n      if (source !== Emitter.sources.SILENT) {\n        this.scrollSelectionIntoView();\n      }\n    }\n  }\n\n  setText(text: string, source: EmitterSource = Emitter.sources.API) {\n    const delta = new Delta().insert(text);\n    return this.setContents(delta, source);\n  }\n\n  update(source: EmitterSource = Emitter.sources.USER) {\n    const change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\n    this.selection.update(source);\n    // TODO this is usually undefined\n    return change;\n  }\n\n  updateContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        return this.editor.applyDelta(delta);\n      },\n      source,\n      true,\n    );\n  }\n}\n\nfunction resolveSelector(selector: string | HTMLElement | null | undefined) {\n  return typeof selector === 'string'\n    ? document.querySelector<HTMLElement>(selector)\n    : selector;\n}\n\nfunction expandModuleConfig(config: Record<string, unknown> | undefined) {\n  return Object.entries(config ?? {}).reduce(\n    (expanded, [key, value]) => ({\n      ...expanded,\n      [key]: value === true ? {} : value,\n    }),\n    {} as Record<string, unknown>,\n  );\n}\n\nfunction omitUndefinedValuesFromOptions(obj: QuillOptions) {\n  return Object.fromEntries(\n    Object.entries(obj).filter((entry) => entry[1] !== undefined),\n  );\n}\n\nfunction expandConfig(\n  containerOrSelector: HTMLElement | string,\n  options: QuillOptions,\n): ExpandedQuillOptions {\n  const container = resolveSelector(containerOrSelector);\n  if (!container) {\n    throw new Error('Invalid Quill container');\n  }\n\n  const shouldUseDefaultTheme =\n    !options.theme || options.theme === Quill.DEFAULTS.theme;\n  const theme = shouldUseDefaultTheme\n    ? Theme\n    : Quill.import(`themes/${options.theme}`);\n  if (!theme) {\n    throw new Error(`Invalid theme ${options.theme}. Did you register it?`);\n  }\n\n  const { modules: quillModuleDefaults, ...quillDefaults } = Quill.DEFAULTS;\n  const { modules: themeModuleDefaults, ...themeDefaults } = theme.DEFAULTS;\n\n  let userModuleOptions = expandModuleConfig(options.modules);\n  // Special case toolbar shorthand\n  if (\n    userModuleOptions != null &&\n    userModuleOptions.toolbar &&\n    userModuleOptions.toolbar.constructor !== Object\n  ) {\n    userModuleOptions = {\n      ...userModuleOptions,\n      toolbar: { container: userModuleOptions.toolbar },\n    };\n  }\n\n  const modules: ExpandedQuillOptions['modules'] = merge(\n    {},\n    expandModuleConfig(quillModuleDefaults),\n    expandModuleConfig(themeModuleDefaults),\n    userModuleOptions,\n  );\n\n  const config = {\n    ...quillDefaults,\n    ...omitUndefinedValuesFromOptions(themeDefaults),\n    ...omitUndefinedValuesFromOptions(options),\n  };\n\n  let registry = options.registry;\n  if (registry) {\n    if (options.formats) {\n      debug.warn('Ignoring \"formats\" option because \"registry\" is specified');\n    }\n  } else {\n    registry = options.formats\n      ? createRegistryWithFormats(options.formats, config.registry, debug)\n      : config.registry;\n  }\n\n  return {\n    ...config,\n    registry,\n    container,\n    theme,\n    modules: Object.entries(modules).reduce(\n      (modulesWithDefaults, [name, value]) => {\n        if (!value) return modulesWithDefaults;\n\n        const moduleClass = Quill.import(`modules/${name}`);\n        if (moduleClass == null) {\n          debug.error(\n            `Cannot load ${name} module. Are you sure you registered it?`,\n          );\n          return modulesWithDefaults;\n        }\n        return {\n          ...modulesWithDefaults,\n          // @ts-expect-error\n          [name]: merge({}, moduleClass.DEFAULTS || {}, value),\n        };\n      },\n      {},\n    ),\n    bounds: resolveSelector(config.bounds),\n  };\n}\n\n// Handle selection preservation and TEXT_CHANGE emission\n// common to modification APIs\nfunction modify(\n  modifier: () => Delta,\n  source: EmitterSource,\n  index: number | boolean,\n  shift: number | null,\n) {\n  if (\n    !this.isEnabled() &&\n    source === Emitter.sources.USER &&\n    !this.allowReadOnlyEdits\n  ) {\n    return new Delta();\n  }\n  let range = index == null ? null : this.getSelection();\n  const oldDelta = this.editor.delta;\n  const change = modifier();\n  if (range != null) {\n    if (index === true) {\n      index = range.index; // eslint-disable-line prefer-destructuring\n    }\n    if (shift == null) {\n      range = shiftRange(range, change, source);\n    } else if (shift !== 0) {\n      // @ts-expect-error index should always be number\n      range = shiftRange(range, index, shift, source);\n    }\n    this.setSelection(range, Emitter.sources.SILENT);\n  }\n  if (change.length() > 0) {\n    const args = [Emitter.events.TEXT_CHANGE, change, oldDelta, source];\n    this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n    if (source !== Emitter.sources.SILENT) {\n      this.emitter.emit(...args);\n    }\n  }\n  return change;\n}\n\ntype NormalizedIndexLength = [\n  number,\n  number,\n  Record<string, unknown>,\n  EmitterSource,\n];\nfunction overload(index: number, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(range: Range, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: Range | number,\n  length?: number | string | Record<string, unknown> | EmitterSource,\n  name?: string | unknown | Record<string, unknown> | EmitterSource,\n  value?: unknown | EmitterSource,\n  source?: EmitterSource,\n): NormalizedIndexLength {\n  let formats: Record<string, unknown> = {};\n  // @ts-expect-error\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\n    // Allow for throwaway end (used by insertText/insertEmbed)\n    if (typeof length !== 'number') {\n      // @ts-expect-error\n      source = value;\n      value = name;\n      name = length;\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    } else {\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    }\n  } else if (typeof length !== 'number') {\n    // @ts-expect-error\n    source = value;\n    value = name;\n    name = length;\n    length = 0;\n  }\n  // Handle format being object, two format name/value strings or excluded\n  if (typeof name === 'object') {\n    // @ts-expect-error Fix me later\n    formats = name;\n    // @ts-expect-error\n    source = value;\n  } else if (typeof name === 'string') {\n    if (value != null) {\n      formats[name] = value;\n    } else {\n      // @ts-expect-error\n      source = name;\n    }\n  }\n  // Handle optional source\n  source = source || Emitter.sources.API;\n  // @ts-expect-error\n  return [index, length, formats, source];\n}\n\nfunction shiftRange(range: Range, change: Delta, source?: EmitterSource): Range;\nfunction shiftRange(\n  range: Range,\n  index: number,\n  length?: number,\n  source?: EmitterSource,\n): Range;\nfunction shiftRange(\n  range: Range,\n  index: number | Delta,\n  lengthOrSource?: number | EmitterSource,\n  source?: EmitterSource,\n) {\n  const length = typeof lengthOrSource === 'number' ? lengthOrSource : 0;\n  if (range == null) return null;\n  let start;\n  let end;\n  // @ts-expect-error -- TODO: add a better type guard around `index`\n  if (index && typeof index.transformPosition === 'function') {\n    [start, end] = [range.index, range.index + range.length].map((pos) =>\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      index.transformPosition(pos, source !== Emitter.sources.USER),\n    );\n  } else {\n    [start, end] = [range.index, range.index + range.length].map((pos) => {\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      if (pos < index || (pos === index && source === Emitter.sources.USER))\n        return pos;\n      if (length >= 0) {\n        return pos + length;\n      }\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      return Math.max(index, pos + length);\n    });\n  }\n  return new Range(start, end - start);\n}\n\nexport type { Bounds, DebugLevel, EmitterSource };\nexport { Parchment, Range };\n\nexport { globalRegistry, expandConfig, overload, Quill as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}