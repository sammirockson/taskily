{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6a08d898\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"dropFileMainView\"\n};\nconst _hoisted_2 = {\n  for: \"fileInput\",\n  class: \"file-label\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Drop\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Tap\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  key: 1,\n  class: \"uploadBtn buttonload\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa fa-circle-o-notch fa-spin\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"dropzone-container\",\n    onDragover: _cache[1] || (_cache[1] = (...args) => $options.dragover && $options.dragover(...args)),\n    onDragleave: _cache[2] || (_cache[2] = (...args) => $options.dragleave && $options.dragleave(...args)),\n    onDrop: _cache[3] || (_cache[3] = (...args) => $options.drop && $options.drop(...args))\n  }, [_createElementVNode(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    id: \"fileInput\",\n    class: \"hidden-input\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onChange && $options.onChange(...args)),\n    ref: \"file\",\n    accept: \".docx, .pptx, .xlsx, .pdf, .jpg,.jpeg,.png\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createElementVNode(\"label\", _hoisted_2, [$setup.isDragging ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Release to drop a file.\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _createTextVNode(\" a file or \"), _hoisted_6, _createTextVNode(\" to upload.\"), _hoisted_7, _createTextVNode(\"PNG, JPG, JPEG, PDF, \")]))])], 32 /* NEED_HYDRATION */), $setup.localeFileURL != null || $setup.remoteFileURL != null ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    class: \"preview-img\",\n    src: $setup.localeFileURL == null ? $setup.remoteFileURL : $setup.localeFileURL\n  }, null, 8 /* PROPS */, _hoisted_8)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <label for=\\\"\\\">Or</label> \"), _createCommentVNode(\" <v-text-field type=\\\"text\\\" prepend-inner-icon=\\\"mdi-file-outline\\\" class=\\\"fileLinkField\\\" v-model=\\\"remoteFileURL\\\" variant=\\\"outlined\\\" label=\\\"Paste file link\\\"></v-text-field> \"), $setup.isUploading ? (_openBlock(), _createElementBlock(\"button\", _hoisted_9, [_hoisted_10, _createTextVNode(\" Uploading... \")])) : (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    class: \"uploadBtn\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.handleUploadFile && $options.handleUploadFile(...args))\n  }, \"Upload File\"))]);\n}","map":{"version":3,"names":["class","for","key","_createElementVNode","_createElementBlock","_hoisted_1","onDragover","_cache","args","$options","dragover","onDragleave","dragleave","onDrop","drop","type","name","id","onChange","ref","accept","_hoisted_2","$setup","isDragging","_hoisted_3","_hoisted_4","_hoisted_5","_createTextVNode","_hoisted_6","_hoisted_7","localeFileURL","remoteFileURL","src","_hoisted_8","_createCommentVNode","isUploading","_hoisted_9","_hoisted_10","onClick","handleUploadFile"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/AttachmentView.vue"],"sourcesContent":["<template>\n     <div class=\"dropFileMainView\">\n      <div\n        class=\"dropzone-container\"\n        @dragover=\"dragover\"\n        @dragleave=\"dragleave\"\n        @drop=\"drop\"\n       >\n        <input\n          type=\"file\"\n          name=\"file\"\n          id=\"fileInput\"\n          class=\"hidden-input\"\n          @change=\"onChange\"\n          ref=\"file\"\n          accept=\".docx, .pptx, .xlsx, .pdf, .jpg,.jpeg,.png\"\n        />\n  \n        <label for=\"fileInput\" class=\"file-label\">\n          <div v-if=\"isDragging\">Release to drop a file.</div>\n          <div v-else><b>Drop</b> a file or <b>Tap</b> to upload.<br>PNG, JPG, JPEG, PDF, </div>\n        </label>\n      </div>\n      <img v-if=\"localeFileURL != null || remoteFileURL != null\" class=\"preview-img\"  :src=\"localeFileURL == null ? remoteFileURL : localeFileURL\"/>\n      <!-- <label for=\"\">Or</label> -->\n      <!-- <v-text-field type=\"text\" prepend-inner-icon=\"mdi-file-outline\" class=\"fileLinkField\" v-model=\"remoteFileURL\" variant=\"outlined\" label=\"Paste file link\"></v-text-field> -->\n      <button v-if=\"isUploading\" class=\"uploadBtn buttonload\">\n            <i class=\"fa fa-circle-o-notch fa-spin\"></i> Uploading... \n        </button>\n      <button v-else class=\"uploadBtn\" @click=\"handleUploadFile\">Upload File</button>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { BASE_URL } from '@/config'; \nimport axios from 'axios';\n\nexport default {\n    props: { card: String },\n    setup() {\n        var isDragging = ref(false)\n        // var files = ref([])\n        var localeFileURL = ref(null)\n        var remoteFileURL = ref(null)\n        var selectedFile = ref(null)\n        var card_id = ref(\"\")\n        var isUploading = ref(false)\n        return {isDragging, localeFileURL, selectedFile, remoteFileURL, card_id, isUploading}\n    }, \n    methods: {\n        async handleUploadFile() {\n           if (this.selectedFile != null && this.localeFileURL != null) {\n               var postJson = {\n                 card_id: this.card_id\n               }\n              var formsData = new FormData()\n              formsData.append('attachment', this.selectedFile, this.selectedFile.name)\n              formsData.append(\"postJson\", JSON.stringify(postJson))\n              let fullURL = BASE_URL + \"files/upload\"\n              this.isUploading = true \n              await axios.post(fullURL, formsData).then((response) => {\n                this.isUploading = false \n                this.selectedFile = null\n                this.localeFileURL = null\n                 console.log(\"upload file response: \", response)\n                 if (response.data != null) {\n                   let data = response.data\n                  if (data.statusCode == 200) {\n                     this.$emit(\"fileUploadComplete\", data.resp)\n                  }\n                }\n              })\n            }\n\n            // if (this.remoteFileURL != null) {\n            //   var postJson = {\n            //      card_id: this.card_id, \n            //      remoteFileURL: this.remoteFileURL\n            //   }\n            //   let fullURL = BASE_URL + \"files/remoteURL\"\n            //   this.isUploading = true \n            //   await axios.post(fullURL, postJson).then((response) => {\n            //     this.isUploading = false \n            //     this.remoteFileURL = null\n            //      console.log(\"upload file response: \", response)\n            //   })\n            // }\n        },\n      onChange() {\n        let file = this.$refs.file.files[0]\n        console.log(\"dropped file: \", file)\n        this.selectedFile = file\n        this.localeFileURL = this.generateURL(file)\n        this.remoteFileURL = null\n      },\n      dragover(e) {\n        e.preventDefault();\n        this.isDragging = true;\n      },\n      dragleave() {\n        this.isDragging = false;\n      },\n      drop(e) {\n        e.preventDefault();\n        this.$refs.file.files = e.dataTransfer.files;\n        this.onChange();\n        this.isDragging = false;\n      },\n      generateURL(file) {\n       let fileSrc = URL.createObjectURL(file);\n       setTimeout(() => {\n         URL.revokeObjectURL(fileSrc);\n       }, 1000);\n       return fileSrc;\n      },\n    }, \n    watch: { \n      remoteFileURL(newVal, oldVal) { \n         if (newVal != null) {\n             this.fileURL = null\n             this.selectedFile = null\n          }\n        }, \n    }, \n    updated() {\n        this.card_id = this.card\n    },\n}\n</script>\n<style scoped>\n.fileLinkField {\n  width: 280px;\n  max-height: 44px;\n  font-weight: 500;\n  font-size: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 0px solid var(--color-light-primary) !important;\n  border-color: var(--color-light-primary);\n  margin-top: 5px;\n}\n\n.uploadBtn { \n  margin-top: 40px;\n  margin-bottom: 20px;\n  width: 260px;\n  height: 44px;\n  margin-right: auto;\n  margin-left: auto;\n  font-weight: 600;\n  font-size: 16px;\n  color: white;\n  background-color: var(--color-bar-dark);\n  border: 0px solid transparent;\n  border-radius: var(--border-radius-1);\n}\n\n  .dropFileMainView {\n    display: flex;\n    flex-direction: column;\n    height: 750px;\n    width: 300px;\n    overflow: hidden;\n  }\n\n.dropzone-container {\n    background: #f7fafc;\n    border: 1px solid #e2e8f0;\n    height: 250px;\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border-top-left-radius: var(--border-radius-2);\n    border-top-right-radius: var(--border-radius-2);\n}\n\n.hidden-input {\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    width: 1px;\n    height: 1px;\n}\n\n.file-label {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n    font-size: 16px;\n    cursor: pointer;\n    font-weight: 400;\n}\n\n.preview-img {\n  width: 100px;\n  height: 100px;\n  margin-top: 15px;\n  margin-bottom: 8px;\n  object-fit: contain;\n  margin-right: auto;\n  margin-left: auto;\n}\n</style>"],"mappings":";;;EACUA,KAAK,EAAC;AAAkB;;EAiBnBC,GAAG,EAAC,WAAW;EAACD,KAAK,EAAC;;;EAlBrCE,GAAA;AAAA;;EAAAA,GAAA;AAAA;gEAoBsBC,mBAAA,CAAW,WAAR,MAAI;gEAAeA,mBAAA,CAAU,WAAP,KAAG;gEAAeA,mBAAA,CAAI;mBApBrE;;EAAAD,GAAA;EA0BiCF,KAAK,EAAC;;iEAC3BG,mBAAA,CAA4C;EAAzCH,KAAK,EAAC;AAA8B;;uBA1B9CI,mBAAA,CA6BK,OA7BLC,UA6BK,GA5BJF,mBAAA,CAoBM;IAnBJH,KAAK,EAAC,oBAAoB;IACzBM,UAAQ,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;IAClBG,WAAS,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,SAAA,IAAAH,QAAA,CAAAG,SAAA,IAAAJ,IAAA,CAAS;IACpBK,MAAI,EAAAN,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAK,IAAA,IAAAL,QAAA,CAAAK,IAAA,IAAAN,IAAA,CAAI;MAEXL,mBAAA,CAQE;IAPAY,IAAI,EAAC,MAAM;IACXC,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,WAAW;IACdjB,KAAK,EAAC,cAAc;IACnBkB,QAAM,EAAAX,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAS,QAAA,IAAAT,QAAA,CAAAS,QAAA,IAAAV,IAAA,CAAQ;IACjBW,GAAG,EAAC,MAAM;IACVC,MAAM,EAAC;kDAGTjB,mBAAA,CAGQ,SAHRkB,UAGQ,GAFKC,MAAA,CAAAC,UAAU,I,cAArBnB,mBAAA,CAAoD,OAnB9DoB,UAAA,EAmBiC,yBAAuB,M,cAC9CpB,mBAAA,CAAsF,OApBhGqB,UAAA,GAoBsBC,UAAW,EApBjCC,gBAAA,CAoBiC,aAAW,GAAAC,UAAU,EApBtDD,gBAAA,CAoBsD,aAAW,GAAAE,UAAI,EApBrEF,gBAAA,CAoBqE,uBAAqB,E,iCAGzEL,MAAA,CAAAQ,aAAa,YAAYR,MAAA,CAAAS,aAAa,Y,cAAjD3B,mBAAA,CAA8I;IAvBpJF,GAAA;IAuBiEF,KAAK,EAAC,aAAa;IAAGgC,GAAG,EAAEV,MAAA,CAAAQ,aAAa,WAAWR,MAAA,CAAAS,aAAa,GAAGT,MAAA,CAAAQ;0BAvBpIG,UAAA,KAAAC,mBAAA,gBAwBMA,mBAAA,gCAAiC,EACjCA,mBAAA,0LAAiL,EACnKZ,MAAA,CAAAa,WAAW,I,cAAzB/B,mBAAA,CAEW,UAFXgC,UAEW,GADLC,WAA4C,EA3BxDV,gBAAA,CA2BwD,gBAChD,E,oBACFvB,mBAAA,CAA+E;IA7BrFF,GAAA;IA6BqBF,KAAK,EAAC,WAAW;IAAEsC,OAAK,EAAA/B,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAA8B,gBAAA,IAAA9B,QAAA,CAAA8B,gBAAA,IAAA/B,IAAA,CAAgB;KAAE,aAAW,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}