{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5d5d11e4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"allBoards\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <div class=\\\"boardContentView\\\">\\n                <v-row style=\\\"overflow: hidden;\\\">\\n             <v-col v-for=\\\"product in boards\\\" :key=\\\"product\\\" cols=\\\"auto\\\"> \\n               <div :class=\\\"`productGridCellWithBorder`\\\">\\n                  <img src=\\\"@/assets/board_placeholder.png\\\" class=\\\"productCellImage\\\">\\n                  <label class=\\\"productNameLabel\\\">{{ product }}</label>\\n               </div>\\n              </v-col>\\n            </v-row>\\n           </div> \")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/views/AllTaskboardsView.vue"],"sourcesContent":["<template>\n     <div class=\"allBoards\">\n            <!-- <div class=\"boardContentView\">\n                <v-row style=\"overflow: hidden;\">\n             <v-col v-for=\"product in boards\" :key=\"product\" cols=\"auto\"> \n               <div :class=\"`productGridCellWithBorder`\">\n                  <img src=\"@/assets/board_placeholder.png\" class=\"productCellImage\">\n                  <label class=\"productNameLabel\">{{ product }}</label>\n               </div>\n              </v-col>\n            </v-row>\n           </div> -->\n        </div>\n</template>\n<script>\nimport { ref } from 'vue'\nexport default {\n    props: [\"isExpanded\"],\n    components: {\n        NavBar\n    }, \n    methods: {\n        handleBoardTypeTapped(item) {\n            this.selectedTaskBoardType = item\n        }\n    },\n    setup() {\n        var isSideBarExpanded = ref(false)\n        var selectedTaskBoardType = ref(\"All Team\")\n        var boards = ref([\"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\"])\n        return { isSideBarExpanded, boards, selectedTaskBoardType}\n    },\n    watch: { \n        isExpanded: function(newVal, oldVal) {\n            console.log('Prop changed isSideBarExpanwded: ', newVal)\n            this.isSideBarExpanded = newVal\n        }\n    }, \n    mounted() {\n\n    } \n}\n</script>\n<style scoped>\n    .productCellImage {\n    height: 200px;\n    width: 232px;\n    margin-right: auto;\n    margin-left: auto;\n    background-color: var(--color-light);\n    object-fit: cover;\n}\n\n.productGridCellWithBorder {\n    border: 2px solid var(--color-light);\n}\n.productGridCell, .productGridCellWithBorder {\n    display: block;\n    height: 280px;\n    overflow: hidden;\n    width: 232px;\n    background-color: white;\n    border-radius: var(--border-radius-2);\n}\n\n.boardContentView {\n    width: 99%;\n    height: 96%;\n    display: flex;\n    /* flex-direction: column; */\n    justify-content: left;\n    align-items: start;\n    background-color: white;\n    margin: auto;\n    margin-top: 10px;\n    border-radius: var(--border-radius-1);\n    padding: 30px;\n}\n\n.allBoards {\n    width: 100vw;\n    height: 100vh;\n    background-color: orange;\n}\n</style>"],"mappings":";;;EACUA,KAAK,EAAC;AAAW;;uBAAtBC,mBAAA,CAWS,OAXTC,UAWS,GAVFC,mBAAA,weASS,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}