{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/cardPhoto.png';\nimport _imports_1 from '@/assets/clock.png';\nimport _imports_2 from '@/assets/eyeViews.png';\nimport _imports_3 from '@/assets/comments.png';\nimport _imports_4 from '@/assets/attachment.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-48804fb0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"boardBNavBar\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"mainBoardConentView\"\n};\nconst _hoisted_3 = {\n  class: \"boardListsContainer\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  class: \"cardImage\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"dueDateContainer\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1,\n  class: \"clockIcon\"\n}), /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"dueDateLabel\"\n}, \"25 Feb 2024\")], -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"cardNameLabel\"\n};\nconst _hoisted_7 = {\n  class: \"progressContainer\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"viewMemberContainerView\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"boardInfoView\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_2,\n  class: \"boardIcon\"\n}), /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"4.7k\"), /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_3,\n  class: \"boardIcon\"\n}), /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"20\"), /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_4,\n  class: \"boardIcon\"\n}), /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"99\")]), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"membersContainer\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"avatar\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"https://picsum.photos/70\"\n})]), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"avatar\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"https://picsum.photos/80\"\n})]), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"avatar\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"https://picsum.photos/90\"\n})]), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"avatar\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"https://picsum.photos/100\"\n})]), /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"+99\")])], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  const _component_v_progress_linear = _resolveComponent(\"v-progress-linear\");\n  const _component_DraggableView = _resolveComponent(\"DraggableView\");\n  const _component_CardDetailView = _resolveComponent(\"CardDetailView\");\n  const _component_v_overlay = _resolveComponent(\"v-overlay\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_NavBar, {\n    isExpanded: this.isSideBarExpanded\n  }, null, 8 /* PROPS */, [\"isExpanded\"]), _hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_DraggableView, {\n    class: \"listContainer\",\n    modelValue: this.board.lists,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => this.board.lists = $event),\n    group: $setup.board,\n    \"item-key\": \"id\"\n  }, {\n    item: _withCtx(({\n      element\n    }) => [_createCommentVNode(\" <div>{{element.id}}</div> \"), _createElementVNode(\"div\", {\n      class: \"cardCell\",\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.handleCardTapped && $options.handleCardTapped(...args))\n    }, [_hoisted_4, _hoisted_5, _createElementVNode(\"label\", _hoisted_6, _toDisplayString(element.cardName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_v_progress_linear, {\n      location: false,\n      \"bg-color\": \"#92aed9\",\n      \"buffer-color\": \"#92aed9\",\n      color: \"#05C597\",\n      height: \"10\",\n      max: \"9\",\n      min: \"0\",\n      \"model-value\": \"2\",\n      rounded: \"\"\n    })]), _hoisted_8])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"group\"]), _createCommentVNode(\" <div class=\\\"listContainer\\\" v-for=\\\"(list, index) in this.board.lists\\\" :key=\\\"list.id\\\">\\n                    <div class=\\\"createNewList\\\" :style=\\\"{display: list.headerType ==  `creatingList` ? 'flex' : 'none'}\\\">\\n                            <textarea name=\\\"text\\\" v-model=\\\"newListName\\\" @input=\\\"dynamicTextArea(index)\\\" placeholder=\\\"Create New List\\\" class=\\\"createNewListField\\\" id=\\\"createNewListField_id\\\"></textarea>\\n                            <button v-if=\\\"isSavingCard\\\" class=\\\"addListBtn buttonload\\\">\\n                               <i class=\\\"fa fa-circle-o-notch fa-spin\\\"></i> Creating... \\n                            </button>\\n                           <button v-else class=\\\"addListBtn\\\" @click=\\\"createANewList(list, index)\\\">Create List</button>\\n                    </div>\\n                    <div class=\\\"listFooterView\\\" @click=\\\"handleAddList(list, index)\\\" :style=\\\"{display: list.headerType ==  `addList` ? 'flex' : 'none'}\\\">\\n                        <span id=\\\"addIcon\\\" class=\\\"material-symbols-outlined\\\">add</span>\\n                        <div class=\\\"footerTitleContainer\\\">\\n                            <button class=\\\"addCardLabel\\\">New List</button>\\n                        </div>\\n                     </div>\\n                     <div class=\\\"listHeaderView\\\" :style=\\\"{display: list.headerType ==  `showListName` ? 'flex' : 'none'}\\\">\\n                         <div class=\\\"badgeAndTitleContainer\\\">\\n                            <div class=\\\"colorBadge\\\"></div>\\n                            <label class=\\\"listNameLabel\\\">{{ list.listName }}</label>\\n                         </div>\\n                         <label class=\\\"listNameLabel\\\">•••</label>\\n                     </div>\\n                     <div class=\\\"cardAndFooterContainer\\\">\\n                        <div v-if=\\\"list.cards != null\\\" class=\\\"cardContainer\\\"  v-for=\\\"card in list.cards\\\" :key=\\\"card.id\\\">\\n                          <div class=\\\"cardCell\\\" @click=\\\"handleCardTapped\\\">\\n                             <img v-if=\\\"card.attachments.count > 0\\\" src=\\\"@/assets/cardPhoto.png\\\" class=\\\"cardImage\\\">\\n                             <div class=\\\"dueDateContainer\\\">\\n                             <img src=\\\"@/assets/clock.png\\\" class=\\\"clockIcon\\\">\\n                                 <label class=\\\"dueDateLabel\\\">25 Feb 2024</label>\\n                             </div>\\n                             <label class=\\\"cardNameLabel\\\">{{ card.cardName }}</label>\\n                             <div class=\\\"progressContainer\\\">\\n                                <v-progress-linear\\n                                :location=\\\"false\\\"\\n                                bg-color=\\\"#92aed9\\\"\\n                                buffer-color=\\\"#92aed9\\\"\\n                                color=\\\"#05C597\\\"\\n                                height=\\\"10\\\"\\n                                max=\\\"9\\\"\\n                                min=\\\"0\\\"\\n                                model-value=\\\"2\\\"\\n                                rounded>\\n                             </v-progress-linear>\\n                             </div> \\n                             <div class=\\\"viewMemberContainerView\\\">\\n                                <div class=\\\"boardInfoView\\\">\\n                                    <img src=\\\"@/assets/eyeViews.png\\\" class=\\\"boardIcon\\\">\\n                                    <label for=\\\"\\\">4.7k</label>\\n                                    <img src=\\\"@/assets/comments.png\\\" class=\\\"boardIcon\\\">\\n                                    <label for=\\\"\\\">20</label>\\n                                    <img src=\\\"@/assets/attachment.png\\\" class=\\\"boardIcon\\\">\\n                                    <label for=\\\"\\\">99</label>\\n                                </div>\\n                              <div class=\\\"membersContainer\\\">\\n                                <span class=\\\"avatar\\\">\\n        <img  src=\\\"https://picsum.photos/70\\\">\\n    </span>\\n  <span class=\\\"avatar\\\">\\n        <img src=\\\"https://picsum.photos/80\\\">\\n    </span>\\n  <span class=\\\"avatar\\\">\\n        <img src=\\\"https://picsum.photos/90\\\">\\n    </span>\\n  <span class=\\\"avatar\\\">\\n       <img src=\\\"https://picsum.photos/100\\\">\\n    </span>\\n    <label for=\\\"\\\">+99</label>\\n                              </div>\\n                             </div>\\n                          </div>\\n                        </div>\\n                        <div v-if=\\\"list.isCreateCard == true\\\" class=\\\"createListContainer\\\">\\n                            <textarea name=\\\"text\\\" v-model=\\\"newCardName\\\" @input=\\\"autoGrow(index)\\\" placeholder=\\\"Give your card a name\\\" class=\\\"addListInputField\\\" :id=\\\"`newCardField_` + index\\\"></textarea>\\n                            <button v-if=\\\"isSavingCard\\\" class=\\\"addListBtn buttonload\\\">\\n                               <i class=\\\"fa fa-circle-o-notch fa-spin\\\"></i> Adding... \\n                            </button>\\n                           <button v-else class=\\\"addListBtn\\\" @click=\\\"handleCreateCard(list, index)\\\">Add Card</button>\\n                        </div>\\n                      <div v-else v-if=\\\"list.cards != null && list.cards.length > 0 || list.isAddCard == true\\\" class=\\\"listFooterView\\\" @click=\\\"handleAddCard(list, index)\\\">\\n                        <span id=\\\"addIcon\\\" class=\\\"material-symbols-outlined\\\">add</span>\\n                        <div class=\\\"footerTitleContainer\\\">\\n                            <button class=\\\"addCardLabel\\\">New Card</button>\\n                        </div>\\n                       </div>\\n                      \\n                    </div>\\n                    \\n                 </div> \")])]), _createVNode(_component_v_overlay, {\n    modelValue: $setup.isCardTapped,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.isCardTapped = $event),\n    class: \"align-center justify-center overLayContainer\",\n    contained: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_CardDetailView, {\n      onOverlayDismissed: $options.handleOverlayDismissed\n    }, null, 8 /* PROPS */, [\"onOverlayDismissed\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","_imports_3","_imports_4","_createElementVNode","class","src","for","_createElementBlock","_createVNode","_component_NavBar","isExpanded","isSideBarExpanded","_hoisted_1","_hoisted_2","_hoisted_3","_component_DraggableView","modelValue","board","lists","_cache","$event","group","$setup","item","_withCtx","element","_createCommentVNode","onClick","args","$options","handleCardTapped","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","cardName","_hoisted_7","_component_v_progress_linear","location","color","height","max","min","rounded","_hoisted_8","_","_component_v_overlay","isCardTapped","contained","default","_component_CardDetailView","onOverlayDismissed","handleOverlayDismissed"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/BoardContentView.vue"],"sourcesContent":["<template>\n    <div>\n        <NavBar :isExpanded=\"this.isSideBarExpanded\"/>\n        <div class=\"boardBNavBar\">\n\n        </div>\n        <div class=\"mainBoardConentView\">\n            <div class=\"boardListsContainer\">\n                <DraggableView  class=\"listContainer\"\n                    v-model=\"this.board.lists\" \n                    :group=\"board\" \n                    item-key=\"id\">\n                <template #item=\"{element}\">\n                   <!-- <div>{{element.id}}</div> -->\n                   <div class=\"cardCell\" @click=\"handleCardTapped\">\n                             <img src=\"@/assets/cardPhoto.png\" class=\"cardImage\">\n                             <div class=\"dueDateContainer\">\n                             <img src=\"@/assets/clock.png\" class=\"clockIcon\">\n                                 <label class=\"dueDateLabel\">25 Feb 2024</label>\n                             </div>\n                             <label class=\"cardNameLabel\">{{ element.cardName }}</label>\n                             <div class=\"progressContainer\">\n                                <v-progress-linear\n                                :location=\"false\"\n                                bg-color=\"#92aed9\"\n                                buffer-color=\"#92aed9\"\n                                color=\"#05C597\"\n                                height=\"10\"\n                                max=\"9\"\n                                min=\"0\"\n                                model-value=\"2\"\n                                rounded>\n                             </v-progress-linear>\n                             </div> \n                             <div class=\"viewMemberContainerView\">\n                                <div class=\"boardInfoView\">\n                                    <img src=\"@/assets/eyeViews.png\" class=\"boardIcon\">\n                                    <label for=\"\">4.7k</label>\n                                    <img src=\"@/assets/comments.png\" class=\"boardIcon\">\n                                    <label for=\"\">20</label>\n                                    <img src=\"@/assets/attachment.png\" class=\"boardIcon\">\n                                    <label for=\"\">99</label>\n                                </div>\n                              <div class=\"membersContainer\">\n                                <span class=\"avatar\">\n        <img  src=\"https://picsum.photos/70\">\n    </span>\n  <span class=\"avatar\">\n        <img src=\"https://picsum.photos/80\">\n    </span>\n  <span class=\"avatar\">\n        <img src=\"https://picsum.photos/90\">\n    </span>\n  <span class=\"avatar\">\n       <img src=\"https://picsum.photos/100\">\n    </span>\n    <label for=\"\">+99</label>\n                              </div>\n                             </div>\n                          </div>\n                 </template>\n              </DraggableView>\n                 <!-- <div class=\"listContainer\" v-for=\"(list, index) in this.board.lists\" :key=\"list.id\">\n                    <div class=\"createNewList\" :style=\"{display: list.headerType ==  `creatingList` ? 'flex' : 'none'}\">\n                            <textarea name=\"text\" v-model=\"newListName\" @input=\"dynamicTextArea(index)\" placeholder=\"Create New List\" class=\"createNewListField\" id=\"createNewListField_id\"></textarea>\n                            <button v-if=\"isSavingCard\" class=\"addListBtn buttonload\">\n                               <i class=\"fa fa-circle-o-notch fa-spin\"></i> Creating... \n                            </button>\n                           <button v-else class=\"addListBtn\" @click=\"createANewList(list, index)\">Create List</button>\n                    </div>\n                    <div class=\"listFooterView\" @click=\"handleAddList(list, index)\" :style=\"{display: list.headerType ==  `addList` ? 'flex' : 'none'}\">\n                        <span id=\"addIcon\" class=\"material-symbols-outlined\">add</span>\n                        <div class=\"footerTitleContainer\">\n                            <button class=\"addCardLabel\">New List</button>\n                        </div>\n                     </div>\n                     <div class=\"listHeaderView\" :style=\"{display: list.headerType ==  `showListName` ? 'flex' : 'none'}\">\n                         <div class=\"badgeAndTitleContainer\">\n                            <div class=\"colorBadge\"></div>\n                            <label class=\"listNameLabel\">{{ list.listName }}</label>\n                         </div>\n                         <label class=\"listNameLabel\">•••</label>\n                     </div>\n                     <div class=\"cardAndFooterContainer\">\n                        <div v-if=\"list.cards != null\" class=\"cardContainer\"  v-for=\"card in list.cards\" :key=\"card.id\">\n                          <div class=\"cardCell\" @click=\"handleCardTapped\">\n                             <img v-if=\"card.attachments.count > 0\" src=\"@/assets/cardPhoto.png\" class=\"cardImage\">\n                             <div class=\"dueDateContainer\">\n                             <img src=\"@/assets/clock.png\" class=\"clockIcon\">\n                                 <label class=\"dueDateLabel\">25 Feb 2024</label>\n                             </div>\n                             <label class=\"cardNameLabel\">{{ card.cardName }}</label>\n                             <div class=\"progressContainer\">\n                                <v-progress-linear\n                                :location=\"false\"\n                                bg-color=\"#92aed9\"\n                                buffer-color=\"#92aed9\"\n                                color=\"#05C597\"\n                                height=\"10\"\n                                max=\"9\"\n                                min=\"0\"\n                                model-value=\"2\"\n                                rounded>\n                             </v-progress-linear>\n                             </div> \n                             <div class=\"viewMemberContainerView\">\n                                <div class=\"boardInfoView\">\n                                    <img src=\"@/assets/eyeViews.png\" class=\"boardIcon\">\n                                    <label for=\"\">4.7k</label>\n                                    <img src=\"@/assets/comments.png\" class=\"boardIcon\">\n                                    <label for=\"\">20</label>\n                                    <img src=\"@/assets/attachment.png\" class=\"boardIcon\">\n                                    <label for=\"\">99</label>\n                                </div>\n                              <div class=\"membersContainer\">\n                                <span class=\"avatar\">\n        <img  src=\"https://picsum.photos/70\">\n    </span>\n  <span class=\"avatar\">\n        <img src=\"https://picsum.photos/80\">\n    </span>\n  <span class=\"avatar\">\n        <img src=\"https://picsum.photos/90\">\n    </span>\n  <span class=\"avatar\">\n       <img src=\"https://picsum.photos/100\">\n    </span>\n    <label for=\"\">+99</label>\n                              </div>\n                             </div>\n                          </div>\n                        </div>\n                        <div v-if=\"list.isCreateCard == true\" class=\"createListContainer\">\n                            <textarea name=\"text\" v-model=\"newCardName\" @input=\"autoGrow(index)\" placeholder=\"Give your card a name\" class=\"addListInputField\" :id=\"`newCardField_` + index\"></textarea>\n                            <button v-if=\"isSavingCard\" class=\"addListBtn buttonload\">\n                               <i class=\"fa fa-circle-o-notch fa-spin\"></i> Adding... \n                            </button>\n                           <button v-else class=\"addListBtn\" @click=\"handleCreateCard(list, index)\">Add Card</button>\n                        </div>\n                      <div v-else v-if=\"list.cards != null && list.cards.length > 0 || list.isAddCard == true\" class=\"listFooterView\" @click=\"handleAddCard(list, index)\">\n                        <span id=\"addIcon\" class=\"material-symbols-outlined\">add</span>\n                        <div class=\"footerTitleContainer\">\n                            <button class=\"addCardLabel\">New Card</button>\n                        </div>\n                       </div>\n                      \n                    </div>\n                    \n                 </div> -->\n\n           </div>\n        </div>\n        <v-overlay  v-model=\"isCardTapped\" class=\"align-center justify-center overLayContainer\" contained>\n            <CardDetailView @overlayDismissed=\"handleOverlayDismissed\"/>\n        </v-overlay>\n    </div>\n</template>\n<script>\nimport NavBar from '@/components/NavBarView.vue'\nimport CardDetailView from '@/components/CardDetailView.vue'\nimport DraggableView from 'vuedraggable'\nimport { ref } from 'vue'\n\nimport { BASE_URL } from '@/config'\nimport axios from 'axios';\n\nexport default {\n    props: [\"isExpanded\"],\n    components: {\n        NavBar, CardDetailView, DraggableView\n    }, \n    setup() {\n        var isSideBarExpanded = ref(true)\n        var board = ref([])\n        // var isCreateCard = ref(false)\n        var isCardTapped = ref(false)\n        var newCardName = ref(\"\")\n        var newListName = ref(\"\")\n        var boardId = ref(\"\")\n        return { isSideBarExpanded, board, newCardName, newListName, isCardTapped , boardId}\n    },\n    methods: {\n        handleOverlayDismissed() {\n            this.isCardTapped = false \n        },\n        handleCardTapped() {\n            this.isCardTapped = true \n        },\n      async createANewList(list, index) {\n        // this.board.lists = this.board.lists.filter(listItem => listItem.id != 'listPlaceholder');\n        // this.board.lists[index] = { id: \"newList\", listName: this.newListName, headerType: \"showListName\", isAddCard: true, isCreateList: false, cards: [] }\n        // this.board.lists.push(\n        //    { id: \"listPlaceholder\", listName: \"New List\", headerType: \"addList\", isAddCard: false, isCreateList: false, cards: []}\n        // )\n        // Create List\n        var params = {\n          listName: this.newListName,\n          boardId: this.boardId,\n          isAddCard: true, \n          isCreateList: false,\n          headerType: \"showListName\",\n          id: Date.now(), \n          owner: \"1721545684258\"\n        }\n        var fullURL = BASE_URL + \"board/newList\"\n        console.log(\"full url: \", fullURL, \"params: \", params)\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            console.log(\"resp data: \", data)\n            if (data.statusCode == 200) {\n                console.log(\"created new list: \", data.resp)\n                this.getBoardBy(this.boardId)\n              }\n             }\n          })\n          this.newListName = \"\"\n        },\n        handleAddList(list, index) {\n            list.isCreateList = true \n            list.headerType = \"creatingList\"\n            this.board.lists[index] = list\n        },\n        dynamicTextArea(index) {\n            let element = document.getElementById(\"createNewListField_id\")\n            element.style.height = \"15px\";\n            element.style.height = (element.scrollHeight) + \"px\";\n        },\n        autoGrow(index) {\n            let element = document.getElementById(`newCardField_` + index)\n            element.style.height = \"15px\";\n            element.style.height = (element.scrollHeight) + \"px\";\n        },\n       async handleCreateCard(list, index) {\n            // if (list.id == \"listPlaceholder\") {\n            //     list.cards = [\n            //       {id: \"cardOne\", cardName: this.newCardName, subTitle: \"Meet up to discuss early stage of the design\", description: String, imgURL: \"google.com\", progress: 0, isAddCard: false, isCreateList: false, attachments: [File]}, \n            //     ]\n            //    this.board.lists.push(\n            //     { id: \"listPlaceholder\", listName: \"Add New List\", isAddCard: false, isCreateList: false, cards: []}\n            //    )\n            // } else {\n            //     list.cards.push(\n            //     {id: \"cardOne\", cardName: this.newCardName, subTitle: \"Meet up to discuss early stage of the design\", description: String, imgURL: \"\",isAddCard: false, isCreateList: false, progress: 0, attachments: [File]}, \n            // )\n            // }\n           \n            // list.isCreateCard = false \n            // this.board[index] = list\n        var params = {\n          cardName: this.newCardName,\n          boardId: this.boardId,\n          listId: list.id,\n          id: Date.now(), \n          owner: \"1721545684258\"\n        }\n        var fullURL = BASE_URL + \"board/newCard\"\n        console.log(\"full url: \", fullURL, \"params: \", params)\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            console.log(\"card resp data: \", data)\n            if (data.statusCode == 200) {\n                console.log(\"created new card: \", data.resp)\n                this.getBoardBy(this.boardId)\n              }\n             }\n          })\n          this.newCardName = \"\"\n        },\n        handleAddCard(list, index) {\n            list.isCreateCard = true \n            this.board[index] = list\n        }, \n     async getBoardBy(boardId) {\n        var params = {\n            boardId: boardId\n        }\n        var fullURL = BASE_URL + \"board/byId\"\n        console.log(\"full url: \", fullURL, \"params: \", params)\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            console.log(\"resp data: \", data)\n            if (data.statusCode == 200) {\n                let apiBoard = data.resp\n                console.log(\"board info: \", apiBoard, \"list length: \", \"lists: \", apiBoard.lists)\n                apiBoard.lists.push({ id: \"listPlaceholder\", listName: \"Add New List\", headerType: \"addList\", footerType: \"add\", isAddCard: false, isCreateList: false, cards: []})\n                apiBoard.lists.sort((a,b)=>new Date(a.createdAt) - new Date(b.createdAt))\n                this.board = apiBoard\n              }\n             }\n          })\n        }\n    },\n    watch: { \n        isExpanded: function(newVal, oldVal) {\n            console.log('Prop changed isSideBarExpanwded: ', newVal)\n            this.isSideBarExpanded = newVal\n        }\n    },  \n    mounted() {\n        let routeParams = this.$route.params\n        let boardId = routeParams.id\n        this.boardId = boardId\n        console.log(\"params id: \", boardId)\n        this.getBoardBy(boardId)\n\n    //     this.board = { id: \"board1\", lists: [\n    //         { id: \"listTwo\", listName: \"TASK\", headerType: \"showListName\", cards: [\n    //             {id: \"cardOne\", cardName: \"[FGE TEAM] Upcoming Tasks and Bugs (Week 28, July 8 - July 12, 2024)\", description: \"\", imgURL: \"google.com\", isAddCard: false, isCreateList: false, progress: 0, attachments: [File]}, \n    //         ]\n    //        },  \n    //        { id: \"listPlaceholder\", listName: \"Add New List\", headerType: \"addList\", footerType: \"add\", isAddCard: false, isCreateList: false, cards: []}\n    //      ] \n    //    }\n    }\n}\n</script>\n<style scoped>\n.avatar img {\n  border-radius: 50%;\n  position: relative;\n  margin-left: -12px;\n  z-index: 1;\n  height: 18px;\n  width: 18px;\n  padding: 1px;\n  background-color: white;\n  margin-top: 4px;\n}\n\n.membersContainer {\n    display: flex;\n    width: 90px;\n    height: 80px;\n    float: right;\n    padding-right: 10px;\n    direction: ltr;  /* This is to get the stack with left on top */\n    padding-left: 20px;\n}\n\n.membersContainer label {\n    display: block;\n    font-weight: 500;\n    font-size: 10px;\n    margin-left: 4px;\n    margin-top: 6px;\n}\n\n.boardInfoView label {\n    font-weight: 500;\n    font-size: 10px;\n    margin-right: 8px;\n    margin-left: 1px;\n}\n.boardIcon {\n    width: 15px;\n    height: 15px;\n}\n.boardInfoView {\n    display: flex;\n    width: 120px;\n    height: 50px;\n    justify-content: space-evenly;\n    margin-top: 5px;\n}\n.viewMemberContainerView {\n    display: flex;\n    height: 38px;\n    width: 100%;\n    background-color: white;\n    border-radius: var(--border-radius-1);\n    /* border-bottom-right-radius: var(--border-radius-1);\n    border-bottom-left-radius: var(--border-radius-1); */\n    margin-left: 8px;\n    justify-content: space-between;\n}\n.progressContainer {\n    width: 90%;\n    height: 34px;\n    margin-left: 10px;\n    margin-top: 10px;\n}\n.cardNameLabel {\n    width: 200px;\n    margin-top: 8px;\n    margin-left: 10px;\n    margin-right: 10px;\n    font-weight: 700;\n    font-size: 13px;\n    text-align: left;\n    white-space: pre-wrap;\n}\n\n.clockIcon {\n    width: 14px;\n    height: 14px;\n}\n.dueDateLabel {\n    color: white;\n    font-weight: 400;\n    font-size: 14px;\n    margin-left: 4px;\n}\n.dueDateContainer {\n    width: 124px;\n    height: 30px;\n    margin-top: 8px;\n    margin-left: 8px;\n    border-radius: var(--border-radius-1);\n    background-color: #FC6363;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.cardImage {\n    width: 100%;\n    height: 150px;\n    object-fit: fill;\n}\n.footerTitleContainer {\n    width: auto;\n    height: 24px;\n    margin-top: 12px;\n    overflow: hidden;\n}\n#addIcon {\n    padding: 0;\n    margin: 0;\n    margin-top: 12px;\n    font-weight: 700;\n}\n\n.addCardLabel {\n    margin: 0;\n    padding: 0;\n    font-weight: 600;\n    font-size: 15px;\n    margin-left: 4px;\n}\n.cardAndFooterContainer {\n    height: 100%;\n    width: 100%;\n    overflow-y: scroll;\n    -webkit-overflow-scrolling: touch;\n    padding-bottom: 50px;\n    -ms-overflow-style: none;  /* Internet Explorer 10+ */\n    scrollbar-width: none;  /* Firefox */\n    padding-top: 8px;\n}\n.listFooterView {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    height: 50px;\n    width: 100%;\n    border-radius: var(--border-radius-1);\n    border: 1px solid var(--color-light);\n    z-index: 9999;\n    overflow: hidden;\n    background-color: white;\n    /* margin-top: -8px; */\n}\n\n.addListBtn {\n    display: block;\n    width: 100px;\n    height: 34px;\n    background-color: #FC6363;\n    color: white;\n    border-radius: var(--border-radius-1);\n    margin-left: 8px;\n    font-size: 14px;\n    font-weight: 600;\n    margin-top: 10px;\n    margin-bottom: 10px;\n}\n.addListInputField, .createNewListField {\n  padding: 8px;\n  width: 200px;\n  margin-left: 8px;\n  margin-right: 8px;\n  border: 1px solid var(--color-light);\n  border-radius: var(--border-radius-1);\n  text-align: left;\n  resize: none;\n  overflow: hidden;\n  height: 40px;\n  max-height: 500px;\n  max-lines: 200;\n  font-weight: 500;\n  font-size: 14px;\n}\n\n.createListContainer {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    /* height: 140px; */\n    width: 98%;\n    padding-top: 10px;\n    z-index: 9999;\n    overflow: hidden;\n    background-color: white;\n    align-items: center;\n    margin-top: 10px;\n    margin-right: auto;\n    margin-left: auto;\n    border-radius: var(--border-radius-1)\n}\n\n.createNewList {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    /* height: 140px; */\n    width: 98%;\n    padding-top: 10px;\n    z-index: 9999;\n    overflow: hidden;\n    background-color: white;\n    align-items: center;\n    margin-right: auto;\n    margin-left: auto;\n    border-radius: var(--border-radius-1)\n}\n\n\n.cardCell {\n    overflow: hidden;\n    width: 220px;\n    min-height: 50px;\n    margin-bottom: 10px;\n    border: 1px solid var(--color-light);\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    border-radius: var(--border-radius-1);\n    /* border-bottom-right-radius: var(--border-radius-2);\n    border-bottom-left-radius: var(--border-radius-2); */\n}\n\n.badgeAndTitleContainer {\n    display: flex;\n    flex-direction: row;\n}\n\n.badgeAndTitleContainer label {\n    margin-left: 10px;\n}\n\n.listNameLabel {\n    height: 24px;\n    font-weight: 600;\n    font-size: 15px;\n    margin-top: auto;\n    margin-bottom: auto;\n}\n.colorBadge {\n    width: 28px;\n    height: 28px;\n    background-color: orange;\n    border-radius: var(--border-radius-1);\n    margin-top: auto;\n    margin-bottom: auto;\n    margin-left: 15px;\n}\n\n.listHeaderView {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    height: 50px;\n    width: 100%;\n    border-radius:  var(--border-radius-1);;\n    /* border-top-right-radius: var(--border-radius-2);\n    border-top-left-radius: var(--border-radius-2); */\n    border: 1px solid var(--color-light);\n    padding-right: 15px;\n    background-color: white;\n}\n\n\n.boardListsContainer {\n    width: 100%;\n    height: calc(100vh - 160px);\n    white-space: nowrap;\n    overflow-x: auto;\n    overflow-y: hidden;\n    -webkit-overflow-scrolling: touch;\n    padding-right: 20px;\n}\n\n.listContainer {\n    width: 220px;\n    /* background-color: #eee; */\n    float: none;\n    height: 100%;\n    margin: 0 0.50%;\n    display: inline-block;\n    zoom: 1;\n    /* overflow: hidden; */\n    /* overflow-y: scroll; */\n    overflow: hidden;\n}\n\n.mainBoardConentView {\n    width: calc(100% - 10px);\n    height: calc(100% - 130px);\n    margin-left: auto;\n    margin-right: auto;\n    padding-top: 20px;\n}\n\n.boardBNavBar {\n    width: calc(100% - 30px);\n    height: 50px;\n    background-color: white;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 15px;\n    border-radius: var(--border-radius-1);\n}\n    \n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}