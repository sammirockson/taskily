{"ast":null,"code":"import axios from \"axios\";\nimport { BASE_URL } from '@/config';\nimport _ from 'lodash';\nclass APIService {\n  init() {\n    console.log(\"APIService has been initiated\");\n  }\n  async saveDesc(cardDesc, card_id) {\n    var params = {\n      card_id: card_id,\n      cardDesc: cardDesc\n    };\n    this.baseRequest(\"board/addDueDescriptionToCard\", params);\n  }\n  async login(params) {\n    let path = \"auth/login\";\n    return await this.baseRequest(path, params);\n  }\n  async getInvitationInfo(params) {\n    let path = \"board/getInviteInfo\";\n    let baseResp = await this.baseRequest(path, params);\n    console.log(\"baseResp: \", baseResp);\n    return baseResp;\n  }\n  async baseRequest(path, params) {\n    let header = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n    let options = {\n      method: 'POST',\n      headers: header,\n      params\n    };\n    let fullURL = BASE_URL + path;\n    if (_.get(options.headers, 'Content-Type', false) === 'application/json' && _.get(options, 'body', false) && _.isObject(options.body)) {\n      options.body = JSON.stringify(options.body);\n    }\n    const response = await fetch(fullURL, options);\n    return await response.json();\n  }\n\n  // async baseRequest(path, params) {\n  //     let fullURL = BASE_URL + path\n  // let options = {method: 'POST', params}\n  //     const response = await fetch(fullURL, options)\n  //     return await response.json()\n\n  // let fullURL = BASE_URL + path\n  // await axios.post(fullURL, params)\n  // .then(async function (response) {\n  //     console.log(response);\n  //     // return response.data.resp\n  //     return await response.data.resp\n  //   })\n  //   .catch(function (error) {\n  //     console.log(error);\n  //  });\n\n  // .then((response) => {\n  //     if (response.data != null) {\n  //         let data = response.data\n  //         console.log(\"Base request response: \", data)\n  //         if (data.statusCode == 200) {\n  //             let resp = data.resp\n  //             console.log(\"Base request resp: \", resp)\n  //             return resp\n  //         } else { \n  //             return \"\" \n  //         }\n  //     }\n  // })\n  // }\n}\nexport default new APIService();","map":{"version":3,"names":["axios","BASE_URL","_","APIService","init","console","log","saveDesc","cardDesc","card_id","params","baseRequest","login","path","getInvitationInfo","baseResp","header","options","method","headers","fullURL","get","isObject","body","JSON","stringify","response","fetch","json"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/APIService.js"],"sourcesContent":["import axios from \"axios\";\nimport { BASE_URL } from '@/config'\nimport _ from 'lodash'\n\n\nclass APIService {\n\n    init() {\n        console.log(\"APIService has been initiated\")\n    }\n\n   async saveDesc(cardDesc, card_id) {\n        var params = {\n            card_id: card_id,\n            cardDesc: cardDesc\n        }\n       this.baseRequest(\"board/addDueDescriptionToCard\", params)\n    }\n\n    async login(params) {\n       let path = \"auth/login\"\n       return await this.baseRequest(path, params)\n    }\n\n    async getInvitationInfo(params) {\n        let path = \"board/getInviteInfo\"\n        let baseResp = await this.baseRequest(path, params)\n        console.log(\"baseResp: \", baseResp)\n        return baseResp\n    }\n\n\n    async baseRequest(path, params) {\n        let header = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        let options = { \n            method: 'POST',\n            headers: header,\n            params\n        }\n        let fullURL = BASE_URL + path\n        if (_.get(options.headers, 'Content-Type', false) === 'application/json' && _.get(options, 'body', false) && _.isObject(options.body)) {\n          options.body = JSON.stringify(options.body)\n        }\n        const response = await fetch(fullURL, options)\n        return await response.json()\n      }\n\n    // async baseRequest(path, params) {\n    //     let fullURL = BASE_URL + path\n        // let options = {method: 'POST', params}\n    //     const response = await fetch(fullURL, options)\n    //     return await response.json()\n\n        // let fullURL = BASE_URL + path\n        // await axios.post(fullURL, params)\n        // .then(async function (response) {\n        //     console.log(response);\n        //     // return response.data.resp\n        //     return await response.data.resp\n        //   })\n        //   .catch(function (error) {\n        //     console.log(error);\n        //  });\n        \n        // .then((response) => {\n        //     if (response.data != null) {\n        //         let data = response.data\n        //         console.log(\"Base request response: \", data)\n        //         if (data.statusCode == 200) {\n        //             let resp = data.resp\n        //             console.log(\"Base request resp: \", resp)\n        //             return resp\n        //         } else { \n        //             return \"\" \n        //         }\n        //     }\n        // })\n    // }\n}\n\n\n\n\n\n\nexport default new APIService()\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,UAAU;AACnC,OAAOC,CAAC,MAAM,QAAQ;AAGtB,MAAMC,UAAU,CAAC;EAEbC,IAAIA,CAAA,EAAG;IACHC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAChD;EAED,MAAMC,QAAQA,CAACC,QAAQ,EAAEC,OAAO,EAAE;IAC7B,IAAIC,MAAM,GAAG;MACTD,OAAO,EAAEA,OAAO;MAChBD,QAAQ,EAAEA;IACd,CAAC;IACF,IAAI,CAACG,WAAW,CAAC,+BAA+B,EAAED,MAAM,CAAC;EAC5D;EAEA,MAAME,KAAKA,CAACF,MAAM,EAAE;IACjB,IAAIG,IAAI,GAAG,YAAY;IACvB,OAAO,MAAM,IAAI,CAACF,WAAW,CAACE,IAAI,EAAEH,MAAM,CAAC;EAC9C;EAEA,MAAMI,iBAAiBA,CAACJ,MAAM,EAAE;IAC5B,IAAIG,IAAI,GAAG,qBAAqB;IAChC,IAAIE,QAAQ,GAAG,MAAM,IAAI,CAACJ,WAAW,CAACE,IAAI,EAAEH,MAAM,CAAC;IACnDL,OAAO,CAACC,GAAG,CAAC,YAAY,EAAES,QAAQ,CAAC;IACnC,OAAOA,QAAQ;EACnB;EAGA,MAAMJ,WAAWA,CAACE,IAAI,EAAEH,MAAM,EAAE;IAC5B,IAAIM,MAAM,GAAG;MACT,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACH,IAAIC,OAAO,GAAG;MACVC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAEH,MAAM;MACfN;IACJ,CAAC;IACD,IAAIU,OAAO,GAAGnB,QAAQ,GAAGY,IAAI;IAC7B,IAAIX,CAAC,CAACmB,GAAG,CAACJ,OAAO,CAACE,OAAO,EAAE,cAAc,EAAE,KAAK,CAAC,KAAK,kBAAkB,IAAIjB,CAAC,CAACmB,GAAG,CAACJ,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,IAAIf,CAAC,CAACoB,QAAQ,CAACL,OAAO,CAACM,IAAI,CAAC,EAAE;MACrIN,OAAO,CAACM,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACR,OAAO,CAACM,IAAI,CAAC;IAC7C;IACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACP,OAAO,EAAEH,OAAO,CAAC;IAC9C,OAAO,MAAMS,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B;;EAEF;EACA;EACI;EACJ;EACA;;EAEI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACJ;AACJ;AAOA,eAAe,IAAIzB,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}