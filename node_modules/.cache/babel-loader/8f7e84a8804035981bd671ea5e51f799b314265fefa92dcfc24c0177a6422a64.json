{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from '@/components/NavBarView.vue';\nimport CardDetailView from '@/components/CardDetailView.vue';\nimport { ref } from 'vue';\nimport { BASE_URL } from '@/config';\nimport axios from 'axios';\nexport default {\n  props: [\"isExpanded\"],\n  components: {\n    NavBar,\n    CardDetailView\n  },\n  setup() {\n    var isSideBarExpanded = ref(true);\n    var board = ref([]);\n    // var isCreateCard = ref(false)\n    var isCardTapped = ref(false);\n    var newCardName = ref(\"\");\n    var newListName = ref(\"\");\n    var boardId = ref(\"\");\n    return {\n      isSideBarExpanded,\n      board,\n      newCardName,\n      newListName,\n      isCardTapped,\n      boardId\n    };\n  },\n  methods: {\n    handleCardTapped() {\n      this.isCardTapped = true;\n    },\n    async createANewList(list, index) {\n      // this.board.lists = this.board.lists.filter(listItem => listItem.id != 'listPlaceholder');\n      // this.board.lists[index] = { id: \"newList\", listName: this.newListName, headerType: \"showListName\", isAddCard: true, isCreateList: false, cards: [] }\n      // this.board.lists.push(\n      //    { id: \"listPlaceholder\", listName: \"New List\", headerType: \"addList\", isAddCard: false, isCreateList: false, cards: []}\n      // )\n      // Create List\n      var params = {\n        listName: this.newListName,\n        boardId: this.boardId,\n        headerType: \"showListName\",\n        id: Date.now(),\n        owner: \"1721545684258\"\n      };\n      var fullURL = BASE_URL + \"board/newList\";\n      console.log(\"full url: \", fullURL, \"params: \", params);\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"resp data: \", data);\n          if (data.statusCode == 200) {\n            console.log(\"created new list: \", data.resp);\n            this.getBoardBy(this.boardId);\n          }\n        }\n      });\n      this.newListName = \"\";\n    },\n    handleAddList(list, index) {\n      list.isCreateList = true;\n      list.headerType = \"creatingList\";\n      this.board.lists[index] = list;\n    },\n    dynamicTextArea(index) {\n      let element = document.getElementById(\"createNewListField_id\");\n      element.style.height = \"15px\";\n      element.style.height = element.scrollHeight + \"px\";\n    },\n    autoGrow(index) {\n      let element = document.getElementById(`newCardField_` + index);\n      element.style.height = \"15px\";\n      element.style.height = element.scrollHeight + \"px\";\n    },\n    handleCreateList(list, index) {\n      if (list.id == \"listPlaceholder\") {\n        list.cards = [{\n          id: \"cardOne\",\n          cardName: this.newCardName,\n          subTitle: \"Meet up to discuss early stage of the design\",\n          description: String,\n          imgURL: \"google.com\",\n          progress: 0,\n          isAddCard: false,\n          isCreateList: false,\n          attachments: [File]\n        }];\n        this.board.lists.push({\n          id: \"listPlaceholder\",\n          listName: \"Add New List\",\n          isAddCard: false,\n          isCreateList: false,\n          cards: []\n        });\n      } else {\n        list.cards.push({\n          id: \"cardOne\",\n          cardName: this.newCardName,\n          subTitle: \"Meet up to discuss early stage of the design\",\n          description: String,\n          imgURL: \"\",\n          isAddCard: false,\n          isCreateList: false,\n          progress: 0,\n          attachments: [File]\n        });\n      }\n      list.isCreateCard = false;\n      this.board[index] = list;\n      this.newCardName = \"\";\n    },\n    handleAddCard(list, index) {\n      list.isCreateCard = true;\n      this.board[index] = list;\n    },\n    async getBoardBy(boardId) {\n      var params = {\n        boardId: boardId\n      };\n      var fullURL = BASE_URL + \"board/byId\";\n      console.log(\"full url: \", fullURL, \"params: \", params);\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"resp data: \", data);\n          if (data.statusCode == 200) {\n            let apiBoard = data.resp;\n            console.log(\"board info: \", apiBoard, \"list length: \", \"lists: \", apiBoard.lists);\n            apiBoard.lists.push({\n              id: \"listPlaceholder\",\n              listName: \"Add New List\",\n              headerType: \"addList\",\n              footerType: \"add\",\n              isAddCard: false,\n              isCreateList: false,\n              cards: []\n            });\n            apiBoard.lists.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));\n            this.board = apiBoard;\n          }\n        }\n      });\n    }\n  },\n  watch: {\n    isExpanded: function (newVal, oldVal) {\n      console.log('Prop changed isSideBarExpanwded: ', newVal);\n      this.isSideBarExpanded = newVal;\n    }\n  },\n  mounted() {\n    let routeParams = this.$route.params;\n    let boardId = routeParams.id;\n    this.boardId = boardId;\n    console.log(\"params id: \", boardId);\n    this.getBoardBy(boardId);\n\n    //     this.board = { id: \"board1\", lists: [\n    //         { id: \"listTwo\", listName: \"TASK\", headerType: \"showListName\", cards: [\n    //             {id: \"cardOne\", cardName: \"[FGE TEAM] Upcoming Tasks and Bugs (Week 28, July 8 - July 12, 2024)\", description: \"\", imgURL: \"google.com\", isAddCard: false, isCreateList: false, progress: 0, attachments: [File]}, \n    //         ]\n    //        },  \n    //        { id: \"listPlaceholder\", listName: \"Add New List\", headerType: \"addList\", footerType: \"add\", isAddCard: false, isCreateList: false, cards: []}\n    //      ] \n    //    }\n  }\n};","map":{"version":3,"names":["NavBar","CardDetailView","ref","BASE_URL","axios","props","components","setup","isSideBarExpanded","board","isCardTapped","newCardName","newListName","boardId","methods","handleCardTapped","createANewList","list","index","params","listName","headerType","id","Date","now","owner","fullURL","console","log","post","then","response","data","statusCode","resp","getBoardBy","handleAddList","isCreateList","lists","dynamicTextArea","element","document","getElementById","style","height","scrollHeight","autoGrow","handleCreateList","cards","cardName","subTitle","description","String","imgURL","progress","isAddCard","attachments","File","push","isCreateCard","handleAddCard","apiBoard","footerType","sort","a","b","createdAt","watch","isExpanded","newVal","oldVal","mounted","routeParams","$route"],"sources":["/Users/samuelrockon/Desktop/Dev/taskily/src/components/BoardContentView.vue"],"sourcesContent":["<template>\n    <div>\n        <NavBar :isExpanded=\"this.isSideBarExpanded\"/>\n        <div class=\"boardBNavBar\">\n\n        </div>\n        <div class=\"mainBoardConentView\">\n            <div class=\"boardListsContainer\">\n                 <div class=\"listContainer\" v-for=\"(list, index) in this.board.lists\" :key=\"list.id\">\n                    <div class=\"createNewList\" :style=\"{display: list.headerType ==  `creatingList` ? 'flex' : 'none'}\">\n                            <textarea name=\"text\" v-model=\"newListName\" @input=\"dynamicTextArea(index)\" placeholder=\"Create New List\" class=\"createNewListField\" id=\"createNewListField_id\"></textarea>\n                            <button v-if=\"isSavingCard\" class=\"addListBtn buttonload\">\n                               <i class=\"fa fa-circle-o-notch fa-spin\"></i> Creating... \n                            </button>\n                           <button v-else class=\"addListBtn\" @click=\"createANewList(list, index)\">Create List</button>\n                    </div>\n                    <div class=\"listFooterView\" @click=\"handleAddList(list, index)\" :style=\"{display: list.headerType ==  `addList` ? 'flex' : 'none'}\">\n                        <span id=\"addIcon\" class=\"material-symbols-outlined\">add</span>\n                        <div class=\"footerTitleContainer\">\n                            <button class=\"addCardLabel\">New List</button>\n                        </div>\n                     </div>\n                     <div class=\"listHeaderView\" :style=\"{display: list.headerType ==  `showListName` ? 'flex' : 'none'}\">\n                         <div class=\"badgeAndTitleContainer\">\n                            <div class=\"colorBadge\"></div>\n                            <label class=\"listNameLabel\">{{ list.listName }}</label>\n                         </div>\n                         <label class=\"listNameLabel\">•••</label>\n                     </div>\n                     <div class=\"cardAndFooterContainer\">\n                        <div class=\"cardContainer\"  v-for=\"card in list.cards\" :key=\"card.id\">\n                          <div class=\"cardCell\" @click=\"handleCardTapped\">\n                             <img v-if=\"card.imgURL.length > 0\" src=\"@/assets/cardPhoto.png\" class=\"cardImage\">\n                             <div class=\"dueDateContainer\">\n                             <img src=\"@/assets/clock.png\" class=\"clockIcon\">\n                                 <label class=\"dueDateLabel\">25 Feb 2024</label>\n                             </div>\n                             <label class=\"cardNameLabel\">{{ card.cardName }}</label>\n                             <div class=\"progressContainer\">\n                                <v-progress-linear\n                                :location=\"false\"\n                                bg-color=\"#92aed9\"\n                                buffer-color=\"#92aed9\"\n                                color=\"#05C597\"\n                                height=\"10\"\n                                max=\"9\"\n                                min=\"0\"\n                                model-value=\"2\"\n                                rounded>\n                             </v-progress-linear>\n                             </div> \n                             <div class=\"viewMemberContainerView\">\n                                <div class=\"boardInfoView\">\n                                    <img src=\"@/assets/eyeViews.png\" class=\"boardIcon\">\n                                    <label for=\"\">4.7k</label>\n                                    <img src=\"@/assets/comments.png\" class=\"boardIcon\">\n                                    <label for=\"\">20</label>\n                                    <img src=\"@/assets/attachment.png\" class=\"boardIcon\">\n                                    <label for=\"\">99</label>\n                                </div>\n                              <div class=\"membersContainer\">\n                                <span class=\"avatar\">\n        <img  src=\"https://picsum.photos/70\">\n    </span>\n  <span class=\"avatar\">\n        <img src=\"https://picsum.photos/80\">\n    </span>\n  <span class=\"avatar\">\n        <img src=\"https://picsum.photos/90\">\n    </span>\n  <span class=\"avatar\">\n       <img src=\"https://picsum.photos/100\">\n    </span>\n    <label for=\"\">+99</label>\n                              </div>\n                             </div>\n                          </div>\n                        </div>\n                        <div v-if=\"list.isCreateCard == true\" class=\"createListContainer\">\n                            <textarea name=\"text\" v-model=\"newCardName\" @input=\"autoGrow(index)\" placeholder=\"Give your card a name\" class=\"addListInputField\" :id=\"`newCardField_` + index\"></textarea>\n                            <button v-if=\"isSavingCard\" class=\"addListBtn buttonload\">\n                               <i class=\"fa fa-circle-o-notch fa-spin\"></i> Adding... \n                            </button>\n                           <button v-else class=\"addListBtn\" @click=\"handleCreateList(list, index)\">Add Card</button>\n                        </div>\n                      <div v-else v-if=\"list.cards.length > 0 || list.isAddCard == true\" class=\"listFooterView\" @click=\"handleAddCard(list, index)\">\n                        <span id=\"addIcon\" class=\"material-symbols-outlined\">add</span>\n                        <div class=\"footerTitleContainer\">\n                            <button class=\"addCardLabel\">New Card</button>\n                        </div>\n                       </div>\n                      \n                    </div>\n                    \n                 </div>\n           </div>\n        </div>\n        <v-overlay  v-model=\"isCardTapped\" class=\"align-center justify-center\" contained>\n            <CardDetailView @newCardCreated=\"handleCreateList(list, board, index)\" :list=\"this.currentList\" :board=\"this.board\" :index=\"this.currentIndex\"/>\n        </v-overlay>\n    </div>\n</template>\n<script>\nimport NavBar from '@/components/NavBarView.vue'\nimport CardDetailView from '@/components/CardDetailView.vue'\nimport { ref } from 'vue'\n\nimport { BASE_URL } from '@/config'\nimport axios from 'axios';\n\nexport default {\n    props: [\"isExpanded\"],\n    components: {\n        NavBar, CardDetailView\n    }, \n    setup() {\n        var isSideBarExpanded = ref(true)\n        var board = ref([])\n        // var isCreateCard = ref(false)\n        var isCardTapped = ref(false)\n        var newCardName = ref(\"\")\n        var newListName = ref(\"\")\n        var boardId = ref(\"\")\n        return { isSideBarExpanded, board, newCardName, newListName, isCardTapped , boardId}\n    },\n    methods: {\n        handleCardTapped() {\n            this.isCardTapped = true \n        },\n      async createANewList(list, index) {\n        // this.board.lists = this.board.lists.filter(listItem => listItem.id != 'listPlaceholder');\n        // this.board.lists[index] = { id: \"newList\", listName: this.newListName, headerType: \"showListName\", isAddCard: true, isCreateList: false, cards: [] }\n        // this.board.lists.push(\n        //    { id: \"listPlaceholder\", listName: \"New List\", headerType: \"addList\", isAddCard: false, isCreateList: false, cards: []}\n        // )\n        // Create List\n        var params = {\n          listName: this.newListName,\n          boardId: this.boardId,\n          headerType: \"showListName\",\n          id: Date.now(), \n          owner: \"1721545684258\"\n        }\n        var fullURL = BASE_URL + \"board/newList\"\n        console.log(\"full url: \", fullURL, \"params: \", params)\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            console.log(\"resp data: \", data)\n            if (data.statusCode == 200) {\n                console.log(\"created new list: \", data.resp)\n                this.getBoardBy(this.boardId)\n              }\n             }\n          })\n       \n\n\n            this.newListName = \"\"\n        },\n        handleAddList(list, index) {\n            list.isCreateList = true \n            list.headerType = \"creatingList\"\n            this.board.lists[index] = list\n        },\n        dynamicTextArea(index) {\n            let element = document.getElementById(\"createNewListField_id\")\n            element.style.height = \"15px\";\n            element.style.height = (element.scrollHeight) + \"px\";\n        },\n        autoGrow(index) {\n            let element = document.getElementById(`newCardField_` + index)\n            element.style.height = \"15px\";\n            element.style.height = (element.scrollHeight) + \"px\";\n        },\n        handleCreateList(list, index) {\n            if (list.id == \"listPlaceholder\") {\n                list.cards = [\n                  {id: \"cardOne\", cardName: this.newCardName, subTitle: \"Meet up to discuss early stage of the design\", description: String, imgURL: \"google.com\", progress: 0, isAddCard: false, isCreateList: false, attachments: [File]}, \n                ]\n               this.board.lists.push(\n                { id: \"listPlaceholder\", listName: \"Add New List\", isAddCard: false, isCreateList: false, cards: []}\n               )\n            } else {\n                list.cards.push(\n                {id: \"cardOne\", cardName: this.newCardName, subTitle: \"Meet up to discuss early stage of the design\", description: String, imgURL: \"\",isAddCard: false, isCreateList: false, progress: 0, attachments: [File]}, \n            )\n            }\n           \n            list.isCreateCard = false \n            this.board[index] = list\n            this.newCardName = \"\"\n        },\n        handleAddCard(list, index) {\n            list.isCreateCard = true \n            this.board[index] = list\n        }, \n     async getBoardBy(boardId) {\n        var params = {\n            boardId: boardId\n        }\n        var fullURL = BASE_URL + \"board/byId\"\n        console.log(\"full url: \", fullURL, \"params: \", params)\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            console.log(\"resp data: \", data)\n            if (data.statusCode == 200) {\n                let apiBoard = data.resp\n                console.log(\"board info: \", apiBoard, \"list length: \", \"lists: \", apiBoard.lists)\n                apiBoard.lists.push({ id: \"listPlaceholder\", listName: \"Add New List\", headerType: \"addList\", footerType: \"add\", isAddCard: false, isCreateList: false, cards: []})\n                apiBoard.lists.sort((a,b)=>new Date(a.createdAt) - new Date(b.createdAt))\n                this.board = apiBoard\n              }\n             }\n          })\n        }\n    },\n    watch: { \n        isExpanded: function(newVal, oldVal) {\n            console.log('Prop changed isSideBarExpanwded: ', newVal)\n            this.isSideBarExpanded = newVal\n        }\n    },  \n    mounted() {\n        let routeParams = this.$route.params\n        let boardId = routeParams.id\n        this.boardId = boardId\n        console.log(\"params id: \", boardId)\n        this.getBoardBy(boardId)\n\n    //     this.board = { id: \"board1\", lists: [\n    //         { id: \"listTwo\", listName: \"TASK\", headerType: \"showListName\", cards: [\n    //             {id: \"cardOne\", cardName: \"[FGE TEAM] Upcoming Tasks and Bugs (Week 28, July 8 - July 12, 2024)\", description: \"\", imgURL: \"google.com\", isAddCard: false, isCreateList: false, progress: 0, attachments: [File]}, \n    //         ]\n    //        },  \n    //        { id: \"listPlaceholder\", listName: \"Add New List\", headerType: \"addList\", footerType: \"add\", isAddCard: false, isCreateList: false, cards: []}\n    //      ] \n    //    }\n    }\n}\n</script>\n<style scoped>\n.avatar img {\n  border-radius: 50%;\n  position: relative;\n  margin-left: -12px;\n  z-index: 1;\n  height: 22px;\n  width: 22px;\n  padding: 1px;\n  background-color: white;\n}\n\n.membersContainer {\n    display: flex;\n    width: 120px;\n    height: 100px;\n    float: right;\n    padding-right: 10px;\n    direction: ltr;  /* This is to get the stack with left on top */\n    padding-left: 20px;\n}\n\n.membersContainer label {\n    display: block;\n    font-weight: 500;\n    font-size: 10px;\n    margin-left: 4px;\n    margin-top: 4px;\n}\n\n.boardInfoView label {\n    font-weight: 500;\n    font-size: 10px;\n    margin-right: 8px;\n    margin-left: 1px;\n}\n.boardIcon {\n    width: 15px;\n    height: 15px;\n}\n.boardInfoView {\n    display: flex;\n    width: 120px;\n    height: 50px;\n    justify-content: space-evenly;\n    margin-top: 5px;\n}\n.viewMemberContainerView {\n    display: flex;\n    height: 38px;\n    width: 100%;\n    background-color: white;\n    border-radius: var(--border-radius-1);\n    /* border-bottom-right-radius: var(--border-radius-1);\n    border-bottom-left-radius: var(--border-radius-1); */\n    margin-left: 8px;\n    justify-content: space-between;\n}\n.progressContainer {\n    width: 90%;\n    height: 34px;\n    margin-left: 10px;\n    margin-top: 10px;\n}\n.cardNameLabel {\n    width: 200px;\n    margin-top: 8px;\n    margin-left: 10px;\n    margin-right: 10px;\n    font-weight: 700;\n    font-size: 13px;\n    text-align: left;\n    white-space: pre-wrap;\n}\n\n.clockIcon {\n    width: 14px;\n    height: 14px;\n}\n.dueDateLabel {\n    color: white;\n    font-weight: 400;\n    font-size: 14px;\n    margin-left: 4px;\n}\n.dueDateContainer {\n    width: 124px;\n    height: 30px;\n    margin-top: 8px;\n    margin-left: 8px;\n    border-radius: var(--border-radius-1);\n    background-color: #FC6363;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.cardImage {\n    width: 100%;\n    height: 150px;\n    object-fit: fill;\n}\n.footerTitleContainer {\n    width: auto;\n    height: 24px;\n    margin-top: 12px;\n    overflow: hidden;\n}\n#addIcon {\n    padding: 0;\n    margin: 0;\n    margin-top: 12px;\n    font-weight: 700;\n}\n\n.addCardLabel {\n    margin: 0;\n    padding: 0;\n    font-weight: 600;\n    font-size: 15px;\n    margin-left: 4px;\n}\n.cardAndFooterContainer {\n    height: 100%;\n    width: 100%;\n    overflow-y: scroll;\n    -webkit-overflow-scrolling: touch;\n    padding-bottom: 50px;\n    -ms-overflow-style: none;  /* Internet Explorer 10+ */\n    scrollbar-width: none;  /* Firefox */\n    padding-top: 8px;\n}\n.listFooterView {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    height: 50px;\n    width: 100%;\n    border-radius: var(--border-radius-1);\n    border: 1px solid var(--color-light);\n    z-index: 9999;\n    overflow: hidden;\n    background-color: white;\n    /* margin-top: -8px; */\n}\n\n.addListBtn {\n    display: block;\n    width: 100px;\n    height: 34px;\n    background-color: #FC6363;\n    color: white;\n    border-radius: var(--border-radius-1);\n    margin-left: 8px;\n    font-size: 14px;\n    font-weight: 600;\n    margin-top: 10px;\n    margin-bottom: 10px;\n}\n.addListInputField, .createNewListField {\n  padding: 8px;\n  width: 200px;\n  margin-left: 8px;\n  margin-right: 8px;\n  border: 1px solid var(--color-light);\n  border-radius: var(--border-radius-1);\n  text-align: left;\n  resize: none;\n  overflow: hidden;\n  height: 40px;\n  max-height: 500px;\n  max-lines: 200;\n  font-weight: 500;\n  font-size: 14px;\n}\n\n.createListContainer {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    /* height: 140px; */\n    width: 98%;\n    padding-top: 10px;\n    z-index: 9999;\n    overflow: hidden;\n    background-color: white;\n    align-items: center;\n    margin-top: 10px;\n    margin-right: auto;\n    margin-left: auto;\n    border-radius: var(--border-radius-1)\n}\n\n.createNewList {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    /* height: 140px; */\n    width: 98%;\n    padding-top: 10px;\n    z-index: 9999;\n    overflow: hidden;\n    background-color: white;\n    align-items: center;\n    margin-right: auto;\n    margin-left: auto;\n    border-radius: var(--border-radius-1)\n}\n\n\n.cardCell {\n    overflow: hidden;\n    width: 220px;\n    min-height: 50px;\n    margin-bottom: 10px;\n    border: 1px solid var(--color-light);\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    border-radius: var(--border-radius-1);\n    /* border-bottom-right-radius: var(--border-radius-2);\n    border-bottom-left-radius: var(--border-radius-2); */\n}\n\n.badgeAndTitleContainer {\n    display: flex;\n    flex-direction: row;\n}\n\n.badgeAndTitleContainer label {\n    margin-left: 10px;\n}\n\n.listNameLabel {\n    height: 24px;\n    font-weight: 600;\n    font-size: 15px;\n    margin-top: auto;\n    margin-bottom: auto;\n}\n.colorBadge {\n    width: 28px;\n    height: 28px;\n    background-color: orange;\n    border-radius: var(--border-radius-1);\n    margin-top: auto;\n    margin-bottom: auto;\n    margin-left: 15px;\n}\n\n.listHeaderView {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    height: 50px;\n    width: 100%;\n    border-radius:  var(--border-radius-1);;\n    /* border-top-right-radius: var(--border-radius-2);\n    border-top-left-radius: var(--border-radius-2); */\n    border: 1px solid var(--color-light);\n    padding-right: 15px;\n    background-color: white;\n}\n\n\n.boardListsContainer {\n    width: 100%;\n    height: calc(100vh - 160px);\n    white-space: nowrap;\n    overflow-x: auto;\n    overflow-y: hidden;\n    -webkit-overflow-scrolling: touch;\n    padding-right: 20px;\n}\n\n.listContainer {\n    width: 220px;\n    /* background-color: #eee; */\n    float: none;\n    height: 100%;\n    margin: 0 0.50%;\n    display: inline-block;\n    zoom: 1;\n    /* overflow: hidden; */\n    /* overflow-y: scroll; */\n    overflow: hidden;\n}\n\n.mainBoardConentView {\n    width: calc(100% - 10px);\n    height: calc(100% - 130px);\n    margin-left: auto;\n    margin-right: auto;\n    padding-top: 20px;\n}\n\n.boardBNavBar {\n    width: calc(100% - 30px);\n    height: 50px;\n    background-color: white;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 15px;\n    border-radius: var(--border-radius-1);\n}\n    \n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}