{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/board_placeholder.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-59cf3461\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"board\"\n};\nconst _hoisted_2 = {\n  class: \"boardViews\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Taskboards\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"boardContentView\"\n};\nconst _hoisted_5 = {\n  class: /*#__PURE__*/_normalizeClass(`productGridCellWithBorder`)\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  class: \"productCellImage\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"productNameLabel\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavBar, {\n    isExpanded: this.isSideBarExpanded\n  }, null, 8 /* PROPS */, [\"isExpanded\"]), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_v_row, {\n    style: {\n      \"overflow\": \"hidden\"\n    }\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.boards, product => {\n      return _openBlock(), _createBlock(_component_v_col, {\n        key: product,\n        cols: \"auto\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"label\", _hoisted_7, _toDisplayString(product), 1 /* TEXT */), _createCommentVNode(\" <label class=\\\"priceLabel\\\">₵{{ new Intl.NumberFormat().format(parseFloat(product.price).toFixed(2)) }}</label> \")])]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })])])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","_normalizeClass","src","_createElementBlock","_hoisted_1","_createVNode","_component_NavBar","isExpanded","isSideBarExpanded","_hoisted_2","_hoisted_3","_hoisted_4","_component_v_row","style","default","_withCtx","_Fragment","_renderList","$setup","boards","product","_createBlock","_component_v_col","key","cols","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","_createCommentVNode","_"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/views/BoardView.vue"],"sourcesContent":["<template>\n    <div class=\"board\">\n        <NavBar :isExpanded=\"this.isSideBarExpanded\"/>\n        <div class=\"boardViews\">\n            <h3>Taskboards</h3>\n            <div class=\"boardContentView\">\n                <v-row style=\"overflow: hidden;\">\n             <v-col v-for=\"product in boards\" :key=\"product\" cols=\"auto\"> \n               <div :class=\"`productGridCellWithBorder`\">\n                  <img src=\"@/assets/board_placeholder.png\" class=\"productCellImage\">\n                  <label class=\"productNameLabel\">{{ product }}</label>\n                  <!-- <label class=\"priceLabel\">₵{{ new Intl.NumberFormat().format(parseFloat(product.price).toFixed(2)) }}</label> -->\n               </div>\n              </v-col>\n            </v-row>\n           </div>\n        </div>\n    </div>\n</template>\n<script>\nimport NavBar from '@/components/NavBarView.vue'\nimport { ref } from 'vue'\nexport default {\n    props: [\"isExpanded\"],\n    components: {\n        NavBar\n    }, \n    methods: {\n        handleBoardTypeTapped(item) {\n            this.selectedTaskBoardType = item\n        }\n    },\n    setup() {\n        var isSideBarExpanded = ref(false)\n        var selectedTaskBoardType = ref(\"All Team\")\n        var boards = ref([\"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\"])\n        return { isSideBarExpanded, boards, selectedTaskBoardType}\n    },\n    watch: { \n        isExpanded: function(newVal, oldVal) {\n            console.log('Prop changed isSideBarExpanwded: ', newVal)\n            this.isSideBarExpanded = newVal\n        }\n    }, \n    mounted() {\n\n    } \n}\n</script>\n<style scoped>\n.productCellImage {\n    height: 200px;\n    width: 232px;\n    margin-right: auto;\n    margin-left: auto;\n    background-color: var(--color-light);\n    object-fit: cover;\n}\n\n.productGridCellWithBorder {\n    border: 2px solid var(--color-light);\n}\n.productGridCell, .productGridCellWithBorder {\n    display: block;\n    height: 280px;\n    overflow: hidden;\n    width: 232px;\n    background-color: white;\n    border-radius: var(--border-radius-2);\n}\n/* .indicatorView {\n    width: 100%;\n    height: 3px;\n    background-color: var(--color-bar-dark);\n    margin-top: 5px;\n    border-radius: var(--border-radius-2);\n}\n.taskboardLabel {\n    font-weight: 600;\n    font-size: 15px;\n}\n.taskboardCell {\n  display: inline-block;\n  clear: both;\n  padding-right: 10px;\n  padding-left: 10px;\n  margin-right: 15px;\n  height: 60px;\n} */\n\n/* .taskboardListView {\n    width: 98%;\n    height: 80px;\n    margin-left: 15px;\n    overflow-x: auto;\n    padding-top: 15px;\n    list-style: none;\n    margin-left: 0;\n    white-space: nowrap;\n    align-items: flex-start;\n    flex-wrap: nowrap;\n    display: flex;\n    margin-left: 15px;\n}\n.boardContentView h3 {\n    float: left;\n    margin-left: 30px;\n    margin-top: 20px;\n} */\n \n.boardViews {\n    width: 100%;\n    height: 100%;\n    background-color: var(--color-background);\n   \n}\n/* .taskBoardContainerView {\n    height: 60px;\n    background-color: var(--color-info-light);\n    display: flex;\n    flex-direction: column;\n    justify-content: left;\n    align-items: start;\n    margin-top: 20px;\n    border-top-right-radius: var(--border-radius-1);\n    border-top-left-radius: var(--border-radius-1);\n}\n\n.taskBoardContainerView, .boardViews {\n    width: 98%;\n    margin-right: auto;\n    margin-left: auto;\n} */\n\n.boardContentView {\n    width: 99%;\n    height: 96%;\n    display: flex;\n    flex-direction: column;\n    justify-content: left;\n    align-items: start;\n    background-color: white;\n    margin: auto;\n    margin-top: 10px;\n    border-radius: var(--border-radius-1);\n    padding: 30px;\n}\n.board {\n    width: 100%;\n    height: 100%;\n}\n    \n</style>"],"mappings":";OASuBA,UAAoC;;;EARlDC,KAAK,EAAC;AAAO;;EAETA,KAAK,EAAC;AAAY;gEACnBC,mBAAA,CAAmB,YAAf,YAAU;;EACTD,KAAK,EAAC;AAAkB;;EAGpBA,KAAK,eAR1BE,eAAA,CAQ4B,2BAA2B;;gEACrCD,mBAAA,CAAmE;EAA9DE,GAAoC,EAApCJ,UAAoC;EAACC,KAAK,EAAC;;;EACzCA,KAAK,EAAC;AAAkB;;;;;uBAT7CI,mBAAA,CAgBM,OAhBNC,UAgBM,GAfFC,YAAA,CAA8CC,iBAAA;IAArCC,UAAU,OAAOC;2CAC1BR,mBAAA,CAaM,OAbNS,UAaM,GAZFC,UAAmB,EACnBV,mBAAA,CAUK,OAVLW,UAUK,GATDN,YAAA,CAQIO,gBAAA;IARGC,KAAyB,EAAzB;MAAA;IAAA;EAAyB;IANhDC,OAAA,EAAAC,QAAA,CAOoB,MAAyB,E,kBAAhCZ,mBAAA,CAMSa,SAAA,QAbtBC,WAAA,CAOsCC,MAAA,CAAAC,MAAM,EAAjBC,OAAO;2BAArBC,YAAA,CAMSC,gBAAA;QANyBC,GAAG,EAAEH,OAAO;QAAEI,IAAI,EAAC;;QAPlEV,OAAA,EAAAC,QAAA,CAQe,MAIM,CAJNf,mBAAA,CAIM,OAJNyB,UAIM,GAHHC,UAAmE,EACnE1B,mBAAA,CAAqD,SAArD2B,UAAqD,EAAAC,gBAAA,CAAlBR,OAAO,kBAC1CS,mBAAA,qHAAsH,C;QAXxIC,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}