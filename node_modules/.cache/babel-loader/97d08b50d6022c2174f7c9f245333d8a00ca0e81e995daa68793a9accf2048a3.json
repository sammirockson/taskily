{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"src\", \"muted\", \"autoplay\", \"controls\", \"loop\", \"width\", \"height\", \"poster\", \"preload\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"video\", {\n    src: $props.src,\n    muted: $props.muted,\n    autoplay: $props.autoplay,\n    controls: $props.controls,\n    loop: $props.loop,\n    width: $props.width,\n    height: $props.height,\n    poster: $props.poster,\n    preload: $props.preload,\n    playsinline: true,\n    ref: \"player\"\n  }, null, 8 /* PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","src","$props","muted","autoplay","controls","loop","width","height","poster","preload","playsinline","ref","_hoisted_1"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/Videoplayer.vue"],"sourcesContent":["<template>\n <video\n   :src=\"src\"\n   :muted=\"muted\"\n   :autoplay=\"autoplay\"\n   :controls=\"controls\"\n   :loop=\"loop\"\n   :width=\"width\"\n   :height=\"height\"\n   :poster=\"poster\"\n   :preload=\"preload\"\n   :playsinline=\"true\"\n   ref=\"player\"\n/>\n</template>\n<script>\nimport { ref } from 'vue'\nexport default {\n    name: \"Videoplayer\",\n    props: {\n       src: { type: String, required: true },\n       controls: { type: Boolean, required: false, default: false },\n       loop: { type: Boolean, required: false, default: false },\n       width: { type: Number, required: false, default: 500 },\n       height: { type: Number, required: false, default: 281 },\n       autoplay: { type: Boolean, required: false, default: false },\n       muted: { type: Boolean, required: false, default: false },\n       poster: { type: String, required: false },\n       preload: { type: String, required: false, default: \"auto\" },\n    }, \n    setup() {\n        var isPlaying = ref(false)\n        var isMuted = ref(false)\n        return { isPlaying, isMuted }\n    }, \n    methods: {\n     play() {\n      this.$refs.player.play();\n      this.setPlaying(true);\n    },\n    pause() {\n      this.$refs.player.pause();\n      this.setPlaying(false);\n    },\n    togglePlay() {\n      if (this.playing) {\n        this.pause();\n      } else {\n        this.play();\n      }\n    },\n    setPlaying(state) {\n      this.playing = state;\n    },\t\n\tmute() {\n      this.$refs.player.muted = true;\n      this.setMuted(true);\n    },\n    }, \n    mounted() {\n        this.play()\n    }\n}\n</script>\n<style scoped>\n    \n</style>"],"mappings":";mBAAA;;uBACCA,mBAAA,CAYC;IAXEC,GAAG,EAAEC,MAAA,CAAAD,GAAG;IACRE,KAAK,EAAED,MAAA,CAAAC,KAAK;IACZC,QAAQ,EAAEF,MAAA,CAAAE,QAAQ;IAClBC,QAAQ,EAAEH,MAAA,CAAAG,QAAQ;IAClBC,IAAI,EAAEJ,MAAA,CAAAI,IAAI;IACVC,KAAK,EAAEL,MAAA,CAAAK,KAAK;IACZC,MAAM,EAAEN,MAAA,CAAAM,MAAM;IACdC,MAAM,EAAEP,MAAA,CAAAO,MAAM;IACdC,OAAO,EAAER,MAAA,CAAAQ,OAAO;IAChBC,WAAW,EAAE,IAAI;IAClBC,GAAG,EAAC;0BAZPC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}