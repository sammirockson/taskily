{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { isExist } from '@primeuix/utils/dom';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport EditorStyle from 'primevue/editor/style';\nimport { openBlock, createElementBlock, mergeProps, createElementVNode, renderSlot, normalizeProps, guardReactiveProps } from 'vue';\nvar script$1 = {\n  name: 'BaseEditor',\n  \"extends\": BaseComponent,\n  props: {\n    modelValue: String,\n    placeholder: String,\n    readonly: Boolean,\n    formats: Array,\n    editorStyle: null,\n    modules: null\n  },\n  style: EditorStyle,\n  provide: function provide() {\n    return {\n      $pcEditor: this,\n      $parentInstance: this\n    };\n  }\n};\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nvar QuillJS = function () {\n  try {\n    return window.Quill;\n  } catch (_unused) {\n    return null;\n  }\n}();\nvar script = {\n  name: 'Editor',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:modelValue', 'text-change', 'selection-change', 'load'],\n  data: function data() {\n    return {\n      reRenderColorKey: 0\n    };\n  },\n  quill: null,\n  watch: {\n    modelValue: function modelValue(newValue, oldValue) {\n      if (newValue !== oldValue && this.quill && !this.quill.hasFocus()) {\n        this.reRenderColorKey++;\n        this.renderValue(newValue);\n      }\n    },\n    readonly: function readonly() {\n      this.handleReadOnlyChange();\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    var configuration = {\n      modules: _objectSpread({\n        toolbar: this.$refs.toolbarElement\n      }, this.modules),\n      readOnly: this.readonly,\n      theme: 'snow',\n      formats: this.formats,\n      placeholder: this.placeholder\n    };\n    if (QuillJS) {\n      // Loaded by script only\n      this.quill = new QuillJS(this.$refs.editorElement, configuration);\n      this.initQuill();\n      this.handleLoad();\n    } else {\n      import('quill').then(function (module) {\n        if (module && isExist(_this.$refs.editorElement)) {\n          if (module[\"default\"]) {\n            // webpack\n            _this.quill = new module[\"default\"](_this.$refs.editorElement, configuration);\n          } else {\n            // parceljs\n            _this.quill = new module(_this.$refs.editorElement, configuration);\n          }\n          _this.initQuill();\n        }\n      }).then(function () {\n        _this.handleLoad();\n      });\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.quill = null;\n  },\n  methods: {\n    renderValue: function renderValue(value) {\n      if (this.quill) {\n        if (value) this.quill.setContents(this.quill.clipboard.convert(value));else this.quill.setText('');\n      }\n    },\n    initQuill: function initQuill() {\n      var _this2 = this;\n      this.renderValue(this.modelValue);\n      this.quill.on('text-change', function (delta, oldContents, source) {\n        if (source === 'user') {\n          var html = _this2.$refs.editorElement.children[0].innerHTML;\n          var text = _this2.quill.getText().trim();\n          if (html === '<p><br></p>') {\n            html = '';\n          }\n          _this2.$emit('update:modelValue', html);\n          _this2.$emit('text-change', {\n            htmlValue: html,\n            textValue: text,\n            delta: delta,\n            source: source,\n            instance: _this2.quill\n          });\n        }\n      });\n      this.quill.on('selection-change', function (range, oldRange, source) {\n        var html = _this2.$refs.editorElement.children[0].innerHTML;\n        var text = _this2.quill.getText().trim();\n        _this2.$emit('selection-change', {\n          htmlValue: html,\n          textValue: text,\n          range: range,\n          oldRange: oldRange,\n          source: source,\n          instance: _this2.quill\n        });\n      });\n    },\n    handleLoad: function handleLoad() {\n      if (this.quill && this.quill.getModule('toolbar')) {\n        this.$emit('load', {\n          instance: this.quill\n        });\n      }\n    },\n    handleReadOnlyChange: function handleReadOnlyChange() {\n      if (this.quill) this.quill.enable(!this.readonly);\n    }\n  }\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [createElementVNode(\"div\", mergeProps({\n    ref: \"toolbarElement\",\n    \"class\": _ctx.cx('toolbar')\n  }, _ctx.ptm('toolbar')), [renderSlot(_ctx.$slots, \"toolbar\", {}, function () {\n    return [createElementVNode(\"span\", mergeProps({\n      \"class\": \"ql-formats\"\n    }, _ctx.ptm('formats')), [createElementVNode(\"select\", mergeProps({\n      \"class\": \"ql-header\",\n      defaultValue: \"0\"\n    }, _ctx.ptm('header')), [createElementVNode(\"option\", mergeProps({\n      value: \"1\"\n    }, _ctx.ptm('option')), \"Heading\", 16), createElementVNode(\"option\", mergeProps({\n      value: \"2\"\n    }, _ctx.ptm('option')), \"Subheading\", 16), createElementVNode(\"option\", mergeProps({\n      value: \"0\"\n    }, _ctx.ptm('option')), \"Normal\", 16)], 16), createElementVNode(\"select\", mergeProps({\n      \"class\": \"ql-font\"\n    }, _ctx.ptm('font')), [createElementVNode(\"option\", normalizeProps(guardReactiveProps(_ctx.ptm('option'))), null, 16), createElementVNode(\"option\", mergeProps({\n      value: \"serif\"\n    }, _ctx.ptm('option')), null, 16), createElementVNode(\"option\", mergeProps({\n      value: \"monospace\"\n    }, _ctx.ptm('option')), null, 16)], 16)], 16), createElementVNode(\"span\", mergeProps({\n      \"class\": \"ql-formats\"\n    }, _ctx.ptm('formats')), [createElementVNode(\"button\", mergeProps({\n      \"class\": \"ql-bold\",\n      type: \"button\"\n    }, _ctx.ptm('bold')), null, 16), createElementVNode(\"button\", mergeProps({\n      \"class\": \"ql-italic\",\n      type: \"button\"\n    }, _ctx.ptm('italic')), null, 16), createElementVNode(\"button\", mergeProps({\n      \"class\": \"ql-underline\",\n      type: \"button\"\n    }, _ctx.ptm('underline')), null, 16)], 16), (openBlock(), createElementBlock(\"span\", mergeProps({\n      key: $data.reRenderColorKey,\n      \"class\": \"ql-formats\"\n    }, _ctx.ptm('formats')), [createElementVNode(\"select\", mergeProps({\n      \"class\": \"ql-color\"\n    }, _ctx.ptm('color')), null, 16), createElementVNode(\"select\", mergeProps({\n      \"class\": \"ql-background\"\n    }, _ctx.ptm('background')), null, 16)], 16)), createElementVNode(\"span\", mergeProps({\n      \"class\": \"ql-formats\"\n    }, _ctx.ptm('formats')), [createElementVNode(\"button\", mergeProps({\n      \"class\": \"ql-list\",\n      value: \"ordered\",\n      type: \"button\"\n    }, _ctx.ptm('list')), null, 16), createElementVNode(\"button\", mergeProps({\n      \"class\": \"ql-list\",\n      value: \"bullet\",\n      type: \"button\"\n    }, _ctx.ptm('list')), null, 16), createElementVNode(\"select\", mergeProps({\n      \"class\": \"ql-align\"\n    }, _ctx.ptm('select')), [createElementVNode(\"option\", mergeProps({\n      defaultValue: \"\"\n    }, _ctx.ptm('option')), null, 16), createElementVNode(\"option\", mergeProps({\n      value: \"center\"\n    }, _ctx.ptm('option')), null, 16), createElementVNode(\"option\", mergeProps({\n      value: \"right\"\n    }, _ctx.ptm('option')), null, 16), createElementVNode(\"option\", mergeProps({\n      value: \"justify\"\n    }, _ctx.ptm('option')), null, 16)], 16)], 16), createElementVNode(\"span\", mergeProps({\n      \"class\": \"ql-formats\"\n    }, _ctx.ptm('formats')), [createElementVNode(\"button\", mergeProps({\n      \"class\": \"ql-link\",\n      type: \"button\"\n    }, _ctx.ptm('link')), null, 16), createElementVNode(\"button\", mergeProps({\n      \"class\": \"ql-image\",\n      type: \"button\"\n    }, _ctx.ptm('image')), null, 16), createElementVNode(\"button\", mergeProps({\n      \"class\": \"ql-code-block\",\n      type: \"button\"\n    }, _ctx.ptm('codeBlock')), null, 16)], 16), createElementVNode(\"span\", mergeProps({\n      \"class\": \"ql-formats\"\n    }, _ctx.ptm('formats')), [createElementVNode(\"button\", mergeProps({\n      \"class\": \"ql-clean\",\n      type: \"button\"\n    }, _ctx.ptm('clean')), null, 16)], 16)];\n  })], 16), createElementVNode(\"div\", mergeProps({\n    ref: \"editorElement\",\n    \"class\": _ctx.cx('content'),\n    style: _ctx.editorStyle\n  }, _ctx.ptm('content')), null, 16)], 16);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$1","name","BaseComponent","props","modelValue","String","placeholder","readonly","Boolean","formats","Array","editorStyle","modules","style","EditorStyle","provide","$pcEditor","$parentInstance","QuillJS","window","Quill","_unused","script","inheritAttrs","emits","data","reRenderColorKey","quill","watch","newValue","oldValue","hasFocus","renderValue","handleReadOnlyChange","mounted","_this","configuration","_objectSpread","toolbar","$refs","toolbarElement","readOnly","theme","editorElement","initQuill","handleLoad","then","module","isExist","beforeUnmount","methods","value","setContents","clipboard","convert","setText","_this2","on","delta","oldContents","source","html","children","innerHTML","text","getText","trim","$emit","htmlValue","textValue","instance","range","oldRange","getModule","enable","openBlock","createElementBlock","mergeProps","_ctx","cx","ptmi","createElementVNode","ref","ptm","renderSlot","$slots","defaultValue","normalizeProps","guardReactiveProps","type","key","$data"],"sources":["../../src/editor/BaseEditor.vue","../../src/editor/Editor.vue","../../src/editor/Editor.vue?vue&type=template&id=46ead690&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport EditorStyle from 'primevue/editor/style';\n\nexport default {\n    name: 'BaseEditor',\n    extends: BaseComponent,\n    props: {\n        modelValue: String,\n        placeholder: String,\n        readonly: Boolean,\n        formats: Array,\n        editorStyle: null,\n        modules: null\n    },\n    style: EditorStyle,\n    provide() {\n        return {\n            $pcEditor: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div ref=\"toolbarElement\" :class=\"cx('toolbar')\" v-bind=\"ptm('toolbar')\">\n            <slot name=\"toolbar\">\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <select class=\"ql-header\" defaultValue=\"0\" v-bind=\"ptm('header')\">\n                        <option value=\"1\" v-bind=\"ptm('option')\">Heading</option>\n                        <option value=\"2\" v-bind=\"ptm('option')\">Subheading</option>\n                        <option value=\"0\" v-bind=\"ptm('option')\">Normal</option>\n                    </select>\n                    <select class=\"ql-font\" v-bind=\"ptm('font')\">\n                        <option v-bind=\"ptm('option')\"></option>\n                        <option value=\"serif\" v-bind=\"ptm('option')\"></option>\n                        <option value=\"monospace\" v-bind=\"ptm('option')\"></option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-bold\" type=\"button\" v-bind=\"ptm('bold')\"></button>\n                    <button class=\"ql-italic\" type=\"button\" v-bind=\"ptm('italic')\"></button>\n                    <button class=\"ql-underline\" type=\"button\" v-bind=\"ptm('underline')\"></button>\n                </span>\n                <span :key=\"reRenderColorKey\" class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <select class=\"ql-color\" v-bind=\"ptm('color')\"></select>\n                    <select class=\"ql-background\" v-bind=\"ptm('background')\"></select>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-list\" value=\"ordered\" type=\"button\" v-bind=\"ptm('list')\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" type=\"button\" v-bind=\"ptm('list')\"></button>\n                    <select class=\"ql-align\" v-bind=\"ptm('select')\">\n                        <option defaultValue v-bind=\"ptm('option')\"></option>\n                        <option value=\"center\" v-bind=\"ptm('option')\"></option>\n                        <option value=\"right\" v-bind=\"ptm('option')\"></option>\n                        <option value=\"justify\" v-bind=\"ptm('option')\"></option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-link\" type=\"button\" v-bind=\"ptm('link')\"></button>\n                    <button class=\"ql-image\" type=\"button\" v-bind=\"ptm('image')\"></button>\n                    <button class=\"ql-code-block\" type=\"button\" v-bind=\"ptm('codeBlock')\"></button>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-clean\" type=\"button\" v-bind=\"ptm('clean')\"></button>\n                </span>\n            </slot>\n        </div>\n        <div ref=\"editorElement\" :class=\"cx('content')\" :style=\"editorStyle\" v-bind=\"ptm('content')\"></div>\n    </div>\n</template>\n\n<script>\nimport { isExist } from '@primeuix/utils/dom';\nimport BaseEditor from './BaseEditor.vue';\n\nconst QuillJS = (function () {\n    try {\n        return window.Quill;\n    } catch {\n        return null;\n    }\n})();\n\nexport default {\n    name: 'Editor',\n    extends: BaseEditor,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'text-change', 'selection-change', 'load'],\n    data() {\n        return {\n            reRenderColorKey: 0\n        };\n    },\n    quill: null,\n    watch: {\n        modelValue(newValue, oldValue) {\n            if (newValue !== oldValue && this.quill && !this.quill.hasFocus()) {\n                this.reRenderColorKey++;\n                this.renderValue(newValue);\n            }\n        },\n        readonly() {\n            this.handleReadOnlyChange();\n        }\n    },\n    mounted() {\n        const configuration = {\n            modules: {\n                toolbar: this.$refs.toolbarElement,\n                ...this.modules\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n            formats: this.formats,\n            placeholder: this.placeholder\n        };\n\n        if (QuillJS) {\n            // Loaded by script only\n            this.quill = new QuillJS(this.$refs.editorElement, configuration);\n            this.initQuill();\n            this.handleLoad();\n        } else {\n            import('quill')\n                .then((module) => {\n                    if (module && isExist(this.$refs.editorElement)) {\n                        if (module.default) {\n                            // webpack\n                            this.quill = new module.default(this.$refs.editorElement, configuration);\n                        } else {\n                            // parceljs\n                            this.quill = new module(this.$refs.editorElement, configuration);\n                        }\n\n                        this.initQuill();\n                    }\n                })\n                .then(() => {\n                    this.handleLoad();\n                });\n        }\n    },\n    beforeUnmount() {\n        this.quill = null;\n    },\n    methods: {\n        renderValue(value) {\n            if (this.quill) {\n                if (value) this.quill.setContents(this.quill.clipboard.convert(value));\n                else this.quill.setText('');\n            }\n        },\n        initQuill() {\n            this.renderValue(this.modelValue);\n\n            this.quill.on('text-change', (delta, oldContents, source) => {\n                if (source === 'user') {\n                    let html = this.$refs.editorElement.children[0].innerHTML;\n                    let text = this.quill.getText().trim();\n\n                    if (html === '<p><br></p>') {\n                        html = '';\n                    }\n\n                    this.$emit('update:modelValue', html);\n                    this.$emit('text-change', {\n                        htmlValue: html,\n                        textValue: text,\n                        delta: delta,\n                        source: source,\n                        instance: this.quill\n                    });\n                }\n            });\n\n            this.quill.on('selection-change', (range, oldRange, source) => {\n                let html = this.$refs.editorElement.children[0].innerHTML;\n                let text = this.quill.getText().trim();\n\n                this.$emit('selection-change', {\n                    htmlValue: html,\n                    textValue: text,\n                    range: range,\n                    oldRange: oldRange,\n                    source: source,\n                    instance: this.quill\n                });\n            });\n        },\n        handleLoad() {\n            if (this.quill && this.quill.getModule('toolbar')) {\n                this.$emit('load', { instance: this.quill });\n            }\n        },\n        handleReadOnlyChange() {\n            if (this.quill) this.quill.enable(!this.readonly);\n        }\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div ref=\"toolbarElement\" :class=\"cx('toolbar')\" v-bind=\"ptm('toolbar')\">\n            <slot name=\"toolbar\">\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <select class=\"ql-header\" defaultValue=\"0\" v-bind=\"ptm('header')\">\n                        <option value=\"1\" v-bind=\"ptm('option')\">Heading</option>\n                        <option value=\"2\" v-bind=\"ptm('option')\">Subheading</option>\n                        <option value=\"0\" v-bind=\"ptm('option')\">Normal</option>\n                    </select>\n                    <select class=\"ql-font\" v-bind=\"ptm('font')\">\n                        <option v-bind=\"ptm('option')\"></option>\n                        <option value=\"serif\" v-bind=\"ptm('option')\"></option>\n                        <option value=\"monospace\" v-bind=\"ptm('option')\"></option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-bold\" type=\"button\" v-bind=\"ptm('bold')\"></button>\n                    <button class=\"ql-italic\" type=\"button\" v-bind=\"ptm('italic')\"></button>\n                    <button class=\"ql-underline\" type=\"button\" v-bind=\"ptm('underline')\"></button>\n                </span>\n                <span :key=\"reRenderColorKey\" class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <select class=\"ql-color\" v-bind=\"ptm('color')\"></select>\n                    <select class=\"ql-background\" v-bind=\"ptm('background')\"></select>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-list\" value=\"ordered\" type=\"button\" v-bind=\"ptm('list')\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" type=\"button\" v-bind=\"ptm('list')\"></button>\n                    <select class=\"ql-align\" v-bind=\"ptm('select')\">\n                        <option defaultValue v-bind=\"ptm('option')\"></option>\n                        <option value=\"center\" v-bind=\"ptm('option')\"></option>\n                        <option value=\"right\" v-bind=\"ptm('option')\"></option>\n                        <option value=\"justify\" v-bind=\"ptm('option')\"></option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-link\" type=\"button\" v-bind=\"ptm('link')\"></button>\n                    <button class=\"ql-image\" type=\"button\" v-bind=\"ptm('image')\"></button>\n                    <button class=\"ql-code-block\" type=\"button\" v-bind=\"ptm('codeBlock')\"></button>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-clean\" type=\"button\" v-bind=\"ptm('clean')\"></button>\n                </span>\n            </slot>\n        </div>\n        <div ref=\"editorElement\" :class=\"cx('content')\" :style=\"editorStyle\" v-bind=\"ptm('content')\"></div>\n    </div>\n</template>\n\n<script>\nimport { isExist } from '@primeuix/utils/dom';\nimport BaseEditor from './BaseEditor.vue';\n\nconst QuillJS = (function () {\n    try {\n        return window.Quill;\n    } catch {\n        return null;\n    }\n})();\n\nexport default {\n    name: 'Editor',\n    extends: BaseEditor,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'text-change', 'selection-change', 'load'],\n    data() {\n        return {\n            reRenderColorKey: 0\n        };\n    },\n    quill: null,\n    watch: {\n        modelValue(newValue, oldValue) {\n            if (newValue !== oldValue && this.quill && !this.quill.hasFocus()) {\n                this.reRenderColorKey++;\n                this.renderValue(newValue);\n            }\n        },\n        readonly() {\n            this.handleReadOnlyChange();\n        }\n    },\n    mounted() {\n        const configuration = {\n            modules: {\n                toolbar: this.$refs.toolbarElement,\n                ...this.modules\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n            formats: this.formats,\n            placeholder: this.placeholder\n        };\n\n        if (QuillJS) {\n            // Loaded by script only\n            this.quill = new QuillJS(this.$refs.editorElement, configuration);\n            this.initQuill();\n            this.handleLoad();\n        } else {\n            import('quill')\n                .then((module) => {\n                    if (module && isExist(this.$refs.editorElement)) {\n                        if (module.default) {\n                            // webpack\n                            this.quill = new module.default(this.$refs.editorElement, configuration);\n                        } else {\n                            // parceljs\n                            this.quill = new module(this.$refs.editorElement, configuration);\n                        }\n\n                        this.initQuill();\n                    }\n                })\n                .then(() => {\n                    this.handleLoad();\n                });\n        }\n    },\n    beforeUnmount() {\n        this.quill = null;\n    },\n    methods: {\n        renderValue(value) {\n            if (this.quill) {\n                if (value) this.quill.setContents(this.quill.clipboard.convert(value));\n                else this.quill.setText('');\n            }\n        },\n        initQuill() {\n            this.renderValue(this.modelValue);\n\n            this.quill.on('text-change', (delta, oldContents, source) => {\n                if (source === 'user') {\n                    let html = this.$refs.editorElement.children[0].innerHTML;\n                    let text = this.quill.getText().trim();\n\n                    if (html === '<p><br></p>') {\n                        html = '';\n                    }\n\n                    this.$emit('update:modelValue', html);\n                    this.$emit('text-change', {\n                        htmlValue: html,\n                        textValue: text,\n                        delta: delta,\n                        source: source,\n                        instance: this.quill\n                    });\n                }\n            });\n\n            this.quill.on('selection-change', (range, oldRange, source) => {\n                let html = this.$refs.editorElement.children[0].innerHTML;\n                let text = this.quill.getText().trim();\n\n                this.$emit('selection-change', {\n                    htmlValue: html,\n                    textValue: text,\n                    range: range,\n                    oldRange: oldRange,\n                    source: source,\n                    instance: this.quill\n                });\n            });\n        },\n        handleLoad() {\n            if (this.quill && this.quill.getModule('toolbar')) {\n                this.$emit('load', { instance: this.quill });\n            }\n        },\n        handleReadOnlyChange() {\n            if (this.quill) this.quill.enable(!this.readonly);\n        }\n    }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}