{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-59cf3461\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"board\"\n};\nconst _hoisted_2 = {\n  class: \"boardViews\"\n};\nconst _hoisted_3 = {\n  class: \"boardContentView\"\n};\nconst _hoisted_4 = [\"src\", \"onClick\"];\nconst _hoisted_5 = {\n  class: \"productNameLabel\"\n};\nconst _hoisted_6 = {\n  class: \"priceLabel\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavBar, {\n    isExpanded: this.isSideBarExpanded\n  }, null, 8 /* PROPS */, [\"isExpanded\"]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" <h3>Taskboards</h3> \"), _createVNode(_component_v_row, {\n    style: {\n      \"overflow\": \"hidden\"\n    }\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.products, product => {\n      return _openBlock(), _createBlock(_component_v_col, {\n        key: product.productId,\n        cols: \"auto\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", {\n          class: _normalizeClass(_ctx.getOrderList(product.productId) == null ? `productGridCell` : `productGridCellWithBorder`)\n        }, [_createElementVNode(\"img\", {\n          src: product.productPhoto,\n          class: \"productCellImage\",\n          onClick: $event => _ctx.handleProductTapped(product)\n        }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"label\", _hoisted_5, _toDisplayString(product.productName), 1 /* TEXT */), _createElementVNode(\"label\", _hoisted_6, \"₵\" + _toDisplayString(new Intl.NumberFormat().format(parseFloat(product.price).toFixed(2))), 1 /* TEXT */)], 2 /* CLASS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_NavBar","isExpanded","isSideBarExpanded","_createElementVNode","_hoisted_2","_hoisted_3","_createCommentVNode","_component_v_row","style","default","_withCtx","_Fragment","_renderList","_ctx","products","product","_createBlock","_component_v_col","key","productId","cols","_normalizeClass","getOrderList","src","productPhoto","onClick","$event","handleProductTapped","_hoisted_4","_hoisted_5","_toDisplayString","productName","_hoisted_6","Intl","NumberFormat","format","parseFloat","price","toFixed","_"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/views/BoardView.vue"],"sourcesContent":["<template>\n    <div class=\"board\">\n        <NavBar :isExpanded=\"this.isSideBarExpanded\"/>\n        <div class=\"boardViews\">\n            <div class=\"boardContentView\">\n                <!-- <h3>Taskboards</h3> -->\n                <v-row style=\"overflow: hidden;\">\n             <v-col v-for=\"product in products\" :key=\"product.productId\" cols=\"auto\"> \n               <div :class=\"getOrderList(product.productId) == null ? `productGridCell` : `productGridCellWithBorder`\">\n                  <img :src=\"product.productPhoto\" class=\"productCellImage\" @click=\"handleProductTapped(product)\">\n                  <label class=\"productNameLabel\">{{ product.productName }}</label>\n                  <label class=\"priceLabel\">₵{{ new Intl.NumberFormat().format(parseFloat(product.price).toFixed(2)) }}</label>\n               </div>\n              </v-col>\n            </v-row>\n           </div>\n        </div>\n    </div>\n</template>\n<script>\nimport NavBar from '@/components/NavBarView.vue'\nimport { ref } from 'vue'\nexport default {\n    props: [\"isExpanded\"],\n    components: {\n        NavBar\n    }, \n    methods: {\n        handleBoardTypeTapped(item) {\n            this.selectedTaskBoardType = item\n        }\n    },\n    setup() {\n        var isSideBarExpanded = ref(false)\n        var selectedTaskBoardType = ref(\"All Team\")\n        var boards = ref([\"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\"])\n        return { isSideBarExpanded, boards, selectedTaskBoardType}\n    },\n    watch: { \n        isExpanded: function(newVal, oldVal) {\n            console.log('Prop changed isSideBarExpanwded: ', newVal)\n            this.isSideBarExpanded = newVal\n        }\n    }, \n    mounted() {\n\n    } \n}\n</script>\n<style scoped>\n/* .indicatorView {\n    width: 100%;\n    height: 3px;\n    background-color: var(--color-bar-dark);\n    margin-top: 5px;\n    border-radius: var(--border-radius-2);\n}\n.taskboardLabel {\n    font-weight: 600;\n    font-size: 15px;\n}\n.taskboardCell {\n  display: inline-block;\n  clear: both;\n  padding-right: 10px;\n  padding-left: 10px;\n  margin-right: 15px;\n  height: 60px;\n} */\n\n/* .taskboardListView {\n    width: 98%;\n    height: 80px;\n    margin-left: 15px;\n    overflow-x: auto;\n    padding-top: 15px;\n    list-style: none;\n    margin-left: 0;\n    white-space: nowrap;\n    align-items: flex-start;\n    flex-wrap: nowrap;\n    display: flex;\n    margin-left: 15px;\n}\n.boardContentView h3 {\n    float: left;\n    margin-left: 30px;\n    margin-top: 20px;\n} */\n \n.boardViews {\n    width: 100%;\n    height: 100%;\n    background-color: var(--color-background);\n   \n}\n/* .taskBoardContainerView {\n    height: 60px;\n    background-color: var(--color-info-light);\n    display: flex;\n    flex-direction: column;\n    justify-content: left;\n    align-items: start;\n    margin-top: 20px;\n    border-top-right-radius: var(--border-radius-1);\n    border-top-left-radius: var(--border-radius-1);\n}\n\n.taskBoardContainerView, .boardViews {\n    width: 98%;\n    margin-right: auto;\n    margin-left: auto;\n} */\n\n.boardContentView {\n    width: 99%;\n    height: 96%;\n    display: flex;\n    flex-direction: column;\n    justify-content: left;\n    align-items: start;\n    background-color: white;\n    margin: auto;\n    margin-top: 10px;\n    border-radius: var(--border-radius-1);\n}\n.board {\n    width: 100%;\n    height: 100%;\n}\n    \n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAO;;EAETA,KAAK,EAAC;AAAY;;EACdA,KAAK,EAAC;AAAkB;mBAJzC;;EAUyBA,KAAK,EAAC;AAAkB;;EACxBA,KAAK,EAAC;AAAY;;;;;uBAVvCC,mBAAA,CAgBM,OAhBNC,UAgBM,GAfFC,YAAA,CAA8CC,iBAAA;IAArCC,UAAU,OAAOC;2CAC1BC,mBAAA,CAaM,OAbNC,UAaM,GAZFD,mBAAA,CAWK,OAXLE,UAWK,GAVDC,mBAAA,yBAA4B,EAC5BP,YAAA,CAQIQ,gBAAA;IARGC,KAAyB,EAAzB;MAAA;IAAA;EAAyB;IANhDC,OAAA,EAAAC,QAAA,CAOoB,MAA2B,E,kBAAlCb,mBAAA,CAMSc,SAAA,QAbtBC,WAAA,CAOsCC,IAAA,CAAAC,QAAQ,EAAnBC,OAAO;2BAArBC,YAAA,CAMSC,gBAAA;QAN2BC,GAAG,EAAEH,OAAO,CAACI,SAAS;QAAEC,IAAI,EAAC;;QAP9EX,OAAA,EAAAC,QAAA,CAQe,MAIM,CAJNP,mBAAA,CAIM;UAJAP,KAAK,EAR1ByB,eAAA,CAQ4BR,IAAA,CAAAS,YAAY,CAACP,OAAO,CAACI,SAAS;YACxChB,mBAAA,CAAgG;UAA1FoB,GAAG,EAAER,OAAO,CAACS,YAAY;UAAE5B,KAAK,EAAC,kBAAkB;UAAE6B,OAAK,EAAAC,MAAA,IAAEb,IAAA,CAAAc,mBAAmB,CAACZ,OAAO;gCAT/Ga,UAAA,GAUkBzB,mBAAA,CAAiE,SAAjE0B,UAAiE,EAAAC,gBAAA,CAA9Bf,OAAO,CAACgB,WAAW,kBACtD5B,mBAAA,CAA6G,SAA7G6B,UAA6G,EAAnF,GAAC,GAAAF,gBAAA,KAAOG,IAAI,CAACC,YAAY,GAAGC,MAAM,CAACC,UAAU,CAACrB,OAAO,CAACsB,KAAK,EAAEC,OAAO,qB;QAXhHC,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}