{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PopupOverlay from './PopupOverlay.vue';\nimport FileViewer from '@/components/FileViewer.vue';\nimport PopupRouterView from './PopupRouterView.vue';\nimport { BASE_URL, USER_CACHE_KEY } from '@/config';\nimport AssigneeView from '@/components/AssigneeView.vue';\nimport CommentsView from '@/components/CommentsView.vue';\nimport ButtonCard from '@/components/ButtonCard.vue';\nimport DescriptionViewFrom from '@/components/DescriptionViewForm.vue';\nimport TagContainerView from '@/components/TagContainerView.vue';\nimport TextEditorView from '@/components/TextEditorView.vue';\nimport CommentEditorView from '@/components/TextEditorView.vue';\nimport AttachmentView from '@/components/AttachmentView.vue';\nimport AddCheckListView from '@/components/AddCheckListView.vue';\nimport MemberOverlayView from './MemberOverlayView.vue';\nimport axios from 'axios';\nimport { ref } from 'vue';\nimport CryptoJS from 'crypto-js';\n// import Editor from 'primevue/editor'\nimport { VTimePicker } from 'vuetify/labs/VTimePicker';\nimport { VueEditor } from 'vue2-editor';\nimport APIService from '@/APIService';\nexport default {\n  inject: [\"cryptojs\"],\n  components: {\n    PopupOverlay,\n    TextEditorView,\n    AttachmentView,\n    VTimePicker,\n    VueEditor,\n    AssigneeView,\n    CommentEditorView,\n    MemberOverlayView,\n    PopupRouterView,\n    FileViewer,\n    ButtonCard,\n    DescriptionViewFrom,\n    TagContainerView,\n    CommentsView,\n    AddCheckListView\n  },\n  setup() {\n    var members = ref([]);\n    var isTracked = ref(true);\n    var card = ref(null);\n    var list = ref(null);\n    var cardDesc = ref(\"Test description\");\n    var currentUser = ref(null);\n    var isTagTapped = ref(false);\n    var boardTags = ref([]);\n    var cardTags = ref([]);\n    var isDateTapped = ref(false);\n    var isAttachmentTapped = ref(false);\n    var selectedDate = ref(null);\n    var value = ref(null);\n    var time = ref(\"11:15\");\n    var timeStep = ref(\"10:10\");\n    var isLoading = ref(true);\n    var boardId = ref(\"\");\n    var isEditingDesc = ref(false);\n    var attachments = ref([]);\n    var isShowFileView = ref(false);\n    var selectedAttachment = ref(null);\n    var names = ref([\"Samuel\", \"Samuel Rockson\"]);\n    var isEditingComment = ref(false);\n    var commentEditorHeight = ref(50);\n    var descEditorHeight = ref(340);\n    var isMemberCardVisible = ref(false);\n    var isCheckListTapped = ref(false);\n    return {\n      members,\n      isTracked,\n      card,\n      cardDesc,\n      list,\n      isAttachmentTapped,\n      isLoading,\n      boardId,\n      attachments,\n      isShowFileView,\n      names,\n      commentEditorHeight,\n      descEditorHeight,\n      selectedAttachment,\n      currentUser,\n      isTagTapped,\n      boardTags,\n      cardTags,\n      isDateTapped,\n      selectedDate,\n      value,\n      time,\n      timeStep,\n      isEditingDesc,\n      isEditingComment,\n      isMemberCardVisible,\n      isCheckListTapped\n    };\n  },\n  async mounted() {\n    APIService.init();\n  },\n  created() {\n    // fetch from api\n    let routeParams = this.$route.params;\n    console.log(\"pop up params: \", routeParams);\n    this.getUserInfo();\n    this.boardId = routeParams.boardId;\n    let card_id = routeParams.cardId;\n    this.getCardBy(card_id);\n  },\n  methods: {\n    async handleJoinRemove(tappedMember) {\n      if (tappedMember._id == 'joinRemove') {\n        // If user is a member, remove from card else add to card\n        var cardMembers = this.card.members;\n        let userid = this.currentUser.id;\n        let memberFilter = cardMembers.filter(member => member.id === userid);\n        console.log('currentUser: ', userid, \"memberFilter: \", memberFilter, 'members: ', cardMembers, 'userid: ', userid, 'member ids: ', cardMembers.map(x => x.id != null));\n        if (memberFilter.length > 0) {\n          // remove\n          cardMembers = cardMembers.filter(member => member != userid);\n        } else {\n          // cardMembers.push(userid)\n        }\n        // call api to save\n        let params = {\n          card_id: this.card._id,\n          members: cardMembers\n        };\n        await APIService.updateCardMembership(params);\n        this.getCardBy(this.card._id);\n      }\n    },\n    getResourceURL(attachment) {\n      if (attachment.fileType == null || attachment.fileType.count == 0) {\n        return attachment.fileURL;\n      } else {\n        let fileType = attachment.fileType.toLowerCase();\n        if (fileType == \"png\" || fileType == \"jpg\" || fileType == \"jpeg\") {\n          return attachment.fileURL;\n        } else {\n          if (fileType == \"pdf\") {\n            return require(\"@/assets/pdfIcon.png\");\n          } else if (fileType == \"docx\") {\n            return require(\"@/assets/docxIcon.png\");\n          } else if (fileType == \"xlsx\") {\n            return require(\"@/assets/xlsxICon.png\");\n          } else if (fileType == \"pptx\") {\n            return require(\"@/assets/pptxIcon.png\");\n          } else if (fileType == \"mp4\") {\n            return require(\"@/assets/mp4Icon.png\");\n          } else if (fileType == \"mov\") {\n            return require(\"@/assets/movIcon.png\");\n          } else {\n            return attachment.fileURL;\n          }\n        }\n      }\n    },\n    handleCheckListTapped() {\n      this.isCheckListTapped = true;\n    },\n    handleShowMemberCard(isVisible) {\n      console.log(\"visible\");\n      this.isMemberCardVisible = isVisible;\n    },\n    handleCancelComment() {\n      this.isEditingComment = false;\n    },\n    handleEnableWriteComment() {\n      this.isEditingComment = true;\n    },\n    formatFileSize(attachment) {\n      let size = attachment.size / 1024 / 1000;\n      return size.toFixed(2);\n    },\n    dismissFileViewer() {\n      this.isShowFileView = false;\n    },\n    handleFileBrowserTapped(attachment) {\n      console.log(\"file browser tapped\");\n      this.selectedAttachment = attachment;\n      this.isShowFileView = true;\n    },\n    handleDidUploadFile(updatedCard) {\n      this.card = updatedCard;\n      this.attachments = updatedCard.attachments;\n    },\n    async handleSaveTag(tag) {\n      console.log(\"prepare to save tag\");\n      var params = {\n        boardId: this.boardId,\n        cardId: this.card.id,\n        name: tag.name,\n        colorHex: tag.color,\n        id: Date.now()\n      };\n      var fullURL = BASE_URL + \"board/createTag\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"tag resp data: \", data);\n        }\n      });\n    },\n    handleCancelDescEditing() {\n      this.isEditingDesc = false;\n      setTimeout(() => {\n        let editorElement = document.getElementById(\"editor\");\n        let scrollHeight = editorElement.scrollHeight;\n        editorElement.style.height = scrollHeight + \"px\";\n      }, 0);\n    },\n    handleDescEdit() {\n      this.isEditingDesc = true;\n    },\n    async handleSaveDate() {\n      let timeArray = this.time.split(':');\n      this.selectedDate.setHours(timeArray[0]);\n      this.selectedDate.setMinutes(timeArray[1]);\n      let dueDateMilliSec = this.selectedDate.getTime();\n      var params = {\n        card_id: this.card._id,\n        dueDate: dueDateMilliSec\n      };\n      var fullURL = BASE_URL + \"board/addDueDateToCard\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          if (data.statusCode == 200) {\n            this.card.dueDate = dueDateMilliSec;\n            this.selectedDate = null;\n            this.isDateTapped = false;\n            console.log(\"list and card info updated: \", data.resp);\n          }\n        }\n      });\n    },\n    async handleTagChanged(tag) {\n      if (tag.isChecked) {\n        this.cardTags.push(tag);\n      } else {\n        this.cardTags = this.cardTags.filter(item => item.id != tag.id);\n      }\n      var tags = [];\n      for (var index in this.cardTags) {\n        let cardTag = this.cardTags[index];\n        tags.push(cardTag.id);\n      }\n      var params = {\n        card_id: this.card._id,\n        tags: tags\n      };\n      var fullURL = BASE_URL + \"board/addTagsToCard\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"tags updated: \", data);\n        }\n      });\n    },\n    isTagChecked(tag) {\n      let tagFiler = this.cardTags.filter(item => item.id == tag.id);\n      return tagFiler.length > 0;\n    },\n    async fetchTags() {\n      var params = {\n        boardId: this.boardId\n      };\n      var fullURL = BASE_URL + \"board/getTags\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"fetch tag resps: \", data);\n          this.autoGrow();\n          if (data.resp != null) {\n            var tags = [];\n            for (var index in data.resp) {\n              let item = data.resp[index];\n              tags.push({\n                isChecked: this.isTagChecked(item),\n                name: item.name,\n                colorHex: item.colorHex,\n                id: item.id,\n                _id: item._id\n              });\n            }\n            this.boardTags = tags;\n          }\n        }\n      });\n    },\n    handleGoBack() {\n      let path = \"/b/\" + this.boardId;\n      this.$router.push({\n        path: path\n      });\n    },\n    async handleSaveDescription() {\n      console.log(\"save description tapped\");\n      let html = document.getElementById(\"editor\").innerHTML;\n      console.log(\"editor html: \", html);\n      this.isEditingDesc = false;\n      await APIService.saveDesc(html, this.card._id);\n    },\n    allowedHours: v => v % 2,\n    allowedMinutes: v => v >= 10 && v <= 50,\n    allowedStep: m => m % 10 === 0,\n    handleAttachmentTapped() {\n      this.isAttachmentTapped = true;\n    },\n    formatDate(card) {\n      let date = new Date(card.dueDate).toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric'\n      });\n      return date;\n    },\n    async getCardBy(card_id) {\n      var params = {\n        card_id: card_id\n      };\n      var fullURL = BASE_URL + \"board/getCardDetail\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          if (data.statusCode == 200) {\n            let resp = data.resp;\n            console.log(\"card detail data: \", resp);\n            if (resp != null) {\n              this.card = resp.card;\n              this.list = resp.list;\n              this.cardTags = resp.tags;\n              this.attachments = resp.attachments;\n              this.members = resp.members;\n              console.log('currentUser after fetch: ', this.currentUser);\n              if (this.currentUser != null) {\n                let memberFilter = this.members.filter(member => member.id === this.currentUser.id);\n                console.log('memberFilter: ', memberFilter);\n                console.log(\"members: \", this.members);\n                this.members.push({\n                  'fullName': memberFilter.length > 0 ? 'Leave' : 'Join',\n                  '_id': 'joinRemove'\n                });\n              }\n              this.fetchTags();\n            }\n          }\n        }\n      });\n    },\n    autoGrow() {\n      let element = document.getElementById(\"cardNameId\");\n      if (element != null) {\n        element.style.height = \"20px\";\n        element.style.height = element.scrollHeight + \"px\";\n      }\n    },\n    handleDateTapped() {\n      this.isDateTapped = true;\n    },\n    refreshTags() {\n      this.fetchTags();\n    },\n    handleTagTapped() {\n      console.log(\"Tags tapped\");\n      this.isTagTapped = true;\n    },\n    expandAll() {\n      console.log(\"finally updated...\");\n    },\n    getUserInfo() {\n      let userCacheString = localStorage.getItem(USER_CACHE_KEY);\n      if (userCacheString == null) {\n        this.$router.push({\n          path: \"/home\"\n        });\n      } else {\n        let userCache = JSON.parse(userCacheString);\n        let decryptionToken = userCache.token;\n        let encryptedUserData = userCache.user;\n        let decryptedData = CryptoJS.AES.decrypt(encryptedUserData, decryptionToken).toString(CryptoJS.enc.Utf8);\n        let cacheInfoObject = JSON.parse(decryptedData);\n        this.currentUser = cacheInfoObject.user;\n        console.log(\"currentUser: \", this.currentUser);\n      }\n    },\n    async handleContentInfoTapped() {\n      console.log(\"selectedCard: \", this.card);\n      var params = {\n        card_id: this.card._id,\n        cardName: this.card.cardName,\n        cardDesc: this.cardDesc\n      };\n      var fullURL = BASE_URL + \"board/updateCard\";\n      await axios.post(fullURL, params).then(response => {\n        if (response.data != null) {\n          let data = response.data;\n          console.log(\"card detail resp data: \", data);\n        }\n      });\n    }\n  },\n  watch: {\n    // card() { \n    //    this.getUserInfo()\n    // }, \n    list(newVal, oldVal) {\n      this.selectedList = newVal;\n    },\n    tags(newVal, oldVal) {\n      console.log('tags popover prop changed: ', newVal, ' | was: ', oldVal);\n      var tags = [];\n      for (var index in newVal) {\n        let item = newVal[index];\n        tags.push({\n          isChecked: false,\n          name: item.name,\n          colorHex: item.colorHex,\n          id: item.id,\n          _id: item._id\n        });\n      }\n      this.cardTags = tags;\n      this.fetchTags();\n      let curentDate = new Date();\n      let hour = curentDate.getHours();\n      let minute = curentDate.getMinutes();\n      this.time = hour.toString() + \":\" + minute.toString();\n    },\n    selectedDate(newVal, oldVal) {\n      console.log('date changed: ', newVal, ' | was: ', oldVal);\n    }\n  }\n};","map":{"version":3,"names":["PopupOverlay","FileViewer","PopupRouterView","BASE_URL","USER_CACHE_KEY","AssigneeView","CommentsView","ButtonCard","DescriptionViewFrom","TagContainerView","TextEditorView","CommentEditorView","AttachmentView","AddCheckListView","MemberOverlayView","axios","ref","CryptoJS","VTimePicker","VueEditor","APIService","inject","components","setup","members","isTracked","card","list","cardDesc","currentUser","isTagTapped","boardTags","cardTags","isDateTapped","isAttachmentTapped","selectedDate","value","time","timeStep","isLoading","boardId","isEditingDesc","attachments","isShowFileView","selectedAttachment","names","isEditingComment","commentEditorHeight","descEditorHeight","isMemberCardVisible","isCheckListTapped","mounted","init","created","routeParams","$route","params","console","log","getUserInfo","card_id","cardId","getCardBy","methods","handleJoinRemove","tappedMember","_id","cardMembers","userid","id","memberFilter","filter","member","map","x","length","updateCardMembership","getResourceURL","attachment","fileType","count","fileURL","toLowerCase","require","handleCheckListTapped","handleShowMemberCard","isVisible","handleCancelComment","handleEnableWriteComment","formatFileSize","size","toFixed","dismissFileViewer","handleFileBrowserTapped","handleDidUploadFile","updatedCard","handleSaveTag","tag","name","colorHex","color","Date","now","fullURL","post","then","response","data","handleCancelDescEditing","setTimeout","editorElement","document","getElementById","scrollHeight","style","height","handleDescEdit","handleSaveDate","timeArray","split","setHours","setMinutes","dueDateMilliSec","getTime","dueDate","statusCode","resp","handleTagChanged","isChecked","push","item","tags","index","cardTag","isTagChecked","tagFiler","fetchTags","autoGrow","handleGoBack","path","$router","handleSaveDescription","html","innerHTML","saveDesc","allowedHours","v","allowedMinutes","allowedStep","m","handleAttachmentTapped","formatDate","date","toLocaleDateString","month","day","hour","minute","element","handleDateTapped","refreshTags","handleTagTapped","expandAll","userCacheString","localStorage","getItem","userCache","JSON","parse","decryptionToken","token","encryptedUserData","user","decryptedData","AES","decrypt","toString","enc","Utf8","cacheInfoObject","handleContentInfoTapped","cardName","watch","newVal","oldVal","selectedList","curentDate","getHours","getMinutes"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/CardPopupView.vue"],"sourcesContent":["<template>\n    <PopupRouterView>\n      <PopupOverlay/>\n    <v-container v-if=\"card == null\">\n    <v-row>\n      <v-col cols=\"12\" md=\"12\">\n        <v-skeleton-loader\n          class=\"mx-auto border\"\n          width=\"300\"\n          height=\"300\"\n          type=\"image, article\"\n        ></v-skeleton-loader>\n      </v-col>\n    </v-row>\n  </v-container>\n      <div class=\"card\" v-if=\"card != null\" @click.self=\"handleGoBack\">\n        <div class=\"cardInfoContainer\">\n             <div class=\"contentContainer\">\n                <textarea type=\"text\" v-on:blur=\"handleContentInfoTapped()\"  @input=\"autoGrow()\" class=\"cardNameField\" id=\"cardNameId\" v-model=\"card.cardName\"></textarea>\n                <div class=\"statusContainer\">\n                    <div class=\"statusIconTitleView\">\n                    <img src=\"@/assets/statusInfo.png\" alt=\"\">\n                        <label for=\"\">Status</label>\n                    </div>\n                    <label class=\"listTagContainer\">{{ list.listName }}</label>\n                </div>\n\n                <div class=\"statusContainer\">\n                    <div class=\"statusIconTitleView\">\n                        <img src=\"@/assets/duedate.png\" alt=\"\">\n                        <label for=\"\">Due Date</label>\n                    </div>\n                    <label class=\"dueDateTitelLabel\">{{ formatDate(card) }}</label>\n                </div>\n\n                <div class=\"statusContainer\">\n                    <div class=\"statusIconTitleView\">\n                        <img src=\"@/assets/assignee.png\" alt=\"\">\n                        <label for=\"\">Assignee</label>\n                    </div>\n                    <div class=\"assigneeContainerView\">\n                        <v-chip-group selected-class=\"text-primary\" column>\n                        <v-chip  v-for=\"(item, index) in names\" :key=\"index\" style=\"border-radius: 19px;\">\n                            <AssigneeView :title=\"item\" imageIcon=\"https://cdn-prd.content.metamorphosis.com/wp-content/uploads/sites/6/2022/12/shutterstock_781327003-1.jpg\" class=\"asigneeCellView\"></AssigneeView>\n                       </v-chip>\n                      </v-chip-group>\n                    </div>\n                </div>\n\n                <div class=\"statusContainer\">\n                    <div class=\"statusIconTitleView\">\n                        <img src=\"@/assets/tags.png\" alt=\"\">\n                        <label for=\"\">Tags</label>\n                    </div>\n                    <div class=\"tagItemsView\"> \n                      <v-chip-group selected-class=\"text-primary\" column>\n                      <v-chip v-for=\"tag in cardTags\" :key=\"tag\" style=\"border-radius: 8px; disable\">\n                        <label class=\"tagLabel\" :style=\"{'background-color': tag.colorHex}\">{{ tag.name }}</label>\n                       </v-chip>\n                      </v-chip-group>\n                    </div>\n                </div>\n\n                <Label class=\"attachmentsTitleLabel\">Description</Label>\n                <TextEditorView class=\"descriptionContainer\" :editorHeight=\"descEditorHeight\" :cardDescription=\"card.description\" :isEditingDesc=\"this.isEditingDesc\" @isEditing=\"handleDescEdit\" @isMemberCardVisible=\"handleShowMemberCard\"/>\n                <div class=\"descriptionBtns\" v-if=\"isEditingDesc\">\n                    <button class=\"saveDescriptionBtn\" @click=\"handleSaveDescription\">Save</button>\n                    <button class=\"canelDescripBtn\" @click=\"handleCancelDescEditing\">Cancel</button>\n                </div>\n                <label class=\"attachmentsTitleLabel\" v-if=\" this.attachments.length > 0\">Attachments</label>\n                <div class=\"attachmentListView\">\n                    <div class=\"attachmentCell\" v-for=\"(attachment, index) in this.attachments\" :key=\"index\" @click=\"handleFileBrowserTapped(attachment)\">\n                         <img :src=\"this.getResourceURL(attachment)\" class=\"attchmentPreview\">\n                         <div class=\"attachmentInfoContainer\">\n                             <label class=\"attachmentFileNameLabel\">{{ attachment.fileName }}</label>\n                             <label class=\"attachmentDateLabel\">{{ this.formatFileSize(attachment) }}MB</label>\n                         </div>\n                    </div>\n                </div>\n\n\n                <Label class=\"attachmentsTitleLabel\">Comments</Label>\n                <CommentEditorView class=\"descriptionContainer\" id=\"commentEditor\" :editorHeight=\"commentEditorHeight\" :isEditingDesc=\"isEditingComment\" v-if=\"isEditingComment\"  @isMemberCardVisible=\"handleShowMemberCard\"/>\n                <div v-else class=\"addCommentPlaceholderView\" @click=\"handleEnableWriteComment\">\n                    <img src=\"@/assets/writecomment.png\" alt=\"\">\n                    <label for=\"\">Write a comment</label>\n                </div>\n                <div class=\"descriptionBtns\" v-if=\"isEditingComment\">\n                    <button class=\"saveDescriptionBtn\" @click=\"handleSaveComment\">Save</button>\n                    <button class=\"canelDescripBtn\" @click=\"handleCancelComment\">Cancel</button>\n                </div>\n                 <CommentsView class=\"commentsContainerView\"/>\n             </div>\n\n            <div class=\"controlsContainer\">\n             <label class=\"memberTitleLabel\">Members</label>\n             <div class=\"membersContainer\" v-if=\"members != null\">\n                <div class=\"memberCell\" v-for=\"(member) in members\" :key=\"member._id\" @click=\"handleJoinRemove(member)\">\n                    <img v-if=\"member._id == 'joinRemove'\" :class=\"member.fullName\" class=\"memberPhoto\">\n                   <img v-else :src=\"member.picture != null ? member.picture : require(`@/assets/add.svg`)\" class=\"memberPhoto\">\n                   <label class=\"memberNameLabel\" v-if=\"member._id == 'joinRemove'\">{{ member.fullName }}</label>\n                   <label class=\"memberNameLabel\" v-else>{{ member.fullName }}</label>\n                </div>\n             </div>\n             <label class=\"seeMoreMembersLabel\" v-if=\"members.length > 5\">See more</label>\n\n\n             <label class=\"memberLabel\">Action</label>\n             <ButtonCard imageIcon=\"eyeViews.png\" title=\"Tracking\" class=\"dueDateField\" isTracked=\"true\"/>\n             <ButtonCard imageIcon=\"priority.png\" title=\"Priority level\"/>\n             <ButtonCard imageIcon=\"assignee.png\" title=\"Assign\"/>\n             <ButtonCard imageIcon=\"move.png\" title=\"Move\"/>\n\n             <label class=\"memberLabel\">Manage</label>\n             <ButtonCard imageIcon=\"tags.png\" title=\"Tags\" @click=\"handleTagTapped\"/>\n             <ButtonCard imageIcon=\"duedate.png\" title=\"Due Date\" @click=\"handleDateTapped\"/>\n             <ButtonCard imageIcon=\"poll.png\" title=\"Poll\"/>\n             <ButtonCard imageIcon=\"checklist.png\" title=\"Checklist\" @click=\"handleCheckListTapped\"/>\n             <ButtonCard imageIcon=\"fileAttachment.png\" title=\"Attachments\" @click=\"handleAttachmentTapped\"/>\n             <label class=\"memberLabel\">Connect</label>\n             <ButtonCard imageIcon=\"share.png\" title=\"Share\"/>\n             <ButtonCard imageIcon=\"copyTemplate.png\" title=\"Copy URL\"/>\n             <label class=\"memberLabel\">Archive</label>\n             <ButtonCard imageIcon=\"archive.png\" title=\"Delete\"/>\n             </div>\n        </div>\n\n        <v-overlay v-model=\"isTagTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: '500px'\" activator=\"tagBtn\" contained>\n            <TagContainerView @handleSaveTag=\"handleSaveTag\" @refreshTags=\"refreshTags\" @handleTagChanged=\"handleTagChanged\" :boardTags=\"this.boardTags\" class=\"tagContainerView\"/>\n        </v-overlay>\n        <v-overlay v-model=\"isDateTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" activator=\"tagBtn\" contained>\n          <div class=\"dueDateMainView\">\n           <div class=\"dateContainerView\">\n               <v-container>\n                 <v-row justify=\"space-around\">\n                   <v-date-picker show-adjacent-months v-model=\"selectedDate\"></v-date-picker>\n                 </v-row>\n                </v-container>\n            </div>\n            <div class=\"timePickerContainer\">   \n        <v-row justify=\"space-around\">\n      <v-time-picker\n        v-model=\"time\"\n        format=\"12hr\"\n        scrollable\n      ></v-time-picker>\n    </v-row>\n        </div>\n            <button :class=\"selectedDate == null ? `dateBtnDisabled` : `saveDateBtn`\" :disabled=\"selectedDate == null\" @click=\"handleSaveDate\">Save Date</button>\n        </div>\n        </v-overlay>\n\n        <v-overlay v-model=\"isAttachmentTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" contained>\n            <AttachmentView :card=\"this.card._id\" class=\"attachmentContainerView\" @fileUploadComplete=\"handleDidUploadFile\"/>\n        </v-overlay>\n\n        <v-overlay v-model=\"isCheckListTapped\" class=\"align-center justify-center overLayContainer\" style=\"padding-left: 500px\" contained>\n            <AddCheckListView :card=\"this.card._id\" class=\"attachmentContainerView\" @fileUploadComplete=\"handleDidUploadFile\"/>\n        </v-overlay>\n\n        <v-overlay v-model=\"isShowFileView\" class=\"align-center justify-center overLayContainer\" contained>\n            <FileViewer class=\"fileViewer\" :attachment=\"this.selectedAttachment\" @dismissFileViewer=\"dismissFileViewer\" />\n        </v-overlay>\n\n        <v-overlay v-model=\"isMemberCardVisible\" class=\"align-center justify-center\" activator=\"#commentEditor\" contained opacity=\"0\">\n           <div class=\"memberCarView\">\n           </div>\n       </v-overlay>\n    \n    </div>\n    </PopupRouterView>\n  </template>\n\n<script>\nimport PopupOverlay from './PopupOverlay.vue';\nimport FileViewer from '@/components/FileViewer.vue'\nimport PopupRouterView from './PopupRouterView.vue';\nimport { BASE_URL, USER_CACHE_KEY } from '@/config'\nimport AssigneeView from '@/components/AssigneeView.vue'\nimport CommentsView from '@/components/CommentsView.vue'\n\nimport ButtonCard from '@/components/ButtonCard.vue'\nimport DescriptionViewFrom from '@/components/DescriptionViewForm.vue'\n\nimport TagContainerView from '@/components/TagContainerView.vue';\nimport TextEditorView from '@/components/TextEditorView.vue'\nimport CommentEditorView from '@/components/TextEditorView.vue'\n\nimport AttachmentView from '@/components/AttachmentView.vue';\nimport AddCheckListView from '@/components/AddCheckListView.vue'\nimport MemberOverlayView from './MemberOverlayView.vue';\n\nimport axios from 'axios';\nimport { ref } from 'vue'\n\nimport CryptoJS from 'crypto-js'\n// import Editor from 'primevue/editor'\nimport { VTimePicker } from 'vuetify/labs/VTimePicker'\nimport { VueEditor } from 'vue2-editor'\nimport APIService from '@/APIService'\n  \nexport default {\n  inject: [\"cryptojs\"],\n  components: {\n    PopupOverlay, TextEditorView, AttachmentView, VTimePicker, VueEditor, AssigneeView, CommentEditorView, MemberOverlayView,\n    PopupRouterView, FileViewer, ButtonCard, DescriptionViewFrom, TagContainerView, CommentsView, AddCheckListView\n  },\n  setup() {\n    var members = ref([])\n    var isTracked = ref(true)\n    var card = ref(null)\n    var list = ref(null)\n    var cardDesc = ref(\"Test description\")\n    var currentUser = ref(null)\n    var isTagTapped = ref(false)\n    var boardTags = ref([])\n    var cardTags = ref([])\n    var isDateTapped = ref(false)\n    var isAttachmentTapped = ref(false)\n    var selectedDate = ref(null)\n    var value = ref(null)\n    var time = ref(\"11:15\")\n    var timeStep = ref(\"10:10\")\n    var isLoading = ref(true)\n    var boardId = ref(\"\")\n    var isEditingDesc = ref(false)\n    var attachments = ref([])\n    var isShowFileView = ref(false) \n    var selectedAttachment = ref(null)\n    var names = ref([\"Samuel\", \"Samuel Rockson\"])\n    var isEditingComment = ref(false)\n    var commentEditorHeight = ref(50)\n    var descEditorHeight = ref(340)\n    var isMemberCardVisible = ref(false)\n    var isCheckListTapped = ref(false)\n    return { \n          members, isTracked, card, cardDesc, list, isAttachmentTapped, isLoading, boardId, attachments, isShowFileView, names, commentEditorHeight, descEditorHeight, selectedAttachment,\n          currentUser, isTagTapped, boardTags, cardTags, isDateTapped, selectedDate, value, time, timeStep, isEditingDesc, isEditingComment, isMemberCardVisible, isCheckListTapped\n        }\n    },\n    async mounted() {\n        APIService.init()\n    },\n    created() {\n      // fetch from api\n      let routeParams = this.$route.params\n      console.log(\"pop up params: \", routeParams)\n      this.getUserInfo()\n      this.boardId = routeParams.boardId\n      let card_id = routeParams.cardId\n      this.getCardBy(card_id)\n    },\n    methods: {\n       async handleJoinRemove(tappedMember) {\n          if (tappedMember._id == 'joinRemove') {\n               // If user is a member, remove from card else add to card\n            var cardMembers = this.card.members\n            let userid = this.currentUser.id\n            let memberFilter = cardMembers.filter(member => member.id === userid)\n            console.log('currentUser: ', userid,  \"memberFilter: \", memberFilter, 'members: ', cardMembers, 'userid: ', userid, 'member ids: ', cardMembers.map(x => x.id != null))\n            if (memberFilter.length > 0) {\n                // remove\n                cardMembers = cardMembers.filter(member => member != userid)\n            } else {\n                // cardMembers.push(userid)\n            }\n            // call api to save\n            let params = {\n                card_id: this.card._id, \n                members: cardMembers\n            }\n            await APIService.updateCardMembership(params)\n            this.getCardBy(this.card._id)\n          }\n        },\n        getResourceURL(attachment) {\n            if (attachment.fileType == null || attachment.fileType.count == 0) {\n                return attachment.fileURL\n            } else {\n                let fileType = attachment.fileType.toLowerCase()\n                if (fileType  == \"png\" || fileType == \"jpg\" || fileType == \"jpeg\") {\n                    return attachment.fileURL\n                } else {\n                    if (fileType == \"pdf\") {\n                        return require(\"@/assets/pdfIcon.png\")\n                    } else if (fileType == \"docx\") {\n                        return require(\"@/assets/docxIcon.png\")\n                    } else if (fileType == \"xlsx\") {\n                        return require(\"@/assets/xlsxICon.png\")\n                    } else if (fileType == \"pptx\") {\n                        return require(\"@/assets/pptxIcon.png\")\n                    } else if (fileType == \"mp4\") {\n                        return require(\"@/assets/mp4Icon.png\")\n                    } else if (fileType == \"mov\") {\n                        return require(\"@/assets/movIcon.png\")\n                    } else {\n                        return attachment.fileURL\n                    }\n                }\n            }\n        },\n        handleCheckListTapped() {\n            this.isCheckListTapped = true\n        },\n        handleShowMemberCard(isVisible) {\n            console.log(\"visible\")\n            this.isMemberCardVisible = isVisible \n        },\n        handleCancelComment() {\n            this.isEditingComment = false\n        },\n        handleEnableWriteComment() {\n            this.isEditingComment = true \n        },\n        formatFileSize(attachment) {\n          let size =  (attachment.size / 1024) / 1000\n          return size.toFixed(2)\n        },\n        dismissFileViewer() {\n            this.isShowFileView = false\n        },\n        handleFileBrowserTapped(attachment) {\n            console.log(\"file browser tapped\")\n            this.selectedAttachment = attachment\n            this.isShowFileView = true \n        },\n        handleDidUploadFile(updatedCard) {\n            this.card = updatedCard\n            this.attachments = updatedCard.attachments\n        },\n        async handleSaveTag(tag) {\n         console.log(\"prepare to save tag\")\n         var params = {\n            boardId: this.boardId, \n            cardId: this.card.id,\n            name: tag.name, \n            colorHex: tag.color, \n            id: Date.now()\n         }\n         var fullURL = BASE_URL + \"board/createTag\"\n         await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n             let data = response.data\n             console.log(\"tag resp data: \", data)\n            }\n          })\n        }, \n        handleCancelDescEditing() {\n            this.isEditingDesc = false \n            setTimeout(()=>{\n             let editorElement = document.getElementById(\"editor\")\n             let scrollHeight = editorElement.scrollHeight\n             editorElement.style.height = scrollHeight + \"px\";\n            }, 0)\n        },\n        handleDescEdit() {\n            this.isEditingDesc = true \n        },\n        async handleSaveDate() {\n            let timeArray = this.time.split(':')\n            this.selectedDate.setHours(timeArray[0])\n            this.selectedDate.setMinutes(timeArray[1])\n            let dueDateMilliSec = this.selectedDate.getTime()\n            var params = {\n                card_id: this.card._id, \n                dueDate: dueDateMilliSec\n        }\n        var fullURL = BASE_URL + \"board/addDueDateToCard\"\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            if (data.statusCode == 200) {\n                this.card.dueDate = dueDateMilliSec\n                this.selectedDate = null\n                this.isDateTapped = false \n                console.log(\"list and card info updated: \", data.resp)\n              }\n             }\n          })\n        },\n      async handleTagChanged(tag) {\n            if (tag.isChecked) {\n                this.cardTags.push(tag)\n            } else {\n                this.cardTags = this.cardTags.filter(item => item.id != tag.id);\n            }\n          var tags = []\n          for (var index in this.cardTags) {\n             let cardTag = this.cardTags[index]\n             tags.push(cardTag.id)\n           }\n          var params = {\n            card_id: this.card._id, \n            tags: tags\n          }\n          var fullURL = BASE_URL + \"board/addTagsToCard\"\n          await axios.post(fullURL, params).then((response) => {\n            if (response.data != null) {\n             let data = response.data\n             console.log(\"tags updated: \", data)\n            }\n          })\n        },\n      isTagChecked(tag) {\n          let tagFiler = this.cardTags.filter(item => item.id == tag.id)\n          return tagFiler.length > 0\n      },\n      async fetchTags() {\n          var params = {\n            boardId: this.boardId\n          }\n          var fullURL = BASE_URL + \"board/getTags\"\n          await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n             let data = response.data\n             console.log(\"fetch tag resps: \", data)\n             this.autoGrow()\n             if (data.resp != null) {\n                var tags = []\n                for (var index in data.resp) {\n                    let item = data.resp[index]\n                    tags.push({isChecked: this.isTagChecked(item), name: item.name, colorHex: item.colorHex, id: item.id, _id: item._id})\n                }\n                this.boardTags = tags\n             }\n            }\n          })\n        },\n      handleGoBack() {\n        let path = \"/b/\" + this.boardId\n        this.$router.push({path: path})\n      },\n      async handleSaveDescription() {\n          console.log(\"save description tapped\")\n          let html = document.getElementById(\"editor\").innerHTML\n          console.log(\"editor html: \", html)\n          this.isEditingDesc = false \n          await APIService.saveDesc(html, this.card._id)\n      },\n      allowedHours: v => v % 2,\n      allowedMinutes: v => v >= 10 && v <= 50,\n      allowedStep: m => m % 10 === 0,\n      handleAttachmentTapped() {\n          this.isAttachmentTapped = true \n      },\n      formatDate(card) {\n          let date =  new Date(card.dueDate).toLocaleDateString('en-US', {\n              month: 'short', day: 'numeric' , hour: 'numeric', minute: 'numeric'\n          })\n          return date\n      },\n      async getCardBy(card_id) {\n        var params = {\n            card_id: card_id\n        }\n        var fullURL = BASE_URL + \"board/getCardDetail\"\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            if (data.statusCode == 200) {\n                let resp = data.resp\n                console.log(\"card detail data: \", resp)\n                if (resp != null) {\n                   this.card = resp.card\n                   this.list = resp.list\n                   this.cardTags = resp.tags\n                   this.attachments = resp.attachments\n                   this.members = resp.members\n                   console.log('currentUser after fetch: ', this.currentUser)\n                   if (this.currentUser != null) {\n                    let memberFilter = this.members.filter(member => member.id === this.currentUser.id)\n                    console.log('memberFilter: ', memberFilter)\n                    console.log(\"members: \", this.members)\n                    this.members.push({'fullName': memberFilter.length > 0 ? 'Leave' : 'Join', '_id': 'joinRemove'})\n                   }\n                  \n                   this.fetchTags()\n                }\n              }\n             }\n          })\n        },\n        autoGrow() {\n            let element = document.getElementById(\"cardNameId\")\n            if (element != null) {\n                element.style.height = \"20px\";\n                element.style.height = (element.scrollHeight) + \"px\";\n            }\n        }, \n        handleDateTapped() {\n            this.isDateTapped = true \n        },\n        refreshTags() {\n            this.fetchTags()\n        },\n        handleTagTapped() {\n            console.log(\"Tags tapped\")\n            this.isTagTapped = true \n        },\n        expandAll() {\n            console.log(\"finally updated...\")\n        },\n        getUserInfo() {\n            let userCacheString = localStorage.getItem(USER_CACHE_KEY)\n            if (userCacheString == null) {\n                this.$router.push({path: \"/home\"})\n            } else {\n                let userCache = JSON.parse(userCacheString)\n                let decryptionToken = userCache.token\n                let encryptedUserData = userCache.user\n                let decryptedData = CryptoJS.AES.decrypt(encryptedUserData, decryptionToken).toString(CryptoJS.enc.Utf8)\n                let cacheInfoObject = JSON.parse(decryptedData)\n                this.currentUser = cacheInfoObject.user\n               console.log(\"currentUser: \", this.currentUser)\n            }\n        }, \n        async handleContentInfoTapped() {\n          console.log(\"selectedCard: \", this.card)\n          var params = {\n            card_id: this.card._id, \n            cardName: this.card.cardName, \n            cardDesc: this.cardDesc\n         }\n         var fullURL = BASE_URL + \"board/updateCard\"\n         await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n             let data = response.data\n             console.log(\"card detail resp data: \", data)\n            }\n          })\n        }\n    }, \n    watch: { \n        // card() { \n        //    this.getUserInfo()\n        // }, \n        list(newVal, oldVal) { \n           this.selectedList = newVal\n        }, \n        tags(newVal, oldVal) { \n           console.log('tags popover prop changed: ', newVal, ' | was: ', oldVal)\n           var tags = []\n            for (var index in newVal) {\n                let item = newVal[index]\n                tags.push({isChecked: false, name: item.name, colorHex: item.colorHex, id: item.id, _id: item._id})\n            }\n           this.cardTags = tags\n           this.fetchTags()\n           let curentDate = new Date()\n           let hour = curentDate.getHours()\n           let minute = curentDate.getMinutes()\n           this.time = hour.toString() + \":\" + minute.toString()\n        }, \n        selectedDate(newVal, oldVal) {\n            console.log('date changed: ', newVal, ' | was: ', oldVal)\n        }\n    }\n}\n</script>\n\n\n<style lang=\"scss\" scoped>\n.memberCarView {\n    height: 500px;\n    width: 300px;\n    background-color: wheat;\n    border-radius: var(--border-radius-1);\n}\n.addCommentPlaceholderView label {\n    font-weight: 500;\n    font-size: 14px;\n    color: var(--color-dark);\n    margin-top: auto;\n    margin-bottom: auto;\n    margin-left: 8px;\n}\n\n.addCommentPlaceholderView img {\n    width: 20px;\n    height: 20px;\n    object-fit: contain;\n    margin-top: auto;\n    margin-bottom: auto;\n    margin-left: 10px;\n}\n.addCommentPlaceholderView {\n    display: flex;\n    height: 44px;\n    width: 100%;\n    background-color: var(--color-background);\n    border-bottom-right-radius: 8px;\n    border-bottom-left-radius: 8px;\n    border-top-right-radius: 8px;\n    margin-top: 4px;\n    margin-bottom: 10px;\n    border: 1px solid var(--color-light);\n}\n.attachmentListView {\n    display: grid;\n    grid-template-columns: repeat(2, 260px);\n    grid-template-rows: repeat(auto, 100px);\n    width: 600px;\n}\n\n.assigneeContainerView {\n    display: grid;\n    grid-template-columns: repeat(2, auto);\n    grid-template-rows: repeat(100, auto);\n    width: 600px;\n    margin-left: 50px;\n}\n\n\n.statusIconTitleView label, .dueDateTitelLabel {\n  margin-left: 8px;\n  font-weight: 600;\n  font-size: 14px;\n  color: var(--color-dark);\n}\n\n.statusContainer img {\n    width: 24px;\n    height: 24px;\n    object-fit: contain;\n}\n.statusIconTitleView span {\n    width: 15px;\n    height: 15px;\n    margin-right: 14px;\n    margin-top: -8px;\n}\n.statusIconTitleView label {\n    font-weight: 600;\n}\n.statusIconTitleView {\n    display: flex;\n    align-items: center;\n    width: 140px;\n}\n.statusContainer {\n    display: flex;\n    max-width: 90%;\n    margin-top: 20px;\n}\n.fileViewer {\n    height: 100vh;\n    width: 100vw;\n}\n.attachmentDateLabel {\n    font-weight: 300;\n    font-size: 12px;\n    display: flex;\n    margin-top: 4px; \n    align-items: left;\n    justify-content: left;\n    text-align: left;\n}\n.attachmentFileNameLabel {\n    font-weight: 500;\n    font-size: 15px;\n    display: flex;\n    align-items: left;\n    justify-content: left;\n    max-height: 50px;\n    margin-top: 8px;\n    text-align: left;\n    overflow: hidden;\n}\n.attachmentInfoContainer {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    margin-left: 10px;\n    width: calc(100% - 110px);\n    height: 80px;\n    padding-bottom: 8px;\n}\n.attchmentPreview {\n    width: 60px;\n    height: 60px;\n    border-radius: 8px;\n    margin-top: auto;\n    margin-bottom: auto;\n    margin-left: 10px;\n    object-fit: contain;\n    overflow: hidden;\n}\n\n.attachmentsTitleLabel {\n    margin-top: 20px;\n    font-weight: 600;\n    font-size: 16px;\n    margin-bottom: 10px;\n    float: left;\n    display: flex;\n}\n.attachmentCell {\n    display: flex;\n    height: 90px;\n    width: 98%;\n    margin-bottom: 5px;\n    background-color: var(--color-background);\n    border-radius: 8px;\n}\n.descriptionBtns {\n    display: flex;\n    justify-content: space-between;\n    width: 160px;\n    height: 40px;\n    margin-bottom: 10px;\n}\n.canelDescripBtn {\n    font-weight: 600;\n    font-size: 16px;\n    width: 80px;\n    height: 40px;\n    color: var(--color-dark);\n}\n\n.saveDescriptionBtn, .saveDescriptionDisabledBtn { \n  width: 70px;\n  height: 40px;\n  font-weight: 600;\n  font-size: 16px;\n  color: white;\n  background-color: var(--color-bar-dark);\n  border: 0px solid transparent;\n  border-radius: var(--border-radius-1);\n}\n\n.saveDescriptionDisabledBtn {\n    background-color: var(--color-light);\n    color: var(--color-dark-variant);\n}\n\n.attachmentScrollContainer {\n    height: 350px;\n    width: 100%;\n    background-color: orangered;\n}\n.dateContainerView {\n    width: 300px;\n    height: 480px;\n}\n.v-time-picker {\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    margin-top: -70px;\n    margin-left: 30px;\n}\n.timePickerContainer {\n    height: 280px;\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n}\n.attachmentContainerView {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: white;\n    width: 300px;\n    height: 400px;\n    border-radius: var(--border-radius-2);\n}\n.saveDateBtn, .dateBtnDisabled { \n  margin-top: 10px;\n  margin-bottom: 10px;\n  width: 260px;\n  height: 44px;\n  margin-right: auto;\n  margin-left: auto;\n  font-weight: 600;\n  font-size: 16px;\n  color: white;\n  background-color: var(--color-bar-dark);\n  border: 0px solid transparent;\n  border-radius: var(--border-radius-1);\n}\n.dateBtnDisabled {\n    background-color: var(--color-light);\n    color: var(--color-dark-variant);\n}\n\n.dueDateMainView {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: white;\n    /* height: 550px; */\n    /* min-height: 970px; */\n    min-height: 970px;\n    border-radius: var(--border-radius-2);\n    overflow-y: scroll;\n}\n\n\n\n.tagCell {\n    background-color: #8B81F7;\n    height: 100%;\n    width: 100%;\n}\n.tagItemsView {\n    width: 480px;\n    margin-left: 50px;\n}\n.tagLabel {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    justify-items: center;\n    padding: 0;\n    height: 40px;\n    margin-right: -12px;\n    margin-left: -12px;\n    padding-right: 12px;\n    padding-left: 12px;\n    border-radius: var(--border-radius-1);\n    color: white;\n    font-weight: 600;\n    background-color: #8B81F7;\n}\n.tagContainerView {\n    z-index: 9999999;\n    width: 300px;\n    height: 600px;\n    margin-right: auto;\n    margin-left: auto;\n    /* margin-right: calc((100vw / 4)); */\n    background-color: white;\n    border-radius: var(--border-radius-1);\n}\n.descriptionContainer {\n    border: 1px solid var(--color-light);\n    border-radius: var(--border-radius-1);\n    margin-right: 500px;\n}\n.listTagContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 38px;\n    padding-right: 10px;\n    padding-left: 10px;\n    color: var(--color-dark);\n    font-weight: 600;\n    background-color: var(--color-background);\n    border-radius: var(--border-radius-1);\n    text-transform: uppercase;\n    overflow: hidden;\n    white-space:nowrap;\n    text-overflow: clip;\n}\n.dueDateField {\n    width: 165px;\n    margin-left: 10px;\n}\n.ownerRoleLabel {\n    display: flex;\n    font-weight: 700;\n    font-size: 10px;\n    overflow: hidden;\n    text-align: center;\n    color: var(--color-dark);\n}\n.onwerNameLabel {\n    display: flex;\n    font-weight: 700;\n    font-size: 13px;\n    overflow: hidden;\n    text-align: center;\n}\n.ownerProfile, .assignedProfile {\n    width: 32px;\n    height: 32px;\n    object-fit: fill;\n    overflow: hidden;\n    border-radius: var(--border-radius-1);\n}\n\n.assignedProfile {\n    margin-left: 20px;\n}\n.profileInfoContainer, .assignInfoContainer {\n    display: flex;\n    flex-direction: column;\n    height: 40px;\n    margin-left: 5px;\n}\n\n.profileTagInfoContainer {\n    display: flex;\n    width: 100%;\n    height: 50px;\n    margin-top: 5px;\n}\n.cardNameField {\n    display: flex;\n    margin-top: 20px;\n    font-size: 20px;\n    font-weight: 700;\n    resize: none;\n    color: var(--color-dark);\n    margin-bottom: 8px;\n    min-height: 20px;\n}\n\n.memberCell {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n.memberNameLabel img {\n    margin-left: 10px;\n}\n.memberNameLabel {\n    max-lines: 1;\n    text-overflow: ellipsis;\n    max-height: 20px;\n    font-weight: 500;\n    overflow: hidden;\n    font-size: 12px;\n    margin-top: 4px;\n}\n.memberPhoto {\n    width: 30px;\n    height: 30px;\n    border-radius: var(--border-radius-1);\n    object-fit: fill;\n    overflow: hidden;\n    &.Join {\n        content: url('@/assets/add.svg');\n    }\n    &.Leave {\n        content: url('@/assets/remove.svg');\n    }\n}\n.memberTitleLabel {\n    display: flex;\n    margin: 10px;\n    margin-top: 24px;\n    font-weight: 600;\n    font-size: 14px;\n}\n\n.seeMoreMembersLabel {\n    margin-right: auto;\n    margin-left: auto;\n    text-align: center;\n    font-weight: 400;\n    font-size: 12px;\n    margin-top: 8px;\n}\n\n.memberLabel {\n    display: flex;\n    margin: 10px;\n    margin-top: 20px;\n    font-weight: 600;\n    font-size: 14px;\n}\n.contentContainer {\n    display: flex;\n    flex-direction: column;\n    width: 550px;\n    min-height: 94vh;\n    border-top-left-radius: var(--border-radius-2);\n    border-bottom-left-radius: var(--border-radius-2);\n    padding-left: 20px;\n    padding-right: 15px;\n}\n.controlsContainer {\n    display: flex;\n    flex-direction: column;\n    width: 190px;\n    min-height: 94vh;\n    border-top-right-radius: var(--border-radius-2);\n    border-bottom-right-radius: var(--border-radius-2);\n}\n.membersContainer {\n    display: grid;\n    grid-template-columns: repeat(4, 40px);\n    grid-template-rows: repeat(4, 56px);\n    width: 160px;\n    height: 100px;\n    justify-content: center;\n    margin-right: auto;\n    margin-left: auto;\n    grid-column-gap: 1px;\n    grid-row-gap: 1px;\n    margin-top: 4px;\n    z-index: 99;\n}\n\n.cardInfoContainer {\n    display: flex;\n    width: 740px;\n    min-height: 94vh;\n    margin-right: auto;\n    margin-left: auto;\n    margin-top: 3vh;\n    margin-bottom: 3vh;\n    background-color: var(--color-card-background);\n    z-index: 999999999999;\n    border-radius: var(--border-radius-2);\n    padding-bottom: 30px;\n}\n .card {\n    width: 100vw;\n    height: 100vh;\n    background-color: transparent;\n    overflow-y: scroll;\n    z-index: 999999999999999;\n }\n</style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}