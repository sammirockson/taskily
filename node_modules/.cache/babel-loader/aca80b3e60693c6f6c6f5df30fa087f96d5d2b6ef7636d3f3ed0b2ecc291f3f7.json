{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6482da86\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"calendar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_calendar = _resolveComponent(\"v-calendar\");\n  const _component_v_sheet = _resolveComponent(\"v-sheet\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <NavBar :isExpanded=\\\"this.isSideBarExpanded\\\"/> \"), _createVNode(_component_v_row, {\n    class: \"fill-height\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_col, null, {\n      default: _withCtx(() => [_createVNode(_component_v_sheet, {\n        height: \"600\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_calendar, {\n          ref: \"calendar\",\n          modelValue: _ctx.today,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.today = $event),\n          events: _ctx.events,\n          color: \"primary\",\n          type: \"month\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"events\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_v_row","default","_withCtx","_component_v_col","_component_v_sheet","height","_component_v_calendar","ref","modelValue","_ctx","today","_cache","$event","events","color","type","_"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/views/CalendarView.vue"],"sourcesContent":["<template>\n    <div class=\"calendar\">\n        <!-- <NavBar :isExpanded=\"this.isSideBarExpanded\"/> -->\n    <v-row class=\"fill-height\">\n    <v-col>\n      <v-sheet height=\"600\">\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          type=\"month\"\n        ></v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n        \n    </div>\n</template>\n<script>\nimport NavBar from '@/components/NavBarView.vue'\nimport { ref } from 'vue'\nimport { useDate } from 'vuetify'\n\nexport default {\n    props: [\"isExpanded\"],\n    components: {\n        NavBar\n    }, \n    // setup() {\n    //     var isSideBarExpanded = ref(true)\n    //     return { isSideBarExpanded }\n    // },\n    watch: { \n        isExpanded: function(newVal, oldVal) {\n            console.log('Prop changed isSideBarExpanwded: ', newVal)\n            this.isSideBarExpanded = newVal\n        }\n    },\n    data: () => ({\n      focus: '',\n      events: [],\n      colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],\n      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n    }),\n    mounted () {\n      const adapter = useDate()\n      this.fetchEvents({ start: adapter.startOfDay(adapter.startOfMonth(new Date())), end: adapter.endOfDay(adapter.endOfMonth(new Date())) })\n    },\n    methods: {\n      getEventColor (event) {\n        return event.color\n      },\n      fetchEvents ({ start, end }) {\n        const events = []\n\n        const min = start\n        const max = end\n        const days = (max.getTime() - min.getTime()) / 86400000\n        const eventCount = this.rnd(days, days + 20)\n\n        for (let i = 0; i < eventCount; i++) {\n          const allDay = this.rnd(0, 3) === 0\n          const firstTimestamp = this.rnd(min.getTime(), max.getTime())\n          const first = new Date(firstTimestamp - (firstTimestamp % 900000))\n          const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000\n          const second = new Date(first.getTime() + secondTimestamp)\n\n          events.push({\n            title: this.names[this.rnd(0, this.names.length - 1)],\n            start: first,\n            end: second,\n            color: this.colors[this.rnd(0, this.colors.length - 1)],\n            allDay: !allDay,\n          })\n        }\n\n        this.events = events\n      },\n      rnd (a, b) {\n        return Math.floor((b - a + 1) * Math.random()) + a\n      },\n    },  \n}\n</script>\n<style scoped>\n.calendar {\n    height: 100vh;\n    width: calc(100vw - 200px);\n    background-color: pink;\n}\n    \n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAU;;;;;;uBAArBC,mBAAA,CAgBM,OAhBNC,UAgBM,GAfFC,mBAAA,sDAAuD,EAC3DC,YAAA,CAYMC,gBAAA;IAZCL,KAAK,EAAC;EAAa;IAH9BM,OAAA,EAAAC,QAAA,CAII,MAUQ,CAVRH,YAAA,CAUQI,gBAAA;MAdZF,OAAA,EAAAC,QAAA,CAKM,MAQU,CARVH,YAAA,CAQUK,kBAAA;QARDC,MAAM,EAAC;MAAK;QAL3BJ,OAAA,EAAAC,QAAA,CAMQ,MAMc,CANdH,YAAA,CAMcO,qBAAA;UALZC,GAAG,EAAC,UAAU;UAPxBC,UAAA,EAQmBC,IAAA,CAAAC,KAAK;UARxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQmBH,IAAA,CAAAC,KAAK,GAAAE,MAAA;UACbC,MAAM,EAAEJ,IAAA,CAAAI,MAAM;UACfC,KAAK,EAAC,SAAS;UACfC,IAAI,EAAC;;QAXfC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}