{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-48804fb0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"boardBNavBar\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"mainBoardConentView\"\n};\nconst _hoisted_3 = {\n  class: \"boardListsContainer\"\n};\nconst _hoisted_4 = [\"onInput\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"addListBtn buttonload\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa fa-circle-o-notch fa-spin\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  id: \"addIcon\",\n  class: \"material-symbols-outlined\"\n}, \"add\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"footerTitleContainer\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"addCardLabel\"\n}, \"New List\")], -1 /* HOISTED */));\nconst _hoisted_11 = [_hoisted_9, _hoisted_10];\nconst _hoisted_12 = {\n  class: \"badgeAndTitleContainer\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"colorBadge\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_14 = {\n  class: \"listNameLabel\"\n};\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"listNameLabel\"\n}, \"•••\", -1 /* HOISTED */));\nconst _hoisted_16 = {\n  class: \"cardAndFooterContainer\"\n};\nconst _hoisted_17 = {\n  key: 1,\n  class: \"createListContainer\"\n};\nconst _hoisted_18 = [\"onInput\", \"id\"];\nconst _hoisted_19 = {\n  key: 0,\n  class: \"addListBtn buttonload\"\n};\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa fa-circle-o-notch fa-spin\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_21 = [\"onClick\"];\nconst _hoisted_22 = [\"onClick\"];\nconst _hoisted_23 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  id: \"addIcon\",\n  class: \"material-symbols-outlined\"\n}, \"add\", -1 /* HOISTED */));\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"footerTitleContainer\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"addCardLabel\"\n}, \"New Card\")], -1 /* HOISTED */));\nconst _hoisted_25 = [_hoisted_23, _hoisted_24];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  const _component_CardView = _resolveComponent(\"CardView\");\n  const _component_CardDetailView = _resolveComponent(\"CardDetailView\");\n  const _component_v_overlay = _resolveComponent(\"v-overlay\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_NavBar, {\n    isExpanded: this.isSideBarExpanded\n  }, null, 8 /* PROPS */, [\"isExpanded\"]), _hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" <DraggableView  class=\\\"cardCell\\\"\\n                    v-model=\\\"this.board.lists\\\" \\n                    :group=\\\"board\\\" \\n                    item-key=\\\"id\\\">\\n                <template #item=\\\"{element}\\\">\\n                   <div>{{element.listName}}</div>\\n                 </template>\\n              </DraggableView> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.board.lists, (list, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"listContainer\",\n      key: list.id\n    }, [_createElementVNode(\"div\", {\n      class: \"createNewList\",\n      style: _normalizeStyle({\n        display: list.headerType == `creatingList` ? 'flex' : 'none'\n      })\n    }, [_withDirectives(_createElementVNode(\"textarea\", {\n      name: \"text\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newListName = $event),\n      onInput: $event => $options.dynamicTextArea(index),\n      placeholder: \"Create New List\",\n      class: \"createNewListField\",\n      id: \"createNewListField_id\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_4), [[_vModelText, $setup.newListName]]), _ctx.isSavingCard ? (_openBlock(), _createElementBlock(\"button\", _hoisted_5, [_hoisted_6, _createTextVNode(\" Creating... \")])) : (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      class: \"addListBtn\",\n      onClick: $event => $options.createANewList(list, index)\n    }, \"Create List\", 8 /* PROPS */, _hoisted_7))], 4 /* STYLE */), _createElementVNode(\"div\", {\n      class: \"listFooterView\",\n      onClick: $event => $options.handleAddList(list, index),\n      style: _normalizeStyle({\n        display: list.headerType == `addList` ? 'flex' : 'none'\n      })\n    }, [..._hoisted_11], 12 /* STYLE, PROPS */, _hoisted_8), _createElementVNode(\"div\", {\n      class: \"listHeaderView\",\n      style: _normalizeStyle({\n        display: list.headerType == `showListName` ? 'flex' : 'none'\n      })\n    }, [_createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _createElementVNode(\"label\", _hoisted_14, _toDisplayString(list.listName), 1 /* TEXT */)]), _hoisted_15], 4 /* STYLE */), _createElementVNode(\"div\", _hoisted_16, [list.cards != null ? (_openBlock(true), _createElementBlock(_Fragment, {\n      key: 0\n    }, _renderList(list.cards, card => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"cardContainer\",\n        key: card.id\n      }, [_createVNode(_component_CardView, {\n        class: \"cardCell\",\n        card: card,\n        onClick: $options.handleCardTapped\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" <img v-if=\\\"card.attachments.count > 0\\\" src=\\\"@/assets/cardPhoto.png\\\" class=\\\"cardImage\\\">\\n                             <div class=\\\"dueDateContainer\\\">\\n                             <img src=\\\"@/assets/clock.png\\\" class=\\\"clockIcon\\\">\\n                                 <label class=\\\"dueDateLabel\\\">25 Feb 2024</label>\\n                             </div>\\n                             <label class=\\\"cardNameLabel\\\">{{ card.cardName }}</label>\\n                             <div class=\\\"progressContainer\\\">\\n                                <v-progress-linear\\n                                :location=\\\"false\\\"\\n                                bg-color=\\\"#92aed9\\\"\\n                                buffer-color=\\\"#92aed9\\\"\\n                                color=\\\"#05C597\\\"\\n                                height=\\\"10\\\"\\n                                max=\\\"9\\\"\\n                                min=\\\"0\\\"\\n                                model-value=\\\"2\\\"\\n                                rounded>\\n                             </v-progress-linear>\\n                             </div> \\n                             <div class=\\\"viewMemberContainerView\\\">\\n                                <div class=\\\"boardInfoView\\\">\\n                                    <img src=\\\"@/assets/eyeViews.png\\\" class=\\\"boardIcon\\\">\\n                                    <label for=\\\"\\\">4.7k</label>\\n                                    <img src=\\\"@/assets/comments.png\\\" class=\\\"boardIcon\\\">\\n                                    <label for=\\\"\\\">20</label>\\n                                    <img src=\\\"@/assets/attachment.png\\\" class=\\\"boardIcon\\\">\\n                                    <label for=\\\"\\\">99</label>\\n                                </div>\\n                              <div class=\\\"membersContainer\\\">\\n                                <span class=\\\"avatar\\\">\\n        <img  src=\\\"https://picsum.photos/70\\\">\\n    </span>\\n  <span class=\\\"avatar\\\">\\n        <img src=\\\"https://picsum.photos/80\\\">\\n    </span>\\n  <span class=\\\"avatar\\\">\\n        <img src=\\\"https://picsum.photos/90\\\">\\n    </span>\\n  <span class=\\\"avatar\\\">\\n       <img src=\\\"https://picsum.photos/100\\\">\\n    </span>\\n    <label for=\\\"\\\">+99</label>\\n                              </div>\\n                             </div> \")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"card\", \"onClick\"])]);\n    }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), list.isCreateCard == true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_withDirectives(_createElementVNode(\"textarea\", {\n      name: \"text\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.newCardName = $event),\n      onInput: $event => $options.autoGrow(index),\n      placeholder: \"Give your card a name\",\n      class: \"addListInputField\",\n      id: `newCardField_` + index\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_18), [[_vModelText, $setup.newCardName]]), _ctx.isSavingCard ? (_openBlock(), _createElementBlock(\"button\", _hoisted_19, [_hoisted_20, _createTextVNode(\" Adding... \")])) : (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      class: \"addListBtn\",\n      onClick: $event => $options.handleCreateCard(list, index)\n    }, \"Add Card\", 8 /* PROPS */, _hoisted_21))])) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 2\n    }, [list.cards != null && list.cards.length > 0 || list.isAddCard == true ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"listFooterView\",\n      onClick: $event => $options.handleAddCard(list, index)\n    }, [..._hoisted_25], 8 /* PROPS */, _hoisted_22)) : _createCommentVNode(\"v-if\", true)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createVNode(_component_v_overlay, {\n    modelValue: $setup.isCardTapped,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.isCardTapped = $event),\n    class: \"align-center justify-center overLayContainer\",\n    contained: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_CardDetailView, {\n      onOverlayDismissed: $options.handleOverlayDismissed\n    }, null, 8 /* PROPS */, [\"onOverlayDismissed\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["_createElementVNode","class","key","id","_hoisted_9","_hoisted_10","_hoisted_23","_hoisted_24","_createElementBlock","_createVNode","_component_NavBar","isExpanded","isSideBarExpanded","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","_Fragment","_renderList","board","lists","list","index","style","_normalizeStyle","display","headerType","name","_cache","$event","$setup","newListName","onInput","$options","dynamicTextArea","placeholder","_hoisted_4","_ctx","isSavingCard","_hoisted_5","_hoisted_6","_createTextVNode","onClick","createANewList","_hoisted_7","handleAddList","_hoisted_11","_hoisted_8","_hoisted_12","_hoisted_13","_hoisted_14","_toDisplayString","listName","_hoisted_15","_hoisted_16","cards","card","_component_CardView","handleCardTapped","default","_withCtx","_","isCreateCard","_hoisted_17","newCardName","autoGrow","_hoisted_18","_hoisted_19","_hoisted_20","handleCreateCard","_hoisted_21","length","isAddCard","handleAddCard","_hoisted_25","_hoisted_22","_component_v_overlay","modelValue","isCardTapped","contained","_component_CardDetailView","onOverlayDismissed","handleOverlayDismissed"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/BoardContentView.vue"],"sourcesContent":["<template>\n    <div>\n        <NavBar :isExpanded=\"this.isSideBarExpanded\"/>\n        <div class=\"boardBNavBar\">\n\n        </div>\n        <div class=\"mainBoardConentView\">\n            <div class=\"boardListsContainer\">\n                <!-- <DraggableView  class=\"cardCell\"\n                    v-model=\"this.board.lists\" \n                    :group=\"board\" \n                    item-key=\"id\">\n                <template #item=\"{element}\">\n                   <div>{{element.listName}}</div>\n                 </template>\n              </DraggableView> -->\n\n                 <div class=\"listContainer\" v-for=\"(list, index) in this.board.lists\" :key=\"list.id\">\n                    <div class=\"createNewList\" :style=\"{display: list.headerType ==  `creatingList` ? 'flex' : 'none'}\">\n                            <textarea name=\"text\" v-model=\"newListName\" @input=\"dynamicTextArea(index)\" placeholder=\"Create New List\" class=\"createNewListField\" id=\"createNewListField_id\"></textarea>\n                            <button v-if=\"isSavingCard\" class=\"addListBtn buttonload\">\n                               <i class=\"fa fa-circle-o-notch fa-spin\"></i> Creating... \n                            </button>\n                           <button v-else class=\"addListBtn\" @click=\"createANewList(list, index)\">Create List</button>\n                    </div>\n                    <div class=\"listFooterView\" @click=\"handleAddList(list, index)\" :style=\"{display: list.headerType ==  `addList` ? 'flex' : 'none'}\">\n                        <span id=\"addIcon\" class=\"material-symbols-outlined\">add</span>\n                        <div class=\"footerTitleContainer\">\n                            <button class=\"addCardLabel\">New List</button>\n                        </div>\n                     </div>\n                     <div class=\"listHeaderView\" :style=\"{display: list.headerType ==  `showListName` ? 'flex' : 'none'}\">\n                         <div class=\"badgeAndTitleContainer\">\n                            <div class=\"colorBadge\"></div>\n                            <label class=\"listNameLabel\">{{ list.listName }}</label>\n                         </div>\n                         <label class=\"listNameLabel\">•••</label>\n                     </div>\n                     <div class=\"cardAndFooterContainer\">\n                        <div v-if=\"list.cards != null\" class=\"cardContainer\"  v-for=\"card in list.cards\" :key=\"card.id\">\n                          <CardView class=\"cardCell\" :card=\"card\" @click=\"handleCardTapped\">\n                             <!-- <img v-if=\"card.attachments.count > 0\" src=\"@/assets/cardPhoto.png\" class=\"cardImage\">\n                             <div class=\"dueDateContainer\">\n                             <img src=\"@/assets/clock.png\" class=\"clockIcon\">\n                                 <label class=\"dueDateLabel\">25 Feb 2024</label>\n                             </div>\n                             <label class=\"cardNameLabel\">{{ card.cardName }}</label>\n                             <div class=\"progressContainer\">\n                                <v-progress-linear\n                                :location=\"false\"\n                                bg-color=\"#92aed9\"\n                                buffer-color=\"#92aed9\"\n                                color=\"#05C597\"\n                                height=\"10\"\n                                max=\"9\"\n                                min=\"0\"\n                                model-value=\"2\"\n                                rounded>\n                             </v-progress-linear>\n                             </div> \n                             <div class=\"viewMemberContainerView\">\n                                <div class=\"boardInfoView\">\n                                    <img src=\"@/assets/eyeViews.png\" class=\"boardIcon\">\n                                    <label for=\"\">4.7k</label>\n                                    <img src=\"@/assets/comments.png\" class=\"boardIcon\">\n                                    <label for=\"\">20</label>\n                                    <img src=\"@/assets/attachment.png\" class=\"boardIcon\">\n                                    <label for=\"\">99</label>\n                                </div>\n                              <div class=\"membersContainer\">\n                                <span class=\"avatar\">\n        <img  src=\"https://picsum.photos/70\">\n    </span>\n  <span class=\"avatar\">\n        <img src=\"https://picsum.photos/80\">\n    </span>\n  <span class=\"avatar\">\n        <img src=\"https://picsum.photos/90\">\n    </span>\n  <span class=\"avatar\">\n       <img src=\"https://picsum.photos/100\">\n    </span>\n    <label for=\"\">+99</label>\n                              </div>\n                             </div> -->\n                          </CardView>\n                        </div>\n                        <div v-if=\"list.isCreateCard == true\" class=\"createListContainer\">\n                            <textarea name=\"text\" v-model=\"newCardName\" @input=\"autoGrow(index)\" placeholder=\"Give your card a name\" class=\"addListInputField\" :id=\"`newCardField_` + index\"></textarea>\n                            <button v-if=\"isSavingCard\" class=\"addListBtn buttonload\">\n                               <i class=\"fa fa-circle-o-notch fa-spin\"></i> Adding... \n                            </button>\n                           <button v-else class=\"addListBtn\" @click=\"handleCreateCard(list, index)\">Add Card</button>\n                        </div>\n                      <div v-else v-if=\"list.cards != null && list.cards.length > 0 || list.isAddCard == true\" class=\"listFooterView\" @click=\"handleAddCard(list, index)\">\n                        <span id=\"addIcon\" class=\"material-symbols-outlined\">add</span>\n                        <div class=\"footerTitleContainer\">\n                            <button class=\"addCardLabel\">New Card</button>\n                        </div>\n                       </div>\n                      \n                    </div>\n                    \n                 </div>\n\n           </div>\n        </div>\n        <v-overlay  v-model=\"isCardTapped\" class=\"align-center justify-center overLayContainer\" contained>\n            <CardDetailView @overlayDismissed=\"handleOverlayDismissed\"/>\n        </v-overlay>\n    </div>\n</template>\n<script>\nimport NavBar from '@/components/NavBarView.vue'\nimport CardDetailView from '@/components/CardDetailView.vue'\nimport DraggableView from 'vuedraggable'\nimport CardView from '@/components/CardView.vue'\nimport { ref } from 'vue'\n\nimport { BASE_URL } from '@/config'\nimport axios from 'axios';\n\nexport default {\n    props: [\"isExpanded\"],\n    components: {\n        NavBar, CardView, CardDetailView, DraggableView\n    }, \n    setup() {\n        var isSideBarExpanded = ref(true)\n        var board = ref([])\n        // var isCreateCard = ref(false)\n        var isCardTapped = ref(false)\n        var newCardName = ref(\"\")\n        var newListName = ref(\"\")\n        var boardId = ref(\"\")\n        return { isSideBarExpanded, board, newCardName, newListName, isCardTapped , boardId}\n    },\n    methods: {\n        handleOverlayDismissed() {\n            this.isCardTapped = false \n        },\n        handleCardTapped() {\n            this.isCardTapped = true \n        },\n      async createANewList(list, index) {\n        // this.board.lists = this.board.lists.filter(listItem => listItem.id != 'listPlaceholder');\n        // this.board.lists[index] = { id: \"newList\", listName: this.newListName, headerType: \"showListName\", isAddCard: true, isCreateList: false, cards: [] }\n        // this.board.lists.push(\n        //    { id: \"listPlaceholder\", listName: \"New List\", headerType: \"addList\", isAddCard: false, isCreateList: false, cards: []}\n        // )\n        // Create List\n        var params = {\n          listName: this.newListName,\n          boardId: this.boardId,\n          isAddCard: true, \n          isCreateList: false,\n          headerType: \"showListName\",\n          id: Date.now(), \n          owner: \"1721545684258\"\n        }\n        var fullURL = BASE_URL + \"board/newList\"\n        console.log(\"full url: \", fullURL, \"params: \", params)\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            console.log(\"resp data: \", data)\n            if (data.statusCode == 200) {\n                console.log(\"created new list: \", data.resp)\n                this.getBoardBy(this.boardId)\n              }\n             }\n          })\n          this.newListName = \"\"\n        },\n        handleAddList(list, index) {\n            list.isCreateList = true \n            list.headerType = \"creatingList\"\n            this.board.lists[index] = list\n        },\n        dynamicTextArea(index) {\n            let element = document.getElementById(\"createNewListField_id\")\n            element.style.height = \"15px\";\n            element.style.height = (element.scrollHeight) + \"px\";\n        },\n        autoGrow(index) {\n            let element = document.getElementById(`newCardField_` + index)\n            element.style.height = \"15px\";\n            element.style.height = (element.scrollHeight) + \"px\";\n        },\n       async handleCreateCard(list, index) {\n            // if (list.id == \"listPlaceholder\") {\n            //     list.cards = [\n            //       {id: \"cardOne\", cardName: this.newCardName, subTitle: \"Meet up to discuss early stage of the design\", description: String, imgURL: \"google.com\", progress: 0, isAddCard: false, isCreateList: false, attachments: [File]}, \n            //     ]\n            //    this.board.lists.push(\n            //     { id: \"listPlaceholder\", listName: \"Add New List\", isAddCard: false, isCreateList: false, cards: []}\n            //    )\n            // } else {\n            //     list.cards.push(\n            //     {id: \"cardOne\", cardName: this.newCardName, subTitle: \"Meet up to discuss early stage of the design\", description: String, imgURL: \"\",isAddCard: false, isCreateList: false, progress: 0, attachments: [File]}, \n            // )\n            // }\n           \n            // list.isCreateCard = false \n            // this.board[index] = list\n        var params = {\n          cardName: this.newCardName,\n          boardId: this.boardId,\n          listId: list.id,\n          id: Date.now(), \n          owner: \"1721545684258\"\n        }\n        var fullURL = BASE_URL + \"board/newCard\"\n        console.log(\"full url: \", fullURL, \"params: \", params)\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            console.log(\"card resp data: \", data)\n            if (data.statusCode == 200) {\n                console.log(\"created new card: \", data.resp)\n                this.getBoardBy(this.boardId)\n              }\n             }\n          })\n          this.newCardName = \"\"\n        },\n        handleAddCard(list, index) {\n            list.isCreateCard = true \n            this.board[index] = list\n        }, \n     async getBoardBy(boardId) {\n        var params = {\n            boardId: boardId\n        }\n        var fullURL = BASE_URL + \"board/byId\"\n        console.log(\"full url: \", fullURL, \"params: \", params)\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            console.log(\"resp data: \", data)\n            if (data.statusCode == 200) {\n                let apiBoard = data.resp\n                console.log(\"board info: \", apiBoard, \"list length: \", \"lists: \", apiBoard.lists)\n                apiBoard.lists.push({ id: \"listPlaceholder\", listName: \"Add New List\", headerType: \"addList\", footerType: \"add\", isAddCard: false, isCreateList: false, cards: []})\n                apiBoard.lists.sort((a,b)=>new Date(a.createdAt) - new Date(b.createdAt))\n                this.board = apiBoard\n              }\n             }\n          })\n        }\n    },\n    watch: { \n        isExpanded: function(newVal, oldVal) {\n            console.log('Prop changed isSideBarExpanwded: ', newVal)\n            this.isSideBarExpanded = newVal\n        }\n    },  \n    mounted() {\n        let routeParams = this.$route.params\n        let boardId = routeParams.id\n        this.boardId = boardId\n        console.log(\"params id: \", boardId)\n        this.getBoardBy(boardId)\n\n    //     this.board = { id: \"board1\", lists: [\n    //         { id: \"listTwo\", listName: \"TASK\", headerType: \"showListName\", cards: [\n    //             {id: \"cardOne\", cardName: \"[FGE TEAM] Upcoming Tasks and Bugs (Week 28, July 8 - July 12, 2024)\", description: \"\", imgURL: \"google.com\", isAddCard: false, isCreateList: false, progress: 0, attachments: [File]}, \n    //         ]\n    //        },  \n    //        { id: \"listPlaceholder\", listName: \"Add New List\", headerType: \"addList\", footerType: \"add\", isAddCard: false, isCreateList: false, cards: []}\n    //      ] \n    //    }\n    }\n}\n</script>\n<style scoped>\n.avatar img {\n  border-radius: 50%;\n  position: relative;\n  margin-left: -12px;\n  z-index: 1;\n  height: 18px;\n  width: 18px;\n  padding: 1px;\n  background-color: white;\n  margin-top: 4px;\n}\n\n.membersContainer {\n    display: flex;\n    width: 90px;\n    height: 80px;\n    float: right;\n    padding-right: 10px;\n    direction: ltr;  /* This is to get the stack with left on top */\n    padding-left: 20px;\n}\n\n.membersContainer label {\n    display: block;\n    font-weight: 500;\n    font-size: 10px;\n    margin-left: 4px;\n    margin-top: 6px;\n}\n\n.boardInfoView label {\n    font-weight: 500;\n    font-size: 10px;\n    margin-right: 8px;\n    margin-left: 1px;\n}\n.boardIcon {\n    width: 15px;\n    height: 15px;\n}\n.boardInfoView {\n    display: flex;\n    width: 120px;\n    height: 50px;\n    justify-content: space-evenly;\n    margin-top: 5px;\n}\n.viewMemberContainerView {\n    display: flex;\n    height: 38px;\n    width: 100%;\n    background-color: white;\n    border-radius: var(--border-radius-1);\n    /* border-bottom-right-radius: var(--border-radius-1);\n    border-bottom-left-radius: var(--border-radius-1); */\n    margin-left: 8px;\n    justify-content: space-between;\n}\n.progressContainer {\n    width: 90%;\n    height: 34px;\n    margin-left: 10px;\n    margin-top: 10px;\n}\n.cardNameLabel {\n    width: 200px;\n    margin-top: 8px;\n    margin-left: 10px;\n    margin-right: 10px;\n    font-weight: 700;\n    font-size: 13px;\n    text-align: left;\n    white-space: pre-wrap;\n}\n\n.clockIcon {\n    width: 14px;\n    height: 14px;\n}\n.dueDateLabel {\n    color: white;\n    font-weight: 400;\n    font-size: 14px;\n    margin-left: 4px;\n}\n.dueDateContainer {\n    width: 124px;\n    height: 30px;\n    margin-top: 8px;\n    margin-left: 8px;\n    border-radius: var(--border-radius-1);\n    background-color: #FC6363;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.cardImage {\n    width: 100%;\n    height: 150px;\n    object-fit: fill;\n}\n.footerTitleContainer {\n    width: auto;\n    height: 24px;\n    margin-top: 12px;\n    overflow: hidden;\n}\n#addIcon {\n    padding: 0;\n    margin: 0;\n    margin-top: 12px;\n    font-weight: 700;\n}\n\n.addCardLabel {\n    margin: 0;\n    padding: 0;\n    font-weight: 600;\n    font-size: 15px;\n    margin-left: 4px;\n}\n.cardAndFooterContainer {\n    height: 100%;\n    width: 100%;\n    overflow-y: scroll;\n    -webkit-overflow-scrolling: touch;\n    padding-bottom: 50px;\n    -ms-overflow-style: none;  /* Internet Explorer 10+ */\n    scrollbar-width: none;  /* Firefox */\n    padding-top: 8px;\n}\n.listFooterView {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    height: 50px;\n    width: 100%;\n    border-radius: var(--border-radius-1);\n    border: 1px solid var(--color-light);\n    z-index: 9999;\n    overflow: hidden;\n    background-color: white;\n    /* margin-top: -8px; */\n}\n\n.addListBtn {\n    display: block;\n    width: 100px;\n    height: 34px;\n    background-color: #FC6363;\n    color: white;\n    border-radius: var(--border-radius-1);\n    margin-left: 8px;\n    font-size: 14px;\n    font-weight: 600;\n    margin-top: 10px;\n    margin-bottom: 10px;\n}\n.addListInputField, .createNewListField {\n  padding: 8px;\n  width: 200px;\n  margin-left: 8px;\n  margin-right: 8px;\n  border: 1px solid var(--color-light);\n  border-radius: var(--border-radius-1);\n  text-align: left;\n  resize: none;\n  overflow: hidden;\n  height: 40px;\n  max-height: 500px;\n  max-lines: 200;\n  font-weight: 500;\n  font-size: 14px;\n}\n\n.createListContainer {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    /* height: 140px; */\n    width: 98%;\n    padding-top: 10px;\n    z-index: 9999;\n    overflow: hidden;\n    background-color: white;\n    align-items: center;\n    margin-top: 10px;\n    margin-right: auto;\n    margin-left: auto;\n    border-radius: var(--border-radius-1)\n}\n\n.createNewList {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    /* height: 140px; */\n    width: 98%;\n    padding-top: 10px;\n    z-index: 9999;\n    overflow: hidden;\n    background-color: white;\n    align-items: center;\n    margin-right: auto;\n    margin-left: auto;\n    border-radius: var(--border-radius-1)\n}\n\n\n.cardCell {\n    overflow: hidden;\n    width: 220px;\n    min-height: 50px;\n    margin-bottom: 10px;\n    border: 1px solid var(--color-light);\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    border-radius: var(--border-radius-1);\n    /* border-bottom-right-radius: var(--border-radius-2);\n    border-bottom-left-radius: var(--border-radius-2); */\n}\n\n.badgeAndTitleContainer {\n    display: flex;\n    flex-direction: row;\n}\n\n.badgeAndTitleContainer label {\n    margin-left: 10px;\n}\n\n.listNameLabel {\n    height: 24px;\n    font-weight: 600;\n    font-size: 15px;\n    margin-top: auto;\n    margin-bottom: auto;\n}\n.colorBadge {\n    width: 28px;\n    height: 28px;\n    background-color: orange;\n    border-radius: var(--border-radius-1);\n    margin-top: auto;\n    margin-bottom: auto;\n    margin-left: 15px;\n}\n\n.listHeaderView {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    height: 50px;\n    width: 100%;\n    border-radius:  var(--border-radius-1);;\n    /* border-top-right-radius: var(--border-radius-2);\n    border-top-left-radius: var(--border-radius-2); */\n    border: 1px solid var(--color-light);\n    padding-right: 15px;\n    background-color: white;\n}\n\n\n.boardListsContainer {\n    width: 100%;\n    height: calc(100vh - 160px);\n    white-space: nowrap;\n    overflow-x: auto;\n    overflow-y: hidden;\n    -webkit-overflow-scrolling: touch;\n    padding-right: 20px;\n}\n\n.listContainer {\n    width: 220px;\n    /* background-color: #eee; */\n    float: none;\n    height: 100%;\n    margin: 0 0.50%;\n    display: inline-block;\n    zoom: 1;\n    /* overflow: hidden; */\n    /* overflow-y: scroll; */\n    overflow: hidden;\n}\n\n.mainBoardConentView {\n    width: calc(100% - 10px);\n    height: calc(100% - 130px);\n    margin-left: auto;\n    margin-right: auto;\n    padding-top: 20px;\n}\n\n.boardBNavBar {\n    width: calc(100% - 30px);\n    height: 50px;\n    background-color: white;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 15px;\n    border-radius: var(--border-radius-1);\n}\n    \n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}