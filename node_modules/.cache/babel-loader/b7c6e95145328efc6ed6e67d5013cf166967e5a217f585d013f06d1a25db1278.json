{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { BASE_URL, USER_CACHE_KEY } from '@/config';\nimport CryptoJS from 'crypto-js';\nimport axios from 'axios';\nexport default {\n  inject: [\"cryptojs\"],\n  setup() {\n    var boardName = ref(\"\");\n    var isCreatingBoard = ref(false);\n    var currentUser = ref({});\n    return {\n      boardName,\n      isCreatingBoard,\n      currentUser\n    };\n  },\n  mounted() {\n    let userCacheString = localStorage.getItem(USER_CACHE_KEY);\n    if (userCacheString == null) {\n      this.$router.push({\n        path: \"/home\"\n      });\n    } else {\n      let userCache = JSON.parse(userCacheString);\n      let decryptionToken = userCache.token;\n      let encryptedUserData = userCache.user;\n      let decryptedData = CryptoJS.AES.decrypt(encryptedUserData, decryptionToken).toString(CryptoJS.enc.Utf8);\n      let cacheInfoObject = JSON.parse(decryptedData);\n      this.currentUser = cacheInfoObject.user;\n      console.log(\"currentUser: \", this.currentUser);\n    }\n  },\n  methods: {\n    async createNewBoard() {\n      this.isCreatingBoard = true;\n      var params = {\n        name: this.boardName,\n        owner: this.currentUser.id,\n        list: [],\n        id: Date.now()\n      };\n      var fullURL = BASE_URL + \"board/new\";\n      console.log(\"full url: \", fullURL, \"params: \", params);\n      await axios.post(fullURL, params).then(response => {\n        this.isCreatingBoard = false;\n        console.log(\"board response: \", response);\n        if (response.data != null) {\n          let data = response.data;\n          if (data.statusCode == 200) {\n            let board = data.resp;\n            console.log(\"board: \", board);\n            // Go to boards\n            this.$emit('closeOverlay', true);\n            this.$router.push({\n              path: \"/boards\"\n            });\n            // dismiss the overlay\n          } else {\n            alert(data.msg);\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["ref","BASE_URL","USER_CACHE_KEY","CryptoJS","axios","inject","setup","boardName","isCreatingBoard","currentUser","mounted","userCacheString","localStorage","getItem","$router","push","path","userCache","JSON","parse","decryptionToken","token","encryptedUserData","user","decryptedData","AES","decrypt","toString","enc","Utf8","cacheInfoObject","console","log","methods","createNewBoard","params","name","owner","id","list","Date","now","fullURL","post","then","response","data","statusCode","board","resp","$emit","alert","msg"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/CreateNewBoardView.vue"],"sourcesContent":["<template>\n    <div class=\"createBoard\">\n        <div class=\"createNewList\">\n            <textarea name=\"text\" v-model=\"boardName\" placeholder=\"Project managment starts with a new board\" class=\"createNewListField\" id=\"createNewListField_id\"></textarea>\n                <button v-if=\"isCreatingBoard\" class=\"addListBtn buttonload\">\n                   <i class=\"fa fa-circle-o-notch fa-spin\"></i> Creating... \n                </button>\n            <button v-else :class=\"boardName.length > 0 ? `addListBtn` : `addListBtnDisabled`\" :disabled='boardName.length == 0' @click=\"createNewBoard()\">Create Board</button>\n         </div>\n    </div>\n</template>\n<script>\nimport { ref } from 'vue'\nimport { BASE_URL, USER_CACHE_KEY } from '@/config'\nimport CryptoJS from 'crypto-js'\nimport axios from 'axios';\n\nexport default {\n    inject: [\"cryptojs\"],\n    setup() {\n        var boardName = ref(\"\")\n        var isCreatingBoard = ref(false)\n        var currentUser = ref({})\n        return { boardName, isCreatingBoard, currentUser }\n    }, \n    mounted() {\n        let userCacheString = localStorage.getItem(USER_CACHE_KEY)\n            if (userCacheString == null) {\n                this.$router.push({path: \"/home\"})\n            } else {\n            let userCache = JSON.parse(userCacheString)\n            let decryptionToken = userCache.token\n            let encryptedUserData = userCache.user\n            let decryptedData = CryptoJS.AES.decrypt(encryptedUserData, decryptionToken).toString(CryptoJS.enc.Utf8)\n            let cacheInfoObject = JSON.parse(decryptedData)\n            this.currentUser = cacheInfoObject.user\n            console.log(\"currentUser: \", this.currentUser)\n        }\n    },\n    methods: {\n        async createNewBoard() {\n            this.isCreatingBoard = true \n            var params = {\n                name : this.boardName, \n                owner: this.currentUser.id,\n                list: [],\n                id: Date.now()\n            }\n            var fullURL = BASE_URL + \"board/new\"\n            console.log(\"full url: \", fullURL, \"params: \", params)\n            await axios.post(fullURL, params).then((response) => {\n              this.isCreatingBoard = false\n              console.log(\"board response: \", response)\n              if (response.data != null) {\n                let data = response.data\n                if (data.statusCode == 200) {\n                    let board = data.resp\n                    console.log(\"board: \", board)\n                    // Go to boards\n                    this.$emit('closeOverlay', true)\n                    this.$router.push({path: \"/boards\"})\n                    // dismiss the overlay\n                } else {\n                    alert(data.msg)\n                }\n               }\n            })\n        }\n    }\n}\n</script>\n<style scoped>\n.addListBtn, .addListBtnDisabled {\n    display: block;\n    width: 140px;\n    height: 40px;\n    background-color: var(--color-bar-dark);\n    color: white;\n    border-radius: var(--border-radius-2);\n    margin-left: 8px;\n    font-size: 14px;\n    font-weight: 600;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    margin-right: 10px;\n}\n\n.addListBtnDisabled {\n    background-color: var(--color-light);\n    color: var(--color-dark-variant);\n}\n\n.createNewList {\n    display: flex;\n    justify-content: center;\n    width: 98%;\n    padding-top: 20px;\n    z-index: 9999;\n    overflow: hidden;\n    background-color: white;\n    align-items: center;\n    margin-right: auto;\n    margin-left: auto;\n    border-radius: var(--border-radius-1)\n}\n\n.createNewListField {\n  padding: 8px;\n  width: 80%;\n  margin-left: 8px;\n  margin-right: 8px;\n  border: 1px solid var(--color-light);\n  border-radius: var(--border-radius-1);\n  text-align: left;\n  resize: none;\n  overflow: hidden;\n  height: 44px;\n  font-weight: 500;\n  font-size: 14px;\n}\n.createBoard {\n    display: block;\n    height: 100px;\n    width: 800px;\n    background-color: white;\n    border-radius: var(--border-radius-2);\n    margin-top: -280px;\n}\n    \n</style>"],"mappings":";AAYA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,QAAQ,EAAEC,cAAa,QAAS,UAAS;AAClD,OAAOC,QAAO,MAAO,WAAU;AAC/B,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,MAAM,EAAE,CAAC,UAAU,CAAC;EACpBC,KAAKA,CAAA,EAAG;IACJ,IAAIC,SAAQ,GAAIP,GAAG,CAAC,EAAE;IACtB,IAAIQ,eAAc,GAAIR,GAAG,CAAC,KAAK;IAC/B,IAAIS,WAAU,GAAIT,GAAG,CAAC,CAAC,CAAC;IACxB,OAAO;MAAEO,SAAS;MAAEC,eAAe;MAAEC;IAAY;EACrD,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAIC,eAAc,GAAIC,YAAY,CAACC,OAAO,CAACX,cAAc;IACrD,IAAIS,eAAc,IAAK,IAAI,EAAE;MACzB,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;QAACC,IAAI,EAAE;MAAO,CAAC;IACrC,OAAO;MACP,IAAIC,SAAQ,GAAIC,IAAI,CAACC,KAAK,CAACR,eAAe;MAC1C,IAAIS,eAAc,GAAIH,SAAS,CAACI,KAAI;MACpC,IAAIC,iBAAgB,GAAIL,SAAS,CAACM,IAAG;MACrC,IAAIC,aAAY,GAAIrB,QAAQ,CAACsB,GAAG,CAACC,OAAO,CAACJ,iBAAiB,EAAEF,eAAe,CAAC,CAACO,QAAQ,CAACxB,QAAQ,CAACyB,GAAG,CAACC,IAAI;MACvG,IAAIC,eAAc,GAAIZ,IAAI,CAACC,KAAK,CAACK,aAAa;MAC9C,IAAI,CAACf,WAAU,GAAIqB,eAAe,CAACP,IAAG;MACtCQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACvB,WAAW;IACjD;EACJ,CAAC;EACDwB,OAAO,EAAE;IACL,MAAMC,cAAcA,CAAA,EAAG;MACnB,IAAI,CAAC1B,eAAc,GAAI,IAAG;MAC1B,IAAI2B,MAAK,GAAI;QACTC,IAAG,EAAI,IAAI,CAAC7B,SAAS;QACrB8B,KAAK,EAAE,IAAI,CAAC5B,WAAW,CAAC6B,EAAE;QAC1BC,IAAI,EAAE,EAAE;QACRD,EAAE,EAAEE,IAAI,CAACC,GAAG,CAAC;MACjB;MACA,IAAIC,OAAM,GAAIzC,QAAO,GAAI,WAAU;MACnC8B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEU,OAAO,EAAE,UAAU,EAAEP,MAAM;MACrD,MAAM/B,KAAK,CAACuC,IAAI,CAACD,OAAO,EAAEP,MAAM,CAAC,CAACS,IAAI,CAAEC,QAAQ,IAAK;QACnD,IAAI,CAACrC,eAAc,GAAI,KAAI;QAC3BuB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEa,QAAQ;QACxC,IAAIA,QAAQ,CAACC,IAAG,IAAK,IAAI,EAAE;UACzB,IAAIA,IAAG,GAAID,QAAQ,CAACC,IAAG;UACvB,IAAIA,IAAI,CAACC,UAAS,IAAK,GAAG,EAAE;YACxB,IAAIC,KAAI,GAAIF,IAAI,CAACG,IAAG;YACpBlB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEgB,KAAK;YAC5B;YACA,IAAI,CAACE,KAAK,CAAC,cAAc,EAAE,IAAI;YAC/B,IAAI,CAACpC,OAAO,CAACC,IAAI,CAAC;cAACC,IAAI,EAAE;YAAS,CAAC;YACnC;UACJ,OAAO;YACHmC,KAAK,CAACL,IAAI,CAACM,GAAG;UAClB;QACD;MACH,CAAC;IACL;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}