{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tiptap = _resolveComponent(\"el-tiptap\");\n  return _openBlock(), _createBlock(_component_el_tiptap, {\n    extensions: $setup.extensions,\n    content: $setup.content,\n    placeholder: \"Write something ...\"\n  }, null, 8 /* PROPS */, [\"content\"]);\n}","map":{"version":3,"names":["_createBlock","_component_el_tiptap","extensions","$setup","content","placeholder"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/components/Editor.vue"],"sourcesContent":["\n<template>\n    <el-tiptap :extensions=\"extensions\" :content=\"content\" placeholder=\"Write something ...\"/>\n  </template>\n  \n  <script setup>\n  import { ref } from 'vue';\n  import {\n    // necessary extensions\n    Doc,\n    Text,\n    Paragraph,\n    Heading,\n    Bold,\n    Underline,\n    Italic,\n    Strike,\n    BulletList,\n    OrderedList,\n  } from 'element-tiptap';\n  \n  // editor extensions\n  // they will be added to menubar and bubble menu by the order you declare.\n  const extensions = [\n    Doc,\n    Text,\n    Paragraph,\n    Heading.configure({ level: 5 }),\n    Bold.configure({ bubble: true }), // render command-button in bubble menu.\n    Underline.configure({ bubble: true, menubar: false }), // render command-button in bubble menu but not in menubar.\n    Italic,\n    Strike,\n    BulletList,\n    OrderedList,\n  ];\n  \n  // editor's content\n  const content = ref(`\n    <h1>Heading</h1>\n    <p>This Editor is awesome!</p>\n  `);\n  </script>\n  "],"mappings":";;;uBAEIA,YAAA,CAA0FC,oBAAA;IAA9EC,UAAU,EAAEC,MAAA,CAAAD,UAAU;IAAGE,OAAO,EAAED,MAAA,CAAAC,OAAO;IAAEC,WAAW,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}