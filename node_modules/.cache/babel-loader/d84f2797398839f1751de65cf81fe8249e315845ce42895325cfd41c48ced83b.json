{"ast":null,"code":"import { ref } from 'vue';\nexport default {\n  props: [\"isExpanded\"],\n  components: {\n    NavBar\n  },\n  methods: {\n    handleBoardTypeTapped(item) {\n      this.selectedTaskBoardType = item;\n    }\n  },\n  setup() {\n    var isSideBarExpanded = ref(false);\n    var selectedTaskBoardType = ref(\"All Team\");\n    var boards = ref([\"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\", \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\", \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\", \"Legal Team\", \"Management Team\"]);\n    return {\n      isSideBarExpanded,\n      boards,\n      selectedTaskBoardType\n    };\n  },\n  watch: {\n    isExpanded: function (newVal, oldVal) {\n      console.log('Prop changed isSideBarExpanwded: ', newVal);\n      this.isSideBarExpanded = newVal;\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"names":["ref","props","components","NavBar","methods","handleBoardTypeTapped","item","selectedTaskBoardType","setup","isSideBarExpanded","boards","watch","isExpanded","newVal","oldVal","console","log","mounted"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/views/AllTaskboardsView.vue"],"sourcesContent":["<template>\n     <div class=\"allBoards\">\n            <!-- <div class=\"boardContentView\">\n                <v-row style=\"overflow: hidden;\">\n             <v-col v-for=\"product in boards\" :key=\"product\" cols=\"auto\"> \n               <div :class=\"`productGridCellWithBorder`\">\n                  <img src=\"@/assets/board_placeholder.png\" class=\"productCellImage\">\n                  <label class=\"productNameLabel\">{{ product }}</label>\n               </div>\n              </v-col>\n            </v-row>\n           </div> -->\n        </div>\n</template>\n<script>\nimport { ref } from 'vue'\nexport default {\n    props: [\"isExpanded\"],\n    components: {\n        NavBar\n    }, \n    methods: {\n        handleBoardTypeTapped(item) {\n            this.selectedTaskBoardType = item\n        }\n    },\n    setup() {\n        var isSideBarExpanded = ref(false)\n        var selectedTaskBoardType = ref(\"All Team\")\n        var boards = ref([\"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\"])\n        return { isSideBarExpanded, boards, selectedTaskBoardType}\n    },\n    watch: { \n        isExpanded: function(newVal, oldVal) {\n            console.log('Prop changed isSideBarExpanwded: ', newVal)\n            this.isSideBarExpanded = newVal\n        }\n    }, \n    mounted() {\n\n    } \n}\n</script>\n<style scoped>\n    /* .productCellImage {\n    height: 200px;\n    width: 232px;\n    margin-right: auto;\n    margin-left: auto;\n    background-color: var(--color-light);\n    object-fit: cover;\n}\n\n.productGridCellWithBorder {\n    border: 2px solid var(--color-light);\n}\n.productGridCell, .productGridCellWithBorder {\n    display: block;\n    height: 280px;\n    overflow: hidden;\n    width: 232px;\n    background-color: white;\n    border-radius: var(--border-radius-2);\n}\n\n.boardContentView {\n    width: 99%;\n    height: 96%;\n    display: flex;\n    justify-content: left;\n    align-items: start;\n    background-color: white;\n    margin: auto;\n    margin-top: 10px;\n    border-radius: var(--border-radius-1);\n    padding: 30px;\n} */\n\n.allBoards {\n    width: 100vw;\n    height: 100vh;\n    background-color: orange;\n}\n</style>"],"mappings":"AAeA,SAASA,GAAE,QAAS,KAAI;AACxB,eAAe;EACXC,KAAK,EAAE,CAAC,YAAY,CAAC;EACrBC,UAAU,EAAE;IACRC;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,qBAAqBA,CAACC,IAAI,EAAE;MACxB,IAAI,CAACC,qBAAoB,GAAID,IAAG;IACpC;EACJ,CAAC;EACDE,KAAKA,CAAA,EAAG;IACJ,IAAIC,iBAAgB,GAAIT,GAAG,CAAC,KAAK;IACjC,IAAIO,qBAAoB,GAAIP,GAAG,CAAC,UAAU;IAC1C,IAAIU,MAAK,GAAIV,GAAG,CAAC,CAAC,UAAU,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAG,YAAY,EAAE,iBAAiB,EAAE,UAAU,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAG,YAAY,EAAE,iBAAiB,EAAE,UAAU,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAG,YAAY,EAAE,iBAAiB,CAAC;IACvT,OAAO;MAAES,iBAAiB;MAAEC,MAAM;MAAEH;IAAqB;EAC7D,CAAC;EACDI,KAAK,EAAE;IACHC,UAAU,EAAE,SAAAA,CAASC,MAAM,EAAEC,MAAM,EAAE;MACjCC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEH,MAAM;MACvD,IAAI,CAACJ,iBAAgB,GAAII,MAAK;IAClC;EACJ,CAAC;EACDI,OAAOA,CAAA,EAAG,CAEV;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}