{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nexport default {\n  components: {},\n  methods: {\n    handleBoardTapped(board) {\n      console.log(\"board: \", board);\n      let path = \"/board/\" + board; // this.currentUser._id + \"/product/\" + product._id\n      this.$router.push({\n        path: path\n      });\n    },\n    handleBoardTypeTapped(item) {\n      this.selectedTaskBoardType = item;\n    },\n    async fetchBoards() {\n      var params = {\n        boardName: this.boardName,\n        owner: \"1721545684258\",\n        id: Date.now()\n      };\n      var fullURL = BASE_URL + \"board/new\";\n      console.log(\"full url: \", fullURL, \"params: \", params);\n      await axios.post(fullURL, params).then(response => {\n        this.isCreatingBoard = false;\n        console.log(\"board response: \", response);\n        if (response.data != null) {\n          let data = response.data;\n          if (data.statusCode == 200) {\n            let board = data.resp;\n            console.log(\"board: \", board);\n            // Go to boards\n            this.$emit('closeOverlay', true);\n            this.$router.push({\n              path: \"/boards\"\n            });\n            // dismiss the overlay\n          } else {\n            alert(data.msg);\n          }\n        }\n      });\n    }\n  },\n  setup() {\n    var isSideBarExpanded = ref(false);\n    var selectedTaskBoardType = ref(\"All Team\");\n    var boards = ref([\"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\", \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\", \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\", \"Legal Team\", \"Management Team\"]);\n    return {\n      isSideBarExpanded,\n      boards,\n      selectedTaskBoardType\n    };\n  },\n  watch: {\n    // isExpanded: function(newVal, oldVal) {\n    //     console.log('Prop changed isSideBarExpanwded: ', newVal)\n    //     this.isSideBarExpanded = newVal\n    // }\n  },\n  mounted() {}\n};","map":{"version":3,"names":["ref","components","methods","handleBoardTapped","board","console","log","path","$router","push","handleBoardTypeTapped","item","selectedTaskBoardType","fetchBoards","params","boardName","owner","id","Date","now","fullURL","BASE_URL","axios","post","then","response","isCreatingBoard","data","statusCode","resp","$emit","alert","msg","setup","isSideBarExpanded","boards","watch","mounted"],"sources":["/Users/samuelrockon/Desktop/Dev/taskily/src/views/AllTaskboardsView.vue"],"sourcesContent":["<template>\n     <div class=\"allBoards\">\n            <div class=\"boardContentView\">\n                <v-row style=\"overflow: hidden;\">\n             <v-col v-for=\"board in boards\" :key=\"board\" cols=\"auto\"> \n               <div class=\"productGridCellWithBorder\"  @click=\"handleBoardTapped(board)\">\n                  <img src=\"@/assets/board_placeholder.png\" class=\"productCellImage\">\n                  <label class=\"productNameLabel\">{{ board }}</label>\n               </div>\n              </v-col>\n            </v-row>\n           </div>\n        </div>\n</template>\n<script>\nimport { ref } from 'vue'\nexport default {\n    components: {\n        \n    }, \n    methods: {\n        handleBoardTapped(board) {\n            console.log(\"board: \", board)\n            let path = \"/board/\" + board // this.currentUser._id + \"/product/\" + product._id\n            this.$router.push({path: path})\n        },\n        handleBoardTypeTapped(item) {\n            this.selectedTaskBoardType = item\n        },\n        async fetchBoards() {\n            var params = {\n                boardName : this.boardName, \n                owner: \"1721545684258\",\n                id: Date.now()\n            }\n            var fullURL = BASE_URL + \"board/new\"\n            console.log(\"full url: \", fullURL, \"params: \", params)\n            await axios.post(fullURL, params).then((response) => {\n              this.isCreatingBoard = false\n              console.log(\"board response: \", response)\n              if (response.data != null) {\n                let data = response.data\n                if (data.statusCode == 200) {\n                    let board = data.resp\n                    console.log(\"board: \", board)\n                    // Go to boards\n                    this.$emit('closeOverlay', true)\n                    this.$router.push({path: \"/boards\"})\n                    // dismiss the overlay\n                } else {\n                    alert(data.msg)\n                }\n               }\n            })\n        }\n    },\n    setup() {\n        var isSideBarExpanded = ref(false)\n        var selectedTaskBoardType = ref(\"All Team\")\n        var boards = ref([\"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\"])\n        return { isSideBarExpanded, boards, selectedTaskBoardType}\n    },\n    watch: { \n        // isExpanded: function(newVal, oldVal) {\n        //     console.log('Prop changed isSideBarExpanwded: ', newVal)\n        //     this.isSideBarExpanded = newVal\n        // }\n    }, \n    mounted() {\n\n    } \n}\n</script>\n<style scoped>\n    .productCellImage {\n    height: 200px;\n    width: 232px;\n    margin-right: auto;\n    margin-left: auto;\n    background-color: var(--color-light);\n    object-fit: cover;\n}\n\n.productGridCellWithBorder {\n    border: 2px solid var(--color-light);\n}\n.productGridCell, .productGridCellWithBorder {\n    display: block;\n    height: 280px;\n    overflow: hidden;\n    width: 232px;\n    background-color: white;\n    border-radius: var(--border-radius-2);\n}\n\n.boardContentView {\n    width: 99%;\n    height: 96%;\n    display: flex;\n    justify-content: left;\n    align-items: start;\n    margin: auto;\n    padding: 30px;\n}\n\n.allBoards {\n    width: 100vw;\n    height: 100vh;\n    background-color: white;\n}\n</style>"],"mappings":";AAeA,SAASA,GAAE,QAAS,KAAI;AACxB,eAAe;EACXC,UAAU,EAAE,CAEZ,CAAC;EACDC,OAAO,EAAE;IACLC,iBAAiBA,CAACC,KAAK,EAAE;MACrBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK;MAC5B,IAAIG,IAAG,GAAI,SAAQ,GAAIH,KAAI,EAAE;MAC7B,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC;QAACF,IAAI,EAAEA;MAAI,CAAC;IAClC,CAAC;IACDG,qBAAqBA,CAACC,IAAI,EAAE;MACxB,IAAI,CAACC,qBAAoB,GAAID,IAAG;IACpC,CAAC;IACD,MAAME,WAAWA,CAAA,EAAG;MAChB,IAAIC,MAAK,GAAI;QACTC,SAAQ,EAAI,IAAI,CAACA,SAAS;QAC1BC,KAAK,EAAE,eAAe;QACtBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;MACjB;MACA,IAAIC,OAAM,GAAIC,QAAO,GAAI,WAAU;MACnChB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEc,OAAO,EAAE,UAAU,EAAEN,MAAM;MACrD,MAAMQ,KAAK,CAACC,IAAI,CAACH,OAAO,EAAEN,MAAM,CAAC,CAACU,IAAI,CAAEC,QAAQ,IAAK;QACnD,IAAI,CAACC,eAAc,GAAI,KAAI;QAC3BrB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEmB,QAAQ;QACxC,IAAIA,QAAQ,CAACE,IAAG,IAAK,IAAI,EAAE;UACzB,IAAIA,IAAG,GAAIF,QAAQ,CAACE,IAAG;UACvB,IAAIA,IAAI,CAACC,UAAS,IAAK,GAAG,EAAE;YACxB,IAAIxB,KAAI,GAAIuB,IAAI,CAACE,IAAG;YACpBxB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK;YAC5B;YACA,IAAI,CAAC0B,KAAK,CAAC,cAAc,EAAE,IAAI;YAC/B,IAAI,CAACtB,OAAO,CAACC,IAAI,CAAC;cAACF,IAAI,EAAE;YAAS,CAAC;YACnC;UACJ,OAAO;YACHwB,KAAK,CAACJ,IAAI,CAACK,GAAG;UAClB;QACD;MACH,CAAC;IACL;EACJ,CAAC;EACDC,KAAKA,CAAA,EAAG;IACJ,IAAIC,iBAAgB,GAAIlC,GAAG,CAAC,KAAK;IACjC,IAAIY,qBAAoB,GAAIZ,GAAG,CAAC,UAAU;IAC1C,IAAImC,MAAK,GAAInC,GAAG,CAAC,CAAC,UAAU,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAG,YAAY,EAAE,iBAAiB,EAAE,UAAU,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAG,YAAY,EAAE,iBAAiB,EAAE,UAAU,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAG,YAAY,EAAE,iBAAiB,CAAC;IACvT,OAAO;MAAEkC,iBAAiB;MAAEC,MAAM;MAAEvB;IAAqB;EAC7D,CAAC;EACDwB,KAAK,EAAE;IACH;IACA;IACA;IACA;EAAA,CACH;EACDC,OAAOA,CAAA,EAAG,CAEV;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}