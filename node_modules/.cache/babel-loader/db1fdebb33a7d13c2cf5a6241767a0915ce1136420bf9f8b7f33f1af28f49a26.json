{"ast":null,"code":"import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"aria-label\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    role: \"dialog\",\n    \"aria-label\": $props.label,\n    \"aria-modal\": \"true\",\n    class: _normalizeClass([\"PopupWrap\", {\n      'PopupWrap--centered': $props.centered\n    }])\n  }, [_createElementVNode(\"div\", {\n    class: \"PopupWrap__backdrop\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n  }, [_renderSlot(_ctx.$slots, \"backdrop\")]), _renderSlot(_ctx.$slots, \"default\")], 10 /* CLASS, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","role","$props","label","class","_normalizeClass","centered","_createElementVNode","onClick","_cache","$event","_ctx","$emit","_renderSlot","$slots","_hoisted_1"],"sources":["/Users/samuelrockon/Desktop/Dev/taskily/src/components/PopupBase.vue"],"sourcesContent":["<template>\n    <div\n      role=\"dialog\"\n      :aria-label=\"label\"\n      aria-modal=\"true\"\n      class=\"PopupWrap\"\n      :class=\"{ 'PopupWrap--centered': centered }\"\n    >\n      <div class=\"PopupWrap__backdrop\" @click=\"$emit('close')\">\n        <slot name=\"backdrop\"/>\n      </div>\n      <slot/>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'PopupWrap',\n    props: {\n      centered: {\n        default: true,\n        type: Boolean\n      },\n      focusElement: {\n        default: null,\n        type: Object\n      },\n      label: {\n        required: true,\n        type: String\n      }\n    },\n    mounted() {\n      const close = (e) => {\n        const ESC = 27;\n        if (e.keyCode !== ESC) return;\n        this.$emit('close');\n      };\n      document.addEventListener('keyup', close);\n      this.$on('hook:destroyed', () => {\n        document.removeEventListener('keyup', close);\n      });\n  \n      this.activate();\n      this.$on('hook:destroyed', () => {\n        this.deactivate();\n      });\n    },\n    methods: {\n      activate() {\n        this.previousActiveElement = document.activeElement;\n  \n        this.disableScrolling();\n        this.inert();\n        this.focusFirstDescendant();\n      },\n      async deactivate() {\n        this.enableScrolling();\n        await this.inert(false);\n        this.restoreFocus();\n      },\n      disableScrolling() {\n        this.scrollPosition = window.pageYOffset;\n  \n        // Disable scrolling on all devices (including iOS).\n        const $body = document.querySelector('body');\n        $body.style.overflow = 'hidden';\n        $body.style.position = 'fixed';\n        $body.style.top = `-${this.scrollPosition}px`;\n        $body.style.width = '100%';\n      },\n      enableScrolling() {\n        const $body = document.querySelector('body');\n        $body.style.removeProperty('overflow');\n        $body.style.removeProperty('position');\n        $body.style.removeProperty('top');\n        $body.style.removeProperty('width');\n  \n        window.scrollTo(0, this.scrollPosition);\n      },\n      async inert(status = true) {\n        await this.$nextTick();\n        [...this.$root.$el.children].forEach((child) => {\n          if (child === this.$el || child.contains(this.$el)) return;\n          child.inert = status;\n        });\n      },\n      focusFirstDescendant(element) {\n        const focusable = this.$el.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n        if (focusable[0] && focusable[0].focus) focusable[0].focus();\n      },\n      restoreFocus() {\n        const element = this.focusElement || this.previousActiveElement;\n  \n        if (element && element.focus) element.focus();\n      }\n    }\n  }\n  </script>\n  \n  <style>\n  .PopupWrap {\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n  \n  .PopupWrap--centered {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n  .PopupWrap__backdrop {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n  }\n  </style>\n  "],"mappings":";mBAAA;;uBACIA,mBAAA,CAWM;IAVJC,IAAI,EAAC,QAAQ;IACZ,YAAU,EAAEC,MAAA,CAAAC,KAAK;IAClB,YAAU,EAAC,MAAM;IACjBC,KAAK,EALXC,eAAA,EAKY,WAAW;MAAA,uBACgBH,MAAA,CAAAI;IAAQ;MAEzCC,mBAAA,CAEM;IAFDH,KAAK,EAAC,qBAAqB;IAAEI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;MAC5CC,WAAA,CAAuBF,IAAA,CAAAG,MAAA,c,GAEzBD,WAAA,CAAOF,IAAA,CAAAG,MAAA,a,yBAXbC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}