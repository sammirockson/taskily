{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/board_placeholder.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-5d5d11e4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"allBoards\"\n};\nconst _hoisted_2 = {\n  class: \"boardContentView\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  class: \"productCellImage\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"productNameLabel\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_v_row, {\n    style: {\n      \"overflow\": \"hidden\"\n    }\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.boards, board => {\n      return _openBlock(), _createBlock(_component_v_col, {\n        key: board,\n        cols: \"auto\",\n        onClick: $options.handleBoardTapped\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", {\n          class: \"productGridCellWithBorder\",\n          onClick: $event => $options.handleBoardTapped(board)\n        }, [_hoisted_4, _createElementVNode(\"label\", _hoisted_5, _toDisplayString(board), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_3)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","src","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_v_row","style","default","_withCtx","_Fragment","_renderList","$setup","boards","board","_createBlock","_component_v_col","key","cols","onClick","$options","handleBoardTapped","$event","_hoisted_4","_hoisted_5","_toDisplayString","_hoisted_3","_"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/views/AllTaskboardsView.vue"],"sourcesContent":["<template>\n     <div class=\"allBoards\">\n            <div class=\"boardContentView\">\n                <v-row style=\"overflow: hidden;\">\n             <v-col v-for=\"board in boards\" :key=\"board\" cols=\"auto\" @click=\"handleBoardTapped\"> \n               <div class=\"productGridCellWithBorder\"  @click=\"handleBoardTapped(board)\">\n                  <img src=\"@/assets/board_placeholder.png\" class=\"productCellImage\">\n                  <label class=\"productNameLabel\">{{ board }}</label>\n               </div>\n              </v-col>\n            </v-row>\n           </div>\n        </div>\n</template>\n<script>\nimport { ref } from 'vue'\nexport default {\n    components: {\n        \n    }, \n    methods: {\n        handleBoardTapped(board) {\n            console.log(\"board: \", board)\n            let path = \"/board/\" + board // this.currentUser._id + \"/product/\" + product._id\n            this.$router.push({path: path})\n        },\n        handleBoardTypeTapped(item) {\n            this.selectedTaskBoardType = item\n        }\n    },\n    setup() {\n        var isSideBarExpanded = ref(false)\n        var selectedTaskBoardType = ref(\"All Team\")\n        var boards = ref([\"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\"])\n        return { isSideBarExpanded, boards, selectedTaskBoardType}\n    },\n    watch: { \n        // isExpanded: function(newVal, oldVal) {\n        //     console.log('Prop changed isSideBarExpanwded: ', newVal)\n        //     this.isSideBarExpanded = newVal\n        // }\n    }, \n    mounted() {\n\n    } \n}\n</script>\n<style scoped>\n    .productCellImage {\n    height: 200px;\n    width: 232px;\n    margin-right: auto;\n    margin-left: auto;\n    background-color: var(--color-light);\n    object-fit: cover;\n}\n\n.productGridCellWithBorder {\n    border: 2px solid var(--color-light);\n}\n.productGridCell, .productGridCellWithBorder {\n    display: block;\n    height: 280px;\n    overflow: hidden;\n    width: 232px;\n    background-color: white;\n    border-radius: var(--border-radius-2);\n}\n\n.boardContentView {\n    width: 99%;\n    height: 96%;\n    display: flex;\n    justify-content: left;\n    align-items: start;\n    margin: auto;\n    padding: 30px;\n}\n\n.allBoards {\n    width: 100vw;\n    height: 100vh;\n    background-color: white;\n}\n</style>"],"mappings":";OAMuBA,UAAoC;;;EALjDC,KAAK,EAAC;AAAW;;EACVA,KAAK,EAAC;AAAkB;mBAFzC;gEAMkBC,mBAAA,CAAmE;EAA9DC,GAAoC,EAApCH,UAAoC;EAACC,KAAK,EAAC;;;EACzCA,KAAK,EAAC;AAAkB;;;;uBAN5CG,mBAAA,CAWS,OAXTC,UAWS,GAVFH,mBAAA,CASK,OATLI,UASK,GARDC,YAAA,CAOIC,gBAAA;IAPGC,KAAyB,EAAzB;MAAA;IAAA;EAAyB;IAHhDC,OAAA,EAAAC,QAAA,CAIoB,MAAuB,E,kBAA9BP,mBAAA,CAKSQ,SAAA,QATtBC,WAAA,CAIoCC,MAAA,CAAAC,MAAM,EAAfC,KAAK;2BAAnBC,YAAA,CAKSC,gBAAA;QALuBC,GAAG,EAAEH,KAAK;QAAEI,IAAI,EAAC,MAAM;QAAEC,OAAK,EAAEC,QAAA,CAAAC;;QAJ7Eb,OAAA,EAAAC,QAAA,CAKe,MAGM,CAHNT,mBAAA,CAGM;UAHDD,KAAK,EAAC,2BAA2B;UAAGoB,OAAK,EAAAG,MAAA,IAAEF,QAAA,CAAAC,iBAAiB,CAACP,KAAK;YACpES,UAAmE,EACnEvB,mBAAA,CAAmD,SAAnDwB,UAAmD,EAAAC,gBAAA,CAAhBX,KAAK,iB,iBAP1DY,UAAA,E;QAAAC,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}