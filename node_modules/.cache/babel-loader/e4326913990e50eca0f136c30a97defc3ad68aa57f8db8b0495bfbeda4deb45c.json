{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-59cf3461\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"board\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_NavBar, {\n    isExpanded: this.isSideBarExpanded\n  }, null, 8 /* PROPS */, [\"isExpanded\"]), _hoisted_1], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_Fragment","_createVNode","_component_NavBar","isExpanded","isSideBarExpanded","_hoisted_1"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/views/BoardView.vue"],"sourcesContent":["<template>\n    <NavBar :isExpanded=\"this.isSideBarExpanded\"/>\n    <div class=\"board\">\n        \n    </div>\n</template>\n<script>\nimport NavBar from '@/components/NavBarView.vue'\nimport { ref } from 'vue'\nexport default {\n    props: [\"isExpanded\"],\n    components: {\n        NavBar\n    }, \n    setup() {\n        var isSideBarExpanded = ref(false)\n        return { isSideBarExpanded }\n    },\n    watch: { \n        isExpanded: function(newVal, oldVal) {\n            console.log('Prop changed isSideBarExpanwded: ', newVal)\n            this.isSideBarExpanded = newVal\n        }\n    },  \n}\n</script>\n<style scoped>\n.board {\n    width: 100%;\n    height: 100%;\n    background-color: green;\n}\n    \n</style>"],"mappings":";;gEAEIA,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAO;;;uBAFtBC,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAA8CC,iBAAA;IAArCC,UAAU,OAAOC;2CAC1BC,UAEM,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}