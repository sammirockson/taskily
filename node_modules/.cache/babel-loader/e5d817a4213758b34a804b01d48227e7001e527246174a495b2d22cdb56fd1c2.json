{"ast":null,"code":"import axios from \"axios\";\nimport { BASE_URL } from '@/config';\nimport _ from 'lodash';\nclass APIService {\n  init() {\n    console.log(\"APIService has been initiated\");\n  }\n  async addComment(params) {\n    let path = \"comment/add\";\n    return await this.baseRequest(path, params);\n  }\n  async getComments(params) {\n    let path = \"comment/byCardId\";\n    return await this.baseRequest(path, params);\n  }\n  async saveDesc(cardDesc, card_id) {\n    var params = {\n      card_id: card_id,\n      cardDesc: cardDesc\n    };\n    await this.baseRequest(\"board/addDescriptionToCard\", params);\n  }\n  async getBoardMembers(params) {\n    let path = \"board/getBoardMembers\";\n    return await this.baseRequest(path, params);\n  }\n  async login(params) {\n    let path = \"auth/login\";\n    return await this.baseRequest(path, params);\n  }\n  async signUp(params) {\n    let path = \"auth/signUp\";\n    return await this.baseRequest(path, params);\n  }\n  async getBoardById(params) {\n    let path = \"board/byId\";\n    return await this.baseRequest(path, params);\n  }\n  async confirmInvitation(params) {\n    let path = \"board/addInviteeToBoard\";\n    return await this.baseRequest(path, params);\n  }\n  async updateViewCount(params) {\n    let path = \"board/updateViewCount\";\n    return await this.baseRequest(path, params);\n  }\n  async getInvitationInfo(params) {\n    let path = \"board/getInviteInfo\";\n    return await this.baseRequest(path, params);\n  }\n  async updateCardMembership(params) {\n    let path = \"board/updateCardMembership\";\n    return await this.baseRequest(path, params);\n  }\n  async baseRequest(path, params) {\n    try {\n      let header = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      };\n      let options = {\n        method: 'POST',\n        headers: header,\n        body: JSON.stringify(params)\n      };\n      let fullURL = BASE_URL + path;\n      console.log('Request url: ', fullURL);\n      const response = await fetch(fullURL, options);\n      let jsonResp = await response.json();\n      return jsonResp.resp;\n    } catch (err) {\n      console.log(\"error occurred: \", err);\n    }\n  }\n}\nexport default new APIService();","map":{"version":3,"names":["axios","BASE_URL","_","APIService","init","console","log","addComment","params","path","baseRequest","getComments","saveDesc","cardDesc","card_id","getBoardMembers","login","signUp","getBoardById","confirmInvitation","updateViewCount","getInvitationInfo","updateCardMembership","header","options","method","headers","body","JSON","stringify","fullURL","response","fetch","jsonResp","json","resp","err"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/APIService.js"],"sourcesContent":["import axios from \"axios\";\nimport { BASE_URL } from '@/config'\nimport _ from 'lodash'\n\n\nclass APIService {\n\n    init() {\n        console.log(\"APIService has been initiated\")\n    }\n\n\n    async addComment(params) {\n        let path = \"comment/add\"\n        return await this.baseRequest(path, params)\n    }\n\n    async getComments(params) {\n        let path = \"comment/byCardId\"\n        return await this.baseRequest(path, params)\n    }\n\n\n    async saveDesc(cardDesc, card_id) {\n      var params = {\n        card_id: card_id,\n        cardDesc: cardDesc\n      }\n      await this.baseRequest(\"board/addDescriptionToCard\", params)\n    }\n\n    async getBoardMembers(params) {\n        let path = \"board/getBoardMembers\"\n        return await this.baseRequest(path, params)\n    }\n\n    async login(params) {\n        let path = \"auth/login\"\n        return await this.baseRequest(path, params)\n    }\n\n    async signUp(params) {\n        let path = \"auth/signUp\"\n        return await this.baseRequest(path, params)\n    }\n\n    async getBoardById(params) {\n        let path = \"board/byId\"\n        return await this.baseRequest(path, params)\n    }\n\n    async confirmInvitation(params) {\n        let path = \"board/addInviteeToBoard\"\n        return await this.baseRequest(path, params)\n    }\n\n    async updateViewCount(params) {\n        let path = \"board/updateViewCount\"\n        return await this.baseRequest(path, params)\n    }\n\n    async getInvitationInfo(params) {\n        let path = \"board/getInviteInfo\"\n        return await this.baseRequest(path, params)\n    }\n\n    async updateCardMembership(params) {\n        let path = \"board/updateCardMembership\"\n        return await this.baseRequest(path, params)\n    }\n\n    \n    async baseRequest(path, params) {\n        try {\n            let header = {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            let options = {\n                method: 'POST',\n                headers: header,\n                body: JSON.stringify(params)\n            }\n            let fullURL = BASE_URL + path\n            console.log('Request url: ', fullURL)\n            const response = await fetch(fullURL, options)\n            let jsonResp = await response.json()\n            return jsonResp.resp\n        } catch (err) {\n            console.log(\"error occurred: \", err)\n        }\n    }\n}\n\n\n\n\n\n\nexport default new APIService()\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}