{"ast":null,"code":"import _defineProperty from \"/Users/Sam.Agyemang/Desktop/Dev/taskily/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _Theme;\nclass Theme {\n  constructor(quill, options) {\n    _defineProperty(this, \"modules\", {});\n    this.quill = quill;\n    this.options = options;\n  }\n  init() {\n    Object.keys(this.options.modules).forEach(name => {\n      if (this.modules[name] == null) {\n        this.addModule(name);\n      }\n    });\n  }\n  addModule(name) {\n    // @ts-expect-error\n    const ModuleClass = this.quill.constructor.import(`modules/${name}`);\n    this.modules[name] = new ModuleClass(this.quill, this.options.modules[name] || {});\n    return this.modules[name];\n  }\n}\n_Theme = Theme;\n_defineProperty(Theme, \"DEFAULTS\", {\n  modules: {}\n});\n_defineProperty(Theme, \"themes\", {\n  default: _Theme\n});\nexport default Theme;","map":{"version":3,"names":["Theme","constructor","quill","options","_defineProperty","init","Object","keys","modules","forEach","name","addModule","ModuleClass","import","_Theme","default"],"sources":["../../src/core/theme.ts"],"sourcesContent":["import type Quill from '../core.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type { ToolbarProps } from '../modules/toolbar.js';\nimport type Uploader from '../modules/uploader.js';\n\nexport interface ThemeOptions {\n  modules: Record<string, unknown> & {\n    toolbar?: null | ToolbarProps;\n  };\n}\n\nclass Theme {\n  static DEFAULTS: ThemeOptions = {\n    modules: {},\n  };\n\n  static themes = {\n    default: Theme,\n  };\n\n  modules: ThemeOptions['modules'] = {};\n\n  constructor(\n    protected quill: Quill,\n    protected options: ThemeOptions,\n  ) {}\n\n  init() {\n    Object.keys(this.options.modules).forEach((name) => {\n      if (this.modules[name] == null) {\n        this.addModule(name);\n      }\n    });\n  }\n\n  addModule(name: 'clipboard'): Clipboard;\n  addModule(name: 'keyboard'): Keyboard;\n  addModule(name: 'uploader'): Uploader;\n  addModule(name: 'history'): History;\n  addModule(name: string): unknown;\n  addModule(name: string) {\n    // @ts-expect-error\n    const ModuleClass = this.quill.constructor.import(`modules/${name}`);\n    this.modules[name] = new ModuleClass(\n      this.quill,\n      this.options.modules[name] || {},\n    );\n    return this.modules[name];\n  }\n}\n\nexport interface ThemeConstructor {\n  new (quill: Quill, options: unknown): Theme;\n  DEFAULTS: ThemeOptions;\n}\n\nexport default Theme;\n"],"mappings":";;AAaA,MAAMA,KAAK,CAAC;EAWVC,WAAWA,CACCC,KAAY,EACZC,OAAqB,EAC/B;IAAAC,eAAA,kBALiC,CAAC,CAAC;IAKnC,KAFUF,KAAY,GAAZA,KAAY;IAAA,KACZC,OAAqB,GAArBA,OAAqB;EAC9B;EAEHE,IAAIA,CAAA,EAAG;IACLC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACJ,OAAO,CAACK,OAAO,CAAC,CAACC,OAAO,CAAEC,IAAI,IAAK;MAClD,IAAI,IAAI,CAACF,OAAO,CAACE,IAAI,CAAC,IAAI,IAAI,EAAE;QAC9B,IAAI,CAACC,SAAS,CAACD,IAAI,CAAC;MACtB;IACF,CAAC,CAAC;EACJ;EAOAC,SAASA,CAACD,IAAY,EAAE;IACtB;IACA,MAAME,WAAW,GAAG,IAAI,CAACV,KAAK,CAACD,WAAW,CAACY,MAAM,CAAE,WAAUH,IAAK,EAAC,CAAC;IACpE,IAAI,CAACF,OAAO,CAACE,IAAI,CAAC,GAAG,IAAIE,WAAW,CAClC,IAAI,CAACV,KAAK,EACV,IAAI,CAACC,OAAO,CAACK,OAAO,CAACE,IAAI,CAAC,IAAI,CAAC,CACjC,CAAC;IACD,OAAO,IAAI,CAACF,OAAO,CAACE,IAAI,CAAC;EAC3B;AACF;AAAAI,MAAA,GAtCMd,KAAK;AAAAI,eAAA,CAALJ,KAAK,cACuB;EAC9BQ,OAAO,EAAE,CAAC;AACZ,CAAC;AAAAJ,eAAA,CAHGJ,KAAK,YAKO;EACde,OAAO,EAAEf;AACX,CAAC;AAsCH,eAAeA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}