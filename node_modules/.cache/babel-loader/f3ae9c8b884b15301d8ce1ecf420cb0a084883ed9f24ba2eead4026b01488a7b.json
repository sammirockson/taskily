{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5a41fbc1\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"containerView\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PopupOverlay = _resolveComponent(\"PopupOverlay\");\n  const _component_PopupRouterView = _resolveComponent(\"PopupRouterView\");\n  return _openBlock(), _createBlock(_component_PopupRouterView, null, {\n    default: _withCtx(() => [_createVNode(_component_PopupOverlay), _hoisted_1]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_PopupRouterView","default","_withCtx","_createVNode","_component_PopupOverlay","_hoisted_1","_"],"sources":["/Users/samuelrockon/Desktop/Dev/taskily/src/components/CardPopupView.vue"],"sourcesContent":["<template>\n    <PopupRouterView>\n      <PopupOverlay/>\n       <div class=\"containerView\">\n\n       </div>\n    </PopupRouterView>\n  </template>\n  \n  <script>\n  import PopupOverlay from './PopupOverlay.vue';\n  import PopupRouterView from './PopupRouterView.vue';\n  \n  export default {\n    name: 'ProductImagePopup',\n    components: {\n      PopupOverlay,\n      PopupRouterView\n    },\n    data() {\n      return {\n        product: {},\n      };\n    },\n    created() {\n      // fetch from api\n      let routeParams = this.$route.params\n      console.log(\"pop up params: \", routeParams)\n      // Call api to fetch board\n      let card_id = routeParams.cardId\n      this.getCardBy(cardId)\n    },\n    methods: {\n      async getCardBy(card_id) {\n        var params = {\n            card_id: card_id\n        }\n        var fullURL = BASE_URL + \"board/getCardDetail\"\n        await axios.post(fullURL, params).then((response) => {\n          if (response.data != null) {\n            let data = response.data\n            console.log(\"card data: \", data)\n            if (data.statusCode == 200) {\n                let resp = data.resp\n                if (resp != null) {\n                   this.selectedCard = resp.card\n                   this.selectedList = resp.list\n                   this.cardTags = resp.tags\n                   this.isCardTapped = true \n                   this.$emit('cardDetailInfo', resp)\n                }\n                \n              }\n             }\n          })\n        }\n    }\n  }\n  </script>\n\n<style scoped>\n.containerView {\n  background-color: white;\n  height: 400px;\n  width: 400px;\n  z-index: 9999999999;\n}\n</style>\n  "],"mappings":";;gEAGOA,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAe;;;;uBAF7BC,YAAA,CAKkBC,0BAAA;IANtBC,OAAA,EAAAC,QAAA,CAEM,MAAe,CAAfC,YAAA,CAAeC,uBAAA,GACdC,UAEM,C;IALbC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}