{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"PopupLightbox\"\n};\nconst _hoisted_2 = {\n  class: \"PopupLightbox__header\"\n};\nconst _hoisted_3 = {\n  class: \"PopupLightbox__content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"PopupLightbox__close\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$parent.$emit('close'))\n  }, \"Close\")]), _createElementVNode(\"div\", _hoisted_3, [_renderSlot(_ctx.$slots, \"default\")])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","_ctx","$parent","$emit","_hoisted_3","_renderSlot","$slots"],"sources":["/Users/samuelrockon/Desktop/Dev/taskily/src/components/PopupLightbox.vue"],"sourcesContent":["<template>\n    <div class=\"PopupLightbox\">\n      <div class=\"PopupLightbox__header\">\n        <button class=\"PopupLightbox__close\" @click=\"$parent.$emit('close')\">Close</button>\n      </div>\n      <div class=\"PopupLightbox__content\">\n        <slot/>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: \"PopupLightbox\"\n  };\n  </script>\n  \n  <style>\n  .PopupLightbox {\n    margin: auto;\n    max-width: 80%;\n  }\n  \n  .PopupLightbox__header {\n    text-align: right;\n  }\n  \n  .PopupLightbox__content {\n    margin-top: 0.5em;\n  }\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAuB;;EAG7BA,KAAK,EAAC;AAAwB;;uBAJrCC,mBAAA,CAOM,OAPNC,UAOM,GANJC,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAAmF;IAA3EH,KAAK,EAAC,sBAAsB;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,KAAK;KAAW,OAAK,E,GAE5EP,mBAAA,CAEM,OAFNQ,UAEM,GADJC,WAAA,CAAOJ,IAAA,CAAAK,MAAA,a","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}