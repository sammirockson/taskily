{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { BASE_URL, PICKMORE_MERCHANT_KEY, SIDE_BAR_MENU_ITEM_KEY } from '@/config';\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { googleSdkLoaded } from \"vue3-google-login\";\nimport config from '@/config';\nimport CryptoJS from 'crypto-js';\nimport { USER_CACHE_KEY } from '@/config';\nexport default {\n  inject: [\"cryptojs\"],\n  setup() {\n    var email = ref(\"\");\n    var password = ref(\"\");\n    var isLogActivated = ref(false);\n    var showPassword = ref(false);\n    var googleUser = ref(null);\n    var viewPassword = ref(false);\n    var fullName = ref(\"\");\n    return {\n      email,\n      password,\n      isLogActivated,\n      showPassword,\n      googleUser,\n      viewPassword,\n      fullName\n    };\n  },\n  methods: {\n    viewPassword() {\n      this.showPassword = !this.showPassword;\n    },\n    async handleSignUp() {\n      this.isLogActivated = true;\n      var params = {\n        email: this.email,\n        fullName: this.fullName,\n        password: this.password,\n        isEmailVerified: false,\n        isViaGoogle: false,\n        id: Date.now()\n      };\n      var path = \"auth/signUp\";\n      var fullURL = BASE_URL + path;\n      console.log(\"full url: \", fullURL, \"params: \", params);\n      await axios.post(fullURL, params).then(response => {\n        this.isLogActivated = false;\n        if (response.data != null) {\n          let data = response.data;\n          if (data.statusCode == 200) {\n            let gUserInfo = data.resp;\n            console.log(\"signed up info: \", gUserInfo);\n            gUserInfo.password = \"\";\n            let token = gUserInfo.token;\n            let userDataStr = JSON.stringify(gUserInfo);\n            let encyrptedUserData = CryptoJS.AES.encrypt(userDataStr, token).toString();\n            let cacheData = {\n              token: token,\n              user: encyrptedUserData\n            };\n            console.log(\"encrypted data: \", cacheData);\n            localStorage.removeItem(USER_CACHE_KEY);\n            localStorage.setItem(USER_CACHE_KEY, JSON.stringify(cacheData));\n            this.$router.push({\n              path: \"/\"\n            });\n          } else {\n            alert(data.msg);\n          }\n        }\n      });\n    },\n    handleSignUpTapped() {\n      this.$emit('navToRegister', true);\n    }\n  }\n};","map":{"version":3,"names":["BASE_URL","PICKMORE_MERCHANT_KEY","SIDE_BAR_MENU_ITEM_KEY","ref","axios","googleSdkLoaded","config","CryptoJS","USER_CACHE_KEY","inject","setup","email","password","isLogActivated","showPassword","googleUser","viewPassword","fullName","methods","handleSignUp","params","isEmailVerified","isViaGoogle","id","Date","now","path","fullURL","console","log","post","then","response","data","statusCode","gUserInfo","resp","token","userDataStr","JSON","stringify","encyrptedUserData","AES","encrypt","toString","cacheData","user","localStorage","removeItem","setItem","$router","push","alert","msg","handleSignUpTapped","$emit"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/views/SignUp.vue"],"sourcesContent":["<template>\n    <div class=\"authContentView\">\n      <div class=\"inputFieldContainer\">\n        <img src=\"@/assets/logo.png\" class=\"brandLogo\">\n        <v-text-field type=\"name\" prepend-inner-icon=\"mdi-account-circle-outline\" class=\"fullNameField\" v-model=\"fullName\" variant=\"outlined\" label=\"Full Name\"></v-text-field>\n            <v-text-field type=\"email\" prepend-inner-icon=\"mdi-email-outline\" class=\"emailField\" v-model=\"email\" variant=\"outlined\" label=\"Email Address\"></v-text-field>\n            <v-text-field\n            :type=\"showPassword ? 'text' : 'password'\"  prepend-inner-icon=\"mdi-lock-outline\" :append-inner-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-outline'\"\n             @click:append-inner=\"viewPassword\" class=\"passwordField\"  v-model=\"password\" label=\"Password\" variant=\"outlined\"></v-text-field>  \n             <v-file-input label=\"Profile photo\" class=\"emailField\"></v-file-input>\n              <button v-if=\"isLogActivated\" class=\"login buttonload\">\n                  <i class=\"fa fa-circle-o-notch fa-spin\"></i> Signing up... \n              </button>\n              <button v-else @click=\"handleSignUp\"  v-on:keyup.enter=\"handleSignUp\">Sign Up</button>\n              <label class=\"forgotTitleLabel\">Have an account? <span>Log In</span></label>\n              <!-- <div class=\"lineContainer\">\n                <div class=\"leftLineView\"></div>\n                <label class=\"orLabel\">OR</label>\n                <div class=\"rightLineView\"></div>\n              </div> -->\n      </div>\n      <!-- <label class=\"signUpLabel\" @click=\"handleSignUpTapped\">Don't have an account? <span class=\"signUpSpan\"> Register here</span></label> -->\n    </div>\n</template>\n<script>\nimport { BASE_URL, PICKMORE_MERCHANT_KEY, SIDE_BAR_MENU_ITEM_KEY } from '@/config';\nimport { ref } from 'vue'\nimport axios from 'axios';\nimport { googleSdkLoaded } from \"vue3-google-login\";\nimport config from '@/config';\nimport CryptoJS from 'crypto-js'\nimport { USER_CACHE_KEY } from '@/config'\n\nexport default {\n    inject: [\"cryptojs\"],\n    setup() {\n      var email = ref(\"\")\n      var password = ref(\"\")\n      var isLogActivated = ref(false)\n      var showPassword = ref(false)\n      var googleUser = ref(null)\n      var viewPassword = ref(false)\n      var fullName = ref(\"\")\n      return { email, password, isLogActivated, showPassword, googleUser, viewPassword, fullName }\n    }, \n    methods: {\n      viewPassword() {\n        this.showPassword = !this.showPassword\n      },\n      async handleSignUp() {\n           this.isLogActivated = true \n           var params = {\n               email : this.email, \n               fullName : this.fullName, \n               password: this.password, \n               isEmailVerified: false,\n               isViaGoogle: false,\n               id: Date.now()\n            }\n            var path = \"auth/signUp\"\n            var fullURL = BASE_URL + path\n            console.log(\"full url: \", fullURL, \"params: \", params)\n            await axios.post(fullURL, params).then((response) => {\n              this.isLogActivated = false\n              if (response.data != null) {\n                let data = response.data\n                if (data.statusCode == 200) {\n                  let gUserInfo = data.resp \n            console.log(\"signed up info: \", gUserInfo)\n            gUserInfo.password = \"\"\n            let token = gUserInfo.token\n            let userDataStr = JSON.stringify(gUserInfo)\n            let encyrptedUserData = CryptoJS.AES.encrypt(userDataStr, token).toString()\n            let cacheData = {\n              token: token, \n              user: encyrptedUserData\n            }\n            console.log(\"encrypted data: \", cacheData)\n            localStorage.removeItem(USER_CACHE_KEY)\n            localStorage.setItem(USER_CACHE_KEY, JSON.stringify(cacheData))\n            this.$router.push({path: \"/\"})\n                \n                } else {\n                    alert(data.msg)\n                }\n               }\n            })\n      },\n      handleSignUpTapped() {\n        this.$emit('navToRegister', true)\n      }\n   }\n}\n</script>\n<style scoped>\n.googleTitleLabel {\n  font-weight: 500;\n  font-size: 16px;\n  margin-top: auto;\n  margin-bottom: auto;\n}\n.googleIcon {\n  margin-left: 10px;\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n  margin-top: auto;\n  margin-bottom: auto;\n}\n.googleButtonContainer {\n  display: flex;\n  margin-top: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  width: 340px;\n  height: 50px;\n  border: 1px solid var(--color-light);\n  border-radius: var(--border-radius-1);\n}\n.orLabel {\n  width: 30px;\n  height: 30px;\n  font-weight: 600;\n  margin-top: -12px;\n  color: var(--color-dark);\n  margin-left: 10px;\n}\n.leftLineView, .rightLineView {\n  width: 140px;\n  height: 1px;\n  background-color: var(--color-light);\n  margin-left: 30px;\n}\n\n.rightLineView {\n  margin-left: 10px;\n}\n\n.lineContainer {\n  display: flex;\n  margin-top: 50px;\n}\n.brandLogo {\n  width: 60px;\n  height: 60px;\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.authContentView {\n  display: flex;\n  flex-direction: column;\n  background-color: var(--color-background);\n  width: 100vw;\n  height: 100vh;\n}\n.signUpLabel {\n  display: block;\n  margin-top: 130px;\n}\n\n.signUpSpan {\n  color: var(--color-blue);\n  font-weight: 600;\n}\n.inputFieldContainer button { \n  margin-top: 70px;\n  width: 340px;\n  height: 50px;\n  margin-right: auto;\n  margin-left: auto;\n  font-weight: 600;\n  font-size: 16px;\n  color: white;\n  background-color: var(--color-bar-dark);\n  border: 0px solid transparent;\n  border-radius: var(--border-radius-1);\n}\n\n.inputFieldContainer {\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  width: 400px;\n  height: 650px;\n  margin-right: auto;\n  margin-left: auto;\n  border-radius: var(--border-radius-2);\n  margin-top: 50px;\n}\n\n.passwordField, .emailField, .fullNameField {\n  width: 340px;\n  max-height: 44px;\n  font-weight: 500;\n  font-size: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 0px solid var(--color-light-primary) !important;\n  border-color: var(--color-light-primary);\n}\n.fullNameField {\n  margin-top: 54px;\n}\n.emailField {\n  margin-top: 30px;\n}\n.passwordField {\n  margin-top: 30px;\n}\n\n.forgotTitleLabel {\n  font-weight: 600;\n  font-size: 14px;\n  color: var(--color-dark);\n  margin-top: 30px;\n  float: left;\n  text-align: left;\n  margin-left: 34px;\n}\n.subTitleLabel {\n  color: var(--color-light-primary);\n  font-weight: 300;\n  font-size: 14px;\n}\n\n.titleLabel {\n  display: block;\n  margin-top: 10px;\n  font-weight: 500;\n  font-size: 18px;\n  margin-top: 30px;\n}\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}