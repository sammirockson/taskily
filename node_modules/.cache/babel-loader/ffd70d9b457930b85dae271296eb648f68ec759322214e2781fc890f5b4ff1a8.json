{"ast":null,"code":"import NavBar from '@/components/NavBarView.vue';\nimport { ref } from 'vue';\nexport default {\n  props: [\"isExpanded\"],\n  components: {\n    NavBar\n  },\n  methods: {\n    handleBoardTypeTapped(item) {\n      this.selectedTaskBoardType = item;\n    }\n  },\n  setup() {\n    var isSideBarExpanded = ref(false);\n    var selectedTaskBoardType = ref(\"All Team\");\n    var boards = ref([\"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\", \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\"]);\n    return {\n      isSideBarExpanded,\n      boards,\n      selectedTaskBoardType\n    };\n  },\n  watch: {\n    isExpanded: function (newVal, oldVal) {\n      console.log('Prop changed isSideBarExpanwded: ', newVal);\n      this.isSideBarExpanded = newVal;\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"names":["NavBar","ref","props","components","methods","handleBoardTypeTapped","item","selectedTaskBoardType","setup","isSideBarExpanded","boards","watch","isExpanded","newVal","oldVal","console","log","mounted"],"sources":["/Users/Sam.Agyemang/Desktop/Dev/taskily/src/views/BoardView.vue"],"sourcesContent":["<template>\n    <div class=\"board\">\n        <NavBar :isExpanded=\"this.isSideBarExpanded\"/>\n        <div class=\"boardContentView\">\n            <h3>Task Boards</h3>\n        <div class=\"taskBoardContainerView\">\n            <ul class=\"taskboardListView\">\n              <li class=\"taskboardCell\" v-for=\"item in boards\" :key=\"item\" @click=\"handleBoardTypeTapped(item)\">\n                  <label class=\"taskboardLabel\">{{ item }}</label>\n                  <div class=\"indicatorView\" :style=\"{display: selectedTaskBoardType == item ? 'block' : 'none'}\"></div>\n              </li>\n            </ul>\n        </div>\n        <div class=\"boardViews\">\n        </div>\n        </div>\n\n    </div>\n</template>\n<script>\nimport NavBar from '@/components/NavBarView.vue'\nimport { ref } from 'vue'\nexport default {\n    props: [\"isExpanded\"],\n    components: {\n        NavBar\n    }, \n    methods: {\n        handleBoardTypeTapped(item) {\n            this.selectedTaskBoardType = item\n        }\n    },\n    setup() {\n        var isSideBarExpanded = ref(false)\n        var selectedTaskBoardType = ref(\"All Team\")\n        var boards = ref([\"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\",  \"Legal Team\", \"Management Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\", \"All Team\", \"Accounting Team\", \"Finance Team\", \"Creative Team\" ])\n        return { isSideBarExpanded, boards, selectedTaskBoardType}\n    },\n    watch: { \n        isExpanded: function(newVal, oldVal) {\n            console.log('Prop changed isSideBarExpanwded: ', newVal)\n            this.isSideBarExpanded = newVal\n        }\n    }, \n    mounted() {\n\n    } \n}\n</script>\n<style scoped>\n.indicatorView {\n    width: 100%;\n    height: 4%;\n    background-color: var(--color-bar-dark);\n    margin-top: 4px;\n}\n.taskboardLabel {\n    font-weight: 600;\n    font-size: 15px;\n}\n.taskboardCell {\n  display: inline-block;\n  clear: both;\n  padding-right: 10px;\n  padding-left: 10px;\n  margin-right: 15px;\n  height: 40px;\n    /* width: auto;\n    height: 100px;\n    padding-top: 15px;\n    padding-right: 40px;\n    display: flex;\n    flex-direction: column; */\n}\n\n.taskboardListView {\n    width: 98%;\n    height: 80px;\n    margin-left: 15px;\n    overflow-x: auto;\n    padding-top: 15px;\n    list-style: none;\n    margin-left: 0;\n    white-space: nowrap;\n    align-items: flex-start;\n    flex-wrap: nowrap;\n    display: flex;\n    margin-left: 15px;\n    /* style=\"white-space:nowrap;margin-bottom: 10px;\" */\n    /* display: flex; */\n    /* flex-direction: row; */\n}\n.boardContentView h3 {\n    float: left;\n    margin-left: 15px;\n    margin-top: 20px;\n}\n.boardViews {\n    height: calc(100% - 200px);\n    background-color: white;\n\n}\n.taskBoardContainerView {\n    height: 60px;\n    background-color: var(--color-info-light);\n    display: flex;\n    flex-direction: column;\n    justify-content: left;\n    align-items: start;\n    margin-top: 20px;\n    border-top-right-radius: var(--border-radius-1);\n    border-top-left-radius: var(--border-radius-1);\n}\n\n.taskBoardContainerView, .boardViews {\n    width: 98%;\n    margin-right: auto;\n    margin-left: auto;\n}\n\n.boardContentView {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: left;\n    align-items: start;\n}\n.board {\n    width: 100%;\n    height: 100%;\n}\n    \n</style>"],"mappings":"AAoBA,OAAOA,MAAK,MAAO,6BAA4B;AAC/C,SAASC,GAAE,QAAS,KAAI;AACxB,eAAe;EACXC,KAAK,EAAE,CAAC,YAAY,CAAC;EACrBC,UAAU,EAAE;IACRH;EACJ,CAAC;EACDI,OAAO,EAAE;IACLC,qBAAqBA,CAACC,IAAI,EAAE;MACxB,IAAI,CAACC,qBAAoB,GAAID,IAAG;IACpC;EACJ,CAAC;EACDE,KAAKA,CAAA,EAAG;IACJ,IAAIC,iBAAgB,GAAIR,GAAG,CAAC,KAAK;IACjC,IAAIM,qBAAoB,GAAIN,GAAG,CAAC,UAAU;IAC1C,IAAIS,MAAK,GAAIT,GAAG,CAAC,CAAC,UAAU,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAG,YAAY,EAAE,iBAAiB,EAAE,UAAU,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAE,UAAU,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAc,CAAG;IACpP,OAAO;MAAEQ,iBAAiB;MAAEC,MAAM;MAAEH;IAAqB;EAC7D,CAAC;EACDI,KAAK,EAAE;IACHC,UAAU,EAAE,SAAAA,CAASC,MAAM,EAAEC,MAAM,EAAE;MACjCC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEH,MAAM;MACvD,IAAI,CAACJ,iBAAgB,GAAII,MAAK;IAClC;EACJ,CAAC;EACDI,OAAOA,CAAA,EAAG,CAEV;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}