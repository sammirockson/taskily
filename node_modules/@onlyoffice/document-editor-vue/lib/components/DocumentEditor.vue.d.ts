import { PropType } from 'vue';
import { IConfig } from "../model/config";
declare global {
    interface Window {
        DocsAPI?: any;
        DocEditor?: any;
    }
}
declare const _default: import("vue").DefineComponent<{
    id: {
        type: StringConstructor;
        required: true;
    };
    documentServerUrl: {
        type: StringConstructor;
        required: true;
    };
    config: {
        type: PropType<IConfig>;
        required: true;
    };
    document_fileType: StringConstructor;
    document_title: StringConstructor;
    documentType: StringConstructor;
    editorConfig_lang: StringConstructor;
    height: StringConstructor;
    type: StringConstructor;
    width: StringConstructor;
    onLoadComponentError: FunctionConstructor;
    events_onAppReady: FunctionConstructor;
    events_onDocumentStateChange: FunctionConstructor;
    events_onMetaChange: FunctionConstructor;
    events_onDocumentReady: FunctionConstructor;
    events_onInfo: FunctionConstructor;
    events_onWarning: FunctionConstructor;
    events_onError: FunctionConstructor;
    events_onRequestSharingSettings: FunctionConstructor;
    events_onRequestRename: FunctionConstructor;
    events_onMakeActionLink: FunctionConstructor;
    events_onRequestInsertImage: FunctionConstructor;
    events_onRequestSaveAs: FunctionConstructor;
    /**
     * @deprecated Deprecated since version 7.5, please use events_onRequestSelectSpreadsheet instead.
     */
    events_onRequestMailMergeRecipients: FunctionConstructor;
    /**
     * @deprecated Deprecated since version 7.5, please use events_onRequestSelectDocument instead.
     */
    events_onRequestCompareFile: FunctionConstructor;
    events_onRequestEditRights: FunctionConstructor;
    events_onRequestHistory: FunctionConstructor;
    events_onRequestHistoryClose: FunctionConstructor;
    events_onRequestHistoryData: FunctionConstructor;
    events_onRequestRestore: FunctionConstructor;
    events_onRequestSelectSpreadsheet: FunctionConstructor;
    events_onRequestSelectDocument: FunctionConstructor;
}, unknown, unknown, {}, {
    onLoad(): void;
    onError(errorCode: Number): void;
    onAppReady(): void;
    onChangeProps(): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    id: {
        type: StringConstructor;
        required: true;
    };
    documentServerUrl: {
        type: StringConstructor;
        required: true;
    };
    config: {
        type: PropType<IConfig>;
        required: true;
    };
    document_fileType: StringConstructor;
    document_title: StringConstructor;
    documentType: StringConstructor;
    editorConfig_lang: StringConstructor;
    height: StringConstructor;
    type: StringConstructor;
    width: StringConstructor;
    onLoadComponentError: FunctionConstructor;
    events_onAppReady: FunctionConstructor;
    events_onDocumentStateChange: FunctionConstructor;
    events_onMetaChange: FunctionConstructor;
    events_onDocumentReady: FunctionConstructor;
    events_onInfo: FunctionConstructor;
    events_onWarning: FunctionConstructor;
    events_onError: FunctionConstructor;
    events_onRequestSharingSettings: FunctionConstructor;
    events_onRequestRename: FunctionConstructor;
    events_onMakeActionLink: FunctionConstructor;
    events_onRequestInsertImage: FunctionConstructor;
    events_onRequestSaveAs: FunctionConstructor;
    /**
     * @deprecated Deprecated since version 7.5, please use events_onRequestSelectSpreadsheet instead.
     */
    events_onRequestMailMergeRecipients: FunctionConstructor;
    /**
     * @deprecated Deprecated since version 7.5, please use events_onRequestSelectDocument instead.
     */
    events_onRequestCompareFile: FunctionConstructor;
    events_onRequestEditRights: FunctionConstructor;
    events_onRequestHistory: FunctionConstructor;
    events_onRequestHistoryClose: FunctionConstructor;
    events_onRequestHistoryData: FunctionConstructor;
    events_onRequestRestore: FunctionConstructor;
    events_onRequestSelectSpreadsheet: FunctionConstructor;
    events_onRequestSelectDocument: FunctionConstructor;
}>>, {}, {}>;
export default _default;
